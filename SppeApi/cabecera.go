// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EtiquetaDePedidoGenerada.avsc
 */
package SppeApiEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Cabecera struct {
	OrdenWH string `json:"OrdenWH"`

	OrdenCliente string `json:"OrdenCliente"`

	Remito *UnionNullString `json:"Remito"`

	CodigoDestinatario string `json:"CodigoDestinatario"`

	Acondicionamiento *UnionNullString `json:"Acondicionamiento"`

	AlmacenCliente *UnionNullString `json:"AlmacenCliente"`

	PrioridadApiPlani *UnionNullString `json:"PrioridadApiPlani"`

	CuentaTMS *UnionNullString `json:"CuentaTMS"`

	ContratoTMS *UnionNullString `json:"ContratoTMS"`

	FacturaLegal *UnionNullString `json:"FacturaLegal"`

	FacturaInterna *UnionNullString `json:"FacturaInterna"`

	TieneGestionCobranza *UnionNullString `json:"TieneGestionCobranza"`

	ValorSeguro *UnionNullString `json:"ValorSeguro"`

	AdmiteCambioLoteDirigido *UnionNullString `json:"AdmiteCambioLoteDirigido"`

	AdmitePickingParcial *UnionNullString `json:"AdmitePickingParcial"`

	ImprimeDocumentacion *UnionNullString `json:"ImprimeDocumentacion"`

	NumeroCale *UnionNullString `json:"NumeroCale"`

	Cot *UnionNullString `json:"Cot"`

	ComprobanteIngresosBrutos *UnionNullString `json:"ComprobanteIngresosBrutos"`

	ContratoServicioAlmacenes *UnionNullString `json:"ContratoServicioAlmacenes"`

	Marketplace *UnionNullString `json:"Marketplace"`

	TipoPedidoMatriz *UnionNullString `json:"TipoPedidoMatriz"`

	Contacto *UnionNullString `json:"Contacto"`

	Destinario *UnionNullString `json:"Destinario"`

	DestinatarioCalle *UnionNullString `json:"DestinatarioCalle"`

	DestinarioNumero *UnionNullString `json:"DestinarioNumero"`

	DestinatarioPiso *UnionNullString `json:"DestinatarioPiso"`

	DestinatarioDepartamento *UnionNullString `json:"DestinatarioDepartamento"`

	DestinatarioGLNDNI *UnionNullString `json:"DestinatarioGLNDNI"`

	DestinatarioCiudad *UnionNullString `json:"DestinatarioCiudad"`

	DestinatarioProvincia *UnionNullString `json:"DestinatarioProvincia"`

	DestinatarioCodigoPostal *UnionNullString `json:"DestinatarioCodigoPostal"`

	DestinatarioTelefono *UnionNullString `json:"DestinatarioTelefono"`

	DestinatarioEmail *UnionNullString `json:"DestinatarioEmail"`

	OrigenCiudad *UnionNullString `json:"OrigenCiudad"`

	OrigenCodigoPostal *UnionNullString `json:"OrigenCodigoPostal"`

	OrigenCalle *UnionNullString `json:"OrigenCalle"`

	OrigenNumero *UnionNullString `json:"OrigenNumero"`

	OrigenPiso *UnionNullString `json:"OrigenPiso"`

	OrigenDepartamento *UnionNullString `json:"OrigenDepartamento"`

	OrigenEmail *UnionNullString `json:"OrigenEmail"`

	OrigenTelefono *UnionNullString `json:"OrigenTelefono"`

	OrigenRegion *UnionNullString `json:"OrigenRegion"`

	RemitenteCiudad *UnionNullString `json:"RemitenteCiudad"`

	RemitenteCodigoPostal *UnionNullString `json:"RemitenteCodigoPostal"`

	RemitenteCalle *UnionNullString `json:"RemitenteCalle"`

	RemitenteNumero *UnionNullString `json:"RemitenteNumero"`

	RemitentePiso *UnionNullString `json:"RemitentePiso"`

	RemitenteDepartamento *UnionNullString `json:"RemitenteDepartamento"`

	RemitenteEmail *UnionNullString `json:"RemitenteEmail"`

	RemitenteTelefono *UnionNullString `json:"RemitenteTelefono"`

	RemitenteDni *UnionNullString `json:"RemitenteDni"`

	RemitenteTipo *UnionNullString `json:"RemitenteTipo"`

	OrdenCompra *UnionNullString `json:"OrdenCompra"`

	ClientePadre string `json:"ClientePadre"`

	CodigoEstado string `json:"CodigoEstado"`

	CodigoDescripcion *UnionNullString `json:"CodigoDescripcion"`

	TipoPedidoCodigo string `json:"TipoPedidoCodigo"`

	TipoPedidoDescripcion *UnionNullString `json:"TipoPedidoDescripcion"`

	TipoGrilla *UnionNullString `json:"TipoGrilla"`

	FechaEnvioFacturar *UnionNullLong `json:"FechaEnvioFacturar"`

	FechaFacturacion *UnionNullLong `json:"FechaFacturacion"`

	PrecioValorFC *UnionNullString `json:"PrecioValorFC"`

	NumeroEnvio *UnionNullString `json:"NumeroEnvio"`

	NotasPedido *UnionNullString `json:"NotasPedido"`

	FechaCita *UnionNullLong `json:"FechaCita"`

	FechaEntrega *UnionNullLong `json:"FechaEntrega"`

	FechaExpedicionSolicitada *UnionNullLong `json:"FechaExpedicionSolicitada"`

	FechaExpedicionProgramada *UnionNullLong `json:"FechaExpedicionProgramada"`

	FechaExpedicionPrometida *UnionNullLong `json:"FechaExpedicionPrometida"`

	FechaEntregaPlanificada *UnionNullLong `json:"FechaEntregaPlanificada"`

	FechaEntregaProgramada *UnionNullLong `json:"FechaEntregaProgramada"`

	GrupoOrdenes string `json:"GrupoOrdenes"`

	FranjaHorario *UnionNullString `json:"FranjaHorario"`

	EstadoOTAcondi *UnionNullString `json:"EstadoOTAcondi"`

	EstadoOTTraz *UnionNullString `json:"EstadoOTTraz"`

	FechaEvento *UnionNullLong `json:"FechaEvento"`

	CantidadTotal float32 `json:"CantidadTotal"`

	CantidadExpedidaTotal float32 `json:"CantidadExpedidaTotal"`

	CantidadPickeadaTotal float32 `json:"CantidadPickeadaTotal"`

	ExtUdfStr20 string `json:"ExtUdfStr20"`
}

const CabeceraAvroCRC64Fingerprint = "<5\xa8\xc8*\xa3;\x1c"

func NewCabecera() Cabecera {
	r := Cabecera{}
	return r
}

func DeserializeCabecera(r io.Reader) (Cabecera, error) {
	t := NewCabecera()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCabeceraFromSchema(r io.Reader, schema string) (Cabecera, error) {
	t := NewCabecera()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCabecera(r Cabecera, w io.Writer) error {
	var err error
	err = vm.WriteString(r.OrdenWH, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.OrdenCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Remito, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.CodigoDestinatario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Acondicionamiento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AlmacenCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PrioridadApiPlani, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CuentaTMS, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ContratoTMS, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FacturaLegal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FacturaInterna, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TieneGestionCobranza, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ValorSeguro, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AdmiteCambioLoteDirigido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AdmitePickingParcial, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ImprimeDocumentacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroCale, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Cot, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ComprobanteIngresosBrutos, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ContratoServicioAlmacenes, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Marketplace, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoPedidoMatriz, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Contacto, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Destinario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioCalle, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinarioNumero, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioPiso, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioDepartamento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioGLNDNI, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioCiudad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioProvincia, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioCodigoPostal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioTelefono, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioEmail, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenCiudad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenCodigoPostal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenCalle, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenNumero, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenPiso, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenDepartamento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenEmail, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenTelefono, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrigenRegion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteCiudad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteCodigoPostal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteCalle, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteNumero, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitentePiso, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteDepartamento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteEmail, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteTelefono, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteDni, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RemitenteTipo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrdenCompra, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.ClientePadre, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.CodigoEstado, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoDescripcion, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.TipoPedidoCodigo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoPedidoDescripcion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoGrilla, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEnvioFacturar, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaFacturacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PrecioValorFC, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroEnvio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NotasPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaCita, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEntrega, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaExpedicionSolicitada, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaExpedicionProgramada, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaExpedicionPrometida, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEntregaPlanificada, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEntregaProgramada, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.GrupoOrdenes, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FranjaHorario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstadoOTAcondi, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstadoOTTraz, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEvento, w)
	if err != nil {
		return err
	}
	err = vm.WriteFloat(r.CantidadTotal, w)
	if err != nil {
		return err
	}
	err = vm.WriteFloat(r.CantidadExpedidaTotal, w)
	if err != nil {
		return err
	}
	err = vm.WriteFloat(r.CantidadPickeadaTotal, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.ExtUdfStr20, w)
	if err != nil {
		return err
	}
	return err
}

func (r Cabecera) Serialize(w io.Writer) error {
	return writeCabecera(r, w)
}

func (r Cabecera) Schema() string {
	return "{\"fields\":[{\"name\":\"OrdenWH\",\"type\":\"string\"},{\"name\":\"OrdenCliente\",\"type\":\"string\"},{\"name\":\"Remito\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoDestinatario\",\"type\":\"string\"},{\"name\":\"Acondicionamiento\",\"type\":[\"null\",\"string\"]},{\"name\":\"AlmacenCliente\",\"type\":[\"null\",\"string\"]},{\"name\":\"PrioridadApiPlani\",\"type\":[\"null\",\"string\"]},{\"name\":\"CuentaTMS\",\"type\":[\"null\",\"string\"]},{\"name\":\"ContratoTMS\",\"type\":[\"null\",\"string\"]},{\"name\":\"FacturaLegal\",\"type\":[\"null\",\"string\"]},{\"name\":\"FacturaInterna\",\"type\":[\"null\",\"string\"]},{\"name\":\"TieneGestionCobranza\",\"type\":[\"null\",\"string\"]},{\"name\":\"ValorSeguro\",\"type\":[\"null\",\"string\"]},{\"name\":\"AdmiteCambioLoteDirigido\",\"type\":[\"null\",\"string\"]},{\"name\":\"AdmitePickingParcial\",\"type\":[\"null\",\"string\"]},{\"name\":\"ImprimeDocumentacion\",\"type\":[\"null\",\"string\"]},{\"name\":\"NumeroCale\",\"type\":[\"null\",\"string\"]},{\"name\":\"Cot\",\"type\":[\"null\",\"string\"]},{\"name\":\"ComprobanteIngresosBrutos\",\"type\":[\"null\",\"string\"]},{\"name\":\"ContratoServicioAlmacenes\",\"type\":[\"null\",\"string\"]},{\"name\":\"Marketplace\",\"type\":[\"null\",\"string\"]},{\"name\":\"TipoPedidoMatriz\",\"type\":[\"null\",\"string\"]},{\"name\":\"Contacto\",\"type\":[\"null\",\"string\"]},{\"name\":\"Destinario\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioCalle\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinarioNumero\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioPiso\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioDepartamento\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioGLNDNI\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioCiudad\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioProvincia\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioCodigoPostal\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioTelefono\",\"type\":[\"null\",\"string\"]},{\"name\":\"DestinatarioEmail\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenCiudad\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenCodigoPostal\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenCalle\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenNumero\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenPiso\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenDepartamento\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenEmail\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenTelefono\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrigenRegion\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteCiudad\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteCodigoPostal\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteCalle\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteNumero\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitentePiso\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteDepartamento\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteEmail\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteTelefono\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteDni\",\"type\":[\"null\",\"string\"]},{\"name\":\"RemitenteTipo\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrdenCompra\",\"type\":[\"null\",\"string\"]},{\"name\":\"ClientePadre\",\"type\":\"string\"},{\"name\":\"CodigoEstado\",\"type\":\"string\"},{\"name\":\"CodigoDescripcion\",\"type\":[\"null\",\"string\"]},{\"name\":\"TipoPedidoCodigo\",\"type\":\"string\"},{\"name\":\"TipoPedidoDescripcion\",\"type\":[\"null\",\"string\"]},{\"name\":\"TipoGrilla\",\"type\":[\"null\",\"string\"]},{\"name\":\"FechaEnvioFacturar\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"FechaFacturacion\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"PrecioValorFC\",\"type\":[\"null\",\"string\"]},{\"name\":\"NumeroEnvio\",\"type\":[\"null\",\"string\"]},{\"name\":\"NotasPedido\",\"type\":[\"null\",\"string\"]},{\"name\":\"FechaCita\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"FechaEntrega\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"FechaExpedicionSolicitada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"FechaExpedicionProgramada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"FechaExpedicionPrometida\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"FechaEntregaPlanificada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"FechaEntregaProgramada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"GrupoOrdenes\",\"type\":\"string\"},{\"name\":\"FranjaHorario\",\"type\":[\"null\",\"string\"]},{\"name\":\"EstadoOTAcondi\",\"type\":[\"null\",\"string\"]},{\"name\":\"EstadoOTTraz\",\"type\":[\"null\",\"string\"]},{\"name\":\"FechaEvento\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"CantidadTotal\",\"type\":\"float\"},{\"name\":\"CantidadExpedidaTotal\",\"type\":\"float\"},{\"name\":\"CantidadPickeadaTotal\",\"type\":\"float\"},{\"name\":\"ExtUdfStr20\",\"type\":\"string\"}],\"name\":\"Andreani.SppeApi.Events.Common.Cabecera\",\"type\":\"record\"}"
}

func (r Cabecera) SchemaName() string {
	return "Andreani.SppeApi.Events.Common.Cabecera"
}

func (_ Cabecera) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Cabecera) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Cabecera) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Cabecera) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Cabecera) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Cabecera) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Cabecera) SetString(v string)   { panic("Unsupported operation") }
func (_ Cabecera) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Cabecera) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.OrdenWH}

		return w

	case 1:
		w := types.String{Target: &r.OrdenCliente}

		return w

	case 2:
		r.Remito = NewUnionNullString()

		return r.Remito
	case 3:
		w := types.String{Target: &r.CodigoDestinatario}

		return w

	case 4:
		r.Acondicionamiento = NewUnionNullString()

		return r.Acondicionamiento
	case 5:
		r.AlmacenCliente = NewUnionNullString()

		return r.AlmacenCliente
	case 6:
		r.PrioridadApiPlani = NewUnionNullString()

		return r.PrioridadApiPlani
	case 7:
		r.CuentaTMS = NewUnionNullString()

		return r.CuentaTMS
	case 8:
		r.ContratoTMS = NewUnionNullString()

		return r.ContratoTMS
	case 9:
		r.FacturaLegal = NewUnionNullString()

		return r.FacturaLegal
	case 10:
		r.FacturaInterna = NewUnionNullString()

		return r.FacturaInterna
	case 11:
		r.TieneGestionCobranza = NewUnionNullString()

		return r.TieneGestionCobranza
	case 12:
		r.ValorSeguro = NewUnionNullString()

		return r.ValorSeguro
	case 13:
		r.AdmiteCambioLoteDirigido = NewUnionNullString()

		return r.AdmiteCambioLoteDirigido
	case 14:
		r.AdmitePickingParcial = NewUnionNullString()

		return r.AdmitePickingParcial
	case 15:
		r.ImprimeDocumentacion = NewUnionNullString()

		return r.ImprimeDocumentacion
	case 16:
		r.NumeroCale = NewUnionNullString()

		return r.NumeroCale
	case 17:
		r.Cot = NewUnionNullString()

		return r.Cot
	case 18:
		r.ComprobanteIngresosBrutos = NewUnionNullString()

		return r.ComprobanteIngresosBrutos
	case 19:
		r.ContratoServicioAlmacenes = NewUnionNullString()

		return r.ContratoServicioAlmacenes
	case 20:
		r.Marketplace = NewUnionNullString()

		return r.Marketplace
	case 21:
		r.TipoPedidoMatriz = NewUnionNullString()

		return r.TipoPedidoMatriz
	case 22:
		r.Contacto = NewUnionNullString()

		return r.Contacto
	case 23:
		r.Destinario = NewUnionNullString()

		return r.Destinario
	case 24:
		r.DestinatarioCalle = NewUnionNullString()

		return r.DestinatarioCalle
	case 25:
		r.DestinarioNumero = NewUnionNullString()

		return r.DestinarioNumero
	case 26:
		r.DestinatarioPiso = NewUnionNullString()

		return r.DestinatarioPiso
	case 27:
		r.DestinatarioDepartamento = NewUnionNullString()

		return r.DestinatarioDepartamento
	case 28:
		r.DestinatarioGLNDNI = NewUnionNullString()

		return r.DestinatarioGLNDNI
	case 29:
		r.DestinatarioCiudad = NewUnionNullString()

		return r.DestinatarioCiudad
	case 30:
		r.DestinatarioProvincia = NewUnionNullString()

		return r.DestinatarioProvincia
	case 31:
		r.DestinatarioCodigoPostal = NewUnionNullString()

		return r.DestinatarioCodigoPostal
	case 32:
		r.DestinatarioTelefono = NewUnionNullString()

		return r.DestinatarioTelefono
	case 33:
		r.DestinatarioEmail = NewUnionNullString()

		return r.DestinatarioEmail
	case 34:
		r.OrigenCiudad = NewUnionNullString()

		return r.OrigenCiudad
	case 35:
		r.OrigenCodigoPostal = NewUnionNullString()

		return r.OrigenCodigoPostal
	case 36:
		r.OrigenCalle = NewUnionNullString()

		return r.OrigenCalle
	case 37:
		r.OrigenNumero = NewUnionNullString()

		return r.OrigenNumero
	case 38:
		r.OrigenPiso = NewUnionNullString()

		return r.OrigenPiso
	case 39:
		r.OrigenDepartamento = NewUnionNullString()

		return r.OrigenDepartamento
	case 40:
		r.OrigenEmail = NewUnionNullString()

		return r.OrigenEmail
	case 41:
		r.OrigenTelefono = NewUnionNullString()

		return r.OrigenTelefono
	case 42:
		r.OrigenRegion = NewUnionNullString()

		return r.OrigenRegion
	case 43:
		r.RemitenteCiudad = NewUnionNullString()

		return r.RemitenteCiudad
	case 44:
		r.RemitenteCodigoPostal = NewUnionNullString()

		return r.RemitenteCodigoPostal
	case 45:
		r.RemitenteCalle = NewUnionNullString()

		return r.RemitenteCalle
	case 46:
		r.RemitenteNumero = NewUnionNullString()

		return r.RemitenteNumero
	case 47:
		r.RemitentePiso = NewUnionNullString()

		return r.RemitentePiso
	case 48:
		r.RemitenteDepartamento = NewUnionNullString()

		return r.RemitenteDepartamento
	case 49:
		r.RemitenteEmail = NewUnionNullString()

		return r.RemitenteEmail
	case 50:
		r.RemitenteTelefono = NewUnionNullString()

		return r.RemitenteTelefono
	case 51:
		r.RemitenteDni = NewUnionNullString()

		return r.RemitenteDni
	case 52:
		r.RemitenteTipo = NewUnionNullString()

		return r.RemitenteTipo
	case 53:
		r.OrdenCompra = NewUnionNullString()

		return r.OrdenCompra
	case 54:
		w := types.String{Target: &r.ClientePadre}

		return w

	case 55:
		w := types.String{Target: &r.CodigoEstado}

		return w

	case 56:
		r.CodigoDescripcion = NewUnionNullString()

		return r.CodigoDescripcion
	case 57:
		w := types.String{Target: &r.TipoPedidoCodigo}

		return w

	case 58:
		r.TipoPedidoDescripcion = NewUnionNullString()

		return r.TipoPedidoDescripcion
	case 59:
		r.TipoGrilla = NewUnionNullString()

		return r.TipoGrilla
	case 60:
		r.FechaEnvioFacturar = NewUnionNullLong()

		return r.FechaEnvioFacturar
	case 61:
		r.FechaFacturacion = NewUnionNullLong()

		return r.FechaFacturacion
	case 62:
		r.PrecioValorFC = NewUnionNullString()

		return r.PrecioValorFC
	case 63:
		r.NumeroEnvio = NewUnionNullString()

		return r.NumeroEnvio
	case 64:
		r.NotasPedido = NewUnionNullString()

		return r.NotasPedido
	case 65:
		r.FechaCita = NewUnionNullLong()

		return r.FechaCita
	case 66:
		r.FechaEntrega = NewUnionNullLong()

		return r.FechaEntrega
	case 67:
		r.FechaExpedicionSolicitada = NewUnionNullLong()

		return r.FechaExpedicionSolicitada
	case 68:
		r.FechaExpedicionProgramada = NewUnionNullLong()

		return r.FechaExpedicionProgramada
	case 69:
		r.FechaExpedicionPrometida = NewUnionNullLong()

		return r.FechaExpedicionPrometida
	case 70:
		r.FechaEntregaPlanificada = NewUnionNullLong()

		return r.FechaEntregaPlanificada
	case 71:
		r.FechaEntregaProgramada = NewUnionNullLong()

		return r.FechaEntregaProgramada
	case 72:
		w := types.String{Target: &r.GrupoOrdenes}

		return w

	case 73:
		r.FranjaHorario = NewUnionNullString()

		return r.FranjaHorario
	case 74:
		r.EstadoOTAcondi = NewUnionNullString()

		return r.EstadoOTAcondi
	case 75:
		r.EstadoOTTraz = NewUnionNullString()

		return r.EstadoOTTraz
	case 76:
		r.FechaEvento = NewUnionNullLong()

		return r.FechaEvento
	case 77:
		w := types.Float{Target: &r.CantidadTotal}

		return w

	case 78:
		w := types.Float{Target: &r.CantidadExpedidaTotal}

		return w

	case 79:
		w := types.Float{Target: &r.CantidadPickeadaTotal}

		return w

	case 80:
		w := types.String{Target: &r.ExtUdfStr20}

		return w

	}
	panic("Unknown field index")
}

func (r *Cabecera) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *Cabecera) NullField(i int) {
	switch i {
	case 2:
		r.Remito = nil
		return
	case 4:
		r.Acondicionamiento = nil
		return
	case 5:
		r.AlmacenCliente = nil
		return
	case 6:
		r.PrioridadApiPlani = nil
		return
	case 7:
		r.CuentaTMS = nil
		return
	case 8:
		r.ContratoTMS = nil
		return
	case 9:
		r.FacturaLegal = nil
		return
	case 10:
		r.FacturaInterna = nil
		return
	case 11:
		r.TieneGestionCobranza = nil
		return
	case 12:
		r.ValorSeguro = nil
		return
	case 13:
		r.AdmiteCambioLoteDirigido = nil
		return
	case 14:
		r.AdmitePickingParcial = nil
		return
	case 15:
		r.ImprimeDocumentacion = nil
		return
	case 16:
		r.NumeroCale = nil
		return
	case 17:
		r.Cot = nil
		return
	case 18:
		r.ComprobanteIngresosBrutos = nil
		return
	case 19:
		r.ContratoServicioAlmacenes = nil
		return
	case 20:
		r.Marketplace = nil
		return
	case 21:
		r.TipoPedidoMatriz = nil
		return
	case 22:
		r.Contacto = nil
		return
	case 23:
		r.Destinario = nil
		return
	case 24:
		r.DestinatarioCalle = nil
		return
	case 25:
		r.DestinarioNumero = nil
		return
	case 26:
		r.DestinatarioPiso = nil
		return
	case 27:
		r.DestinatarioDepartamento = nil
		return
	case 28:
		r.DestinatarioGLNDNI = nil
		return
	case 29:
		r.DestinatarioCiudad = nil
		return
	case 30:
		r.DestinatarioProvincia = nil
		return
	case 31:
		r.DestinatarioCodigoPostal = nil
		return
	case 32:
		r.DestinatarioTelefono = nil
		return
	case 33:
		r.DestinatarioEmail = nil
		return
	case 34:
		r.OrigenCiudad = nil
		return
	case 35:
		r.OrigenCodigoPostal = nil
		return
	case 36:
		r.OrigenCalle = nil
		return
	case 37:
		r.OrigenNumero = nil
		return
	case 38:
		r.OrigenPiso = nil
		return
	case 39:
		r.OrigenDepartamento = nil
		return
	case 40:
		r.OrigenEmail = nil
		return
	case 41:
		r.OrigenTelefono = nil
		return
	case 42:
		r.OrigenRegion = nil
		return
	case 43:
		r.RemitenteCiudad = nil
		return
	case 44:
		r.RemitenteCodigoPostal = nil
		return
	case 45:
		r.RemitenteCalle = nil
		return
	case 46:
		r.RemitenteNumero = nil
		return
	case 47:
		r.RemitentePiso = nil
		return
	case 48:
		r.RemitenteDepartamento = nil
		return
	case 49:
		r.RemitenteEmail = nil
		return
	case 50:
		r.RemitenteTelefono = nil
		return
	case 51:
		r.RemitenteDni = nil
		return
	case 52:
		r.RemitenteTipo = nil
		return
	case 53:
		r.OrdenCompra = nil
		return
	case 56:
		r.CodigoDescripcion = nil
		return
	case 58:
		r.TipoPedidoDescripcion = nil
		return
	case 59:
		r.TipoGrilla = nil
		return
	case 60:
		r.FechaEnvioFacturar = nil
		return
	case 61:
		r.FechaFacturacion = nil
		return
	case 62:
		r.PrecioValorFC = nil
		return
	case 63:
		r.NumeroEnvio = nil
		return
	case 64:
		r.NotasPedido = nil
		return
	case 65:
		r.FechaCita = nil
		return
	case 66:
		r.FechaEntrega = nil
		return
	case 67:
		r.FechaExpedicionSolicitada = nil
		return
	case 68:
		r.FechaExpedicionProgramada = nil
		return
	case 69:
		r.FechaExpedicionPrometida = nil
		return
	case 70:
		r.FechaEntregaPlanificada = nil
		return
	case 71:
		r.FechaEntregaProgramada = nil
		return
	case 73:
		r.FranjaHorario = nil
		return
	case 74:
		r.EstadoOTAcondi = nil
		return
	case 75:
		r.EstadoOTTraz = nil
		return
	case 76:
		r.FechaEvento = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Cabecera) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Cabecera) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Cabecera) HintSize(int)                     { panic("Unsupported operation") }
func (_ Cabecera) Finalize()                        {}

func (_ Cabecera) AvroCRC64Fingerprint() []byte {
	return []byte(CabeceraAvroCRC64Fingerprint)
}

func (r Cabecera) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["OrdenWH"], err = json.Marshal(r.OrdenWH)
	if err != nil {
		return nil, err
	}
	output["OrdenCliente"], err = json.Marshal(r.OrdenCliente)
	if err != nil {
		return nil, err
	}
	output["Remito"], err = json.Marshal(r.Remito)
	if err != nil {
		return nil, err
	}
	output["CodigoDestinatario"], err = json.Marshal(r.CodigoDestinatario)
	if err != nil {
		return nil, err
	}
	output["Acondicionamiento"], err = json.Marshal(r.Acondicionamiento)
	if err != nil {
		return nil, err
	}
	output["AlmacenCliente"], err = json.Marshal(r.AlmacenCliente)
	if err != nil {
		return nil, err
	}
	output["PrioridadApiPlani"], err = json.Marshal(r.PrioridadApiPlani)
	if err != nil {
		return nil, err
	}
	output["CuentaTMS"], err = json.Marshal(r.CuentaTMS)
	if err != nil {
		return nil, err
	}
	output["ContratoTMS"], err = json.Marshal(r.ContratoTMS)
	if err != nil {
		return nil, err
	}
	output["FacturaLegal"], err = json.Marshal(r.FacturaLegal)
	if err != nil {
		return nil, err
	}
	output["FacturaInterna"], err = json.Marshal(r.FacturaInterna)
	if err != nil {
		return nil, err
	}
	output["TieneGestionCobranza"], err = json.Marshal(r.TieneGestionCobranza)
	if err != nil {
		return nil, err
	}
	output["ValorSeguro"], err = json.Marshal(r.ValorSeguro)
	if err != nil {
		return nil, err
	}
	output["AdmiteCambioLoteDirigido"], err = json.Marshal(r.AdmiteCambioLoteDirigido)
	if err != nil {
		return nil, err
	}
	output["AdmitePickingParcial"], err = json.Marshal(r.AdmitePickingParcial)
	if err != nil {
		return nil, err
	}
	output["ImprimeDocumentacion"], err = json.Marshal(r.ImprimeDocumentacion)
	if err != nil {
		return nil, err
	}
	output["NumeroCale"], err = json.Marshal(r.NumeroCale)
	if err != nil {
		return nil, err
	}
	output["Cot"], err = json.Marshal(r.Cot)
	if err != nil {
		return nil, err
	}
	output["ComprobanteIngresosBrutos"], err = json.Marshal(r.ComprobanteIngresosBrutos)
	if err != nil {
		return nil, err
	}
	output["ContratoServicioAlmacenes"], err = json.Marshal(r.ContratoServicioAlmacenes)
	if err != nil {
		return nil, err
	}
	output["Marketplace"], err = json.Marshal(r.Marketplace)
	if err != nil {
		return nil, err
	}
	output["TipoPedidoMatriz"], err = json.Marshal(r.TipoPedidoMatriz)
	if err != nil {
		return nil, err
	}
	output["Contacto"], err = json.Marshal(r.Contacto)
	if err != nil {
		return nil, err
	}
	output["Destinario"], err = json.Marshal(r.Destinario)
	if err != nil {
		return nil, err
	}
	output["DestinatarioCalle"], err = json.Marshal(r.DestinatarioCalle)
	if err != nil {
		return nil, err
	}
	output["DestinarioNumero"], err = json.Marshal(r.DestinarioNumero)
	if err != nil {
		return nil, err
	}
	output["DestinatarioPiso"], err = json.Marshal(r.DestinatarioPiso)
	if err != nil {
		return nil, err
	}
	output["DestinatarioDepartamento"], err = json.Marshal(r.DestinatarioDepartamento)
	if err != nil {
		return nil, err
	}
	output["DestinatarioGLNDNI"], err = json.Marshal(r.DestinatarioGLNDNI)
	if err != nil {
		return nil, err
	}
	output["DestinatarioCiudad"], err = json.Marshal(r.DestinatarioCiudad)
	if err != nil {
		return nil, err
	}
	output["DestinatarioProvincia"], err = json.Marshal(r.DestinatarioProvincia)
	if err != nil {
		return nil, err
	}
	output["DestinatarioCodigoPostal"], err = json.Marshal(r.DestinatarioCodigoPostal)
	if err != nil {
		return nil, err
	}
	output["DestinatarioTelefono"], err = json.Marshal(r.DestinatarioTelefono)
	if err != nil {
		return nil, err
	}
	output["DestinatarioEmail"], err = json.Marshal(r.DestinatarioEmail)
	if err != nil {
		return nil, err
	}
	output["OrigenCiudad"], err = json.Marshal(r.OrigenCiudad)
	if err != nil {
		return nil, err
	}
	output["OrigenCodigoPostal"], err = json.Marshal(r.OrigenCodigoPostal)
	if err != nil {
		return nil, err
	}
	output["OrigenCalle"], err = json.Marshal(r.OrigenCalle)
	if err != nil {
		return nil, err
	}
	output["OrigenNumero"], err = json.Marshal(r.OrigenNumero)
	if err != nil {
		return nil, err
	}
	output["OrigenPiso"], err = json.Marshal(r.OrigenPiso)
	if err != nil {
		return nil, err
	}
	output["OrigenDepartamento"], err = json.Marshal(r.OrigenDepartamento)
	if err != nil {
		return nil, err
	}
	output["OrigenEmail"], err = json.Marshal(r.OrigenEmail)
	if err != nil {
		return nil, err
	}
	output["OrigenTelefono"], err = json.Marshal(r.OrigenTelefono)
	if err != nil {
		return nil, err
	}
	output["OrigenRegion"], err = json.Marshal(r.OrigenRegion)
	if err != nil {
		return nil, err
	}
	output["RemitenteCiudad"], err = json.Marshal(r.RemitenteCiudad)
	if err != nil {
		return nil, err
	}
	output["RemitenteCodigoPostal"], err = json.Marshal(r.RemitenteCodigoPostal)
	if err != nil {
		return nil, err
	}
	output["RemitenteCalle"], err = json.Marshal(r.RemitenteCalle)
	if err != nil {
		return nil, err
	}
	output["RemitenteNumero"], err = json.Marshal(r.RemitenteNumero)
	if err != nil {
		return nil, err
	}
	output["RemitentePiso"], err = json.Marshal(r.RemitentePiso)
	if err != nil {
		return nil, err
	}
	output["RemitenteDepartamento"], err = json.Marshal(r.RemitenteDepartamento)
	if err != nil {
		return nil, err
	}
	output["RemitenteEmail"], err = json.Marshal(r.RemitenteEmail)
	if err != nil {
		return nil, err
	}
	output["RemitenteTelefono"], err = json.Marshal(r.RemitenteTelefono)
	if err != nil {
		return nil, err
	}
	output["RemitenteDni"], err = json.Marshal(r.RemitenteDni)
	if err != nil {
		return nil, err
	}
	output["RemitenteTipo"], err = json.Marshal(r.RemitenteTipo)
	if err != nil {
		return nil, err
	}
	output["OrdenCompra"], err = json.Marshal(r.OrdenCompra)
	if err != nil {
		return nil, err
	}
	output["ClientePadre"], err = json.Marshal(r.ClientePadre)
	if err != nil {
		return nil, err
	}
	output["CodigoEstado"], err = json.Marshal(r.CodigoEstado)
	if err != nil {
		return nil, err
	}
	output["CodigoDescripcion"], err = json.Marshal(r.CodigoDescripcion)
	if err != nil {
		return nil, err
	}
	output["TipoPedidoCodigo"], err = json.Marshal(r.TipoPedidoCodigo)
	if err != nil {
		return nil, err
	}
	output["TipoPedidoDescripcion"], err = json.Marshal(r.TipoPedidoDescripcion)
	if err != nil {
		return nil, err
	}
	output["TipoGrilla"], err = json.Marshal(r.TipoGrilla)
	if err != nil {
		return nil, err
	}
	output["FechaEnvioFacturar"], err = json.Marshal(r.FechaEnvioFacturar)
	if err != nil {
		return nil, err
	}
	output["FechaFacturacion"], err = json.Marshal(r.FechaFacturacion)
	if err != nil {
		return nil, err
	}
	output["PrecioValorFC"], err = json.Marshal(r.PrecioValorFC)
	if err != nil {
		return nil, err
	}
	output["NumeroEnvio"], err = json.Marshal(r.NumeroEnvio)
	if err != nil {
		return nil, err
	}
	output["NotasPedido"], err = json.Marshal(r.NotasPedido)
	if err != nil {
		return nil, err
	}
	output["FechaCita"], err = json.Marshal(r.FechaCita)
	if err != nil {
		return nil, err
	}
	output["FechaEntrega"], err = json.Marshal(r.FechaEntrega)
	if err != nil {
		return nil, err
	}
	output["FechaExpedicionSolicitada"], err = json.Marshal(r.FechaExpedicionSolicitada)
	if err != nil {
		return nil, err
	}
	output["FechaExpedicionProgramada"], err = json.Marshal(r.FechaExpedicionProgramada)
	if err != nil {
		return nil, err
	}
	output["FechaExpedicionPrometida"], err = json.Marshal(r.FechaExpedicionPrometida)
	if err != nil {
		return nil, err
	}
	output["FechaEntregaPlanificada"], err = json.Marshal(r.FechaEntregaPlanificada)
	if err != nil {
		return nil, err
	}
	output["FechaEntregaProgramada"], err = json.Marshal(r.FechaEntregaProgramada)
	if err != nil {
		return nil, err
	}
	output["GrupoOrdenes"], err = json.Marshal(r.GrupoOrdenes)
	if err != nil {
		return nil, err
	}
	output["FranjaHorario"], err = json.Marshal(r.FranjaHorario)
	if err != nil {
		return nil, err
	}
	output["EstadoOTAcondi"], err = json.Marshal(r.EstadoOTAcondi)
	if err != nil {
		return nil, err
	}
	output["EstadoOTTraz"], err = json.Marshal(r.EstadoOTTraz)
	if err != nil {
		return nil, err
	}
	output["FechaEvento"], err = json.Marshal(r.FechaEvento)
	if err != nil {
		return nil, err
	}
	output["CantidadTotal"], err = json.Marshal(r.CantidadTotal)
	if err != nil {
		return nil, err
	}
	output["CantidadExpedidaTotal"], err = json.Marshal(r.CantidadExpedidaTotal)
	if err != nil {
		return nil, err
	}
	output["CantidadPickeadaTotal"], err = json.Marshal(r.CantidadPickeadaTotal)
	if err != nil {
		return nil, err
	}
	output["ExtUdfStr20"], err = json.Marshal(r.ExtUdfStr20)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Cabecera) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["OrdenWH"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenWH); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrdenWH")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrdenCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenCliente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrdenCliente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Remito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Remito); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Remito")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoDestinatario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoDestinatario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoDestinatario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Acondicionamiento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Acondicionamiento); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Acondicionamiento")
	}
	val = func() json.RawMessage {
		if v, ok := fields["AlmacenCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AlmacenCliente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for AlmacenCliente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["PrioridadApiPlani"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PrioridadApiPlani); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for PrioridadApiPlani")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CuentaTMS"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CuentaTMS); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CuentaTMS")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ContratoTMS"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContratoTMS); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ContratoTMS")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FacturaLegal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FacturaLegal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FacturaLegal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FacturaInterna"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FacturaInterna); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FacturaInterna")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TieneGestionCobranza"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TieneGestionCobranza); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TieneGestionCobranza")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ValorSeguro"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ValorSeguro); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ValorSeguro")
	}
	val = func() json.RawMessage {
		if v, ok := fields["AdmiteCambioLoteDirigido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AdmiteCambioLoteDirigido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for AdmiteCambioLoteDirigido")
	}
	val = func() json.RawMessage {
		if v, ok := fields["AdmitePickingParcial"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AdmitePickingParcial); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for AdmitePickingParcial")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ImprimeDocumentacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ImprimeDocumentacion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ImprimeDocumentacion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroCale"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroCale); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroCale")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Cot"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cot); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Cot")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ComprobanteIngresosBrutos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ComprobanteIngresosBrutos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ComprobanteIngresosBrutos")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ContratoServicioAlmacenes"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContratoServicioAlmacenes); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ContratoServicioAlmacenes")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Marketplace"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Marketplace); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Marketplace")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoPedidoMatriz"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPedidoMatriz); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TipoPedidoMatriz")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Contacto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contacto); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Contacto")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Destinario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Destinario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Destinario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioCalle"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioCalle); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioCalle")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinarioNumero"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinarioNumero); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinarioNumero")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioPiso"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioPiso); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioPiso")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioDepartamento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioDepartamento); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioDepartamento")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioGLNDNI"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioGLNDNI); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioGLNDNI")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioCiudad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioCiudad); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioCiudad")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioProvincia"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioProvincia); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioProvincia")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioCodigoPostal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioCodigoPostal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioCodigoPostal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioTelefono"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioTelefono); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioTelefono")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioEmail"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioEmail); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioEmail")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenCiudad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenCiudad); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenCiudad")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenCodigoPostal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenCodigoPostal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenCodigoPostal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenCalle"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenCalle); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenCalle")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenNumero"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenNumero); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenNumero")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenPiso"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenPiso); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenPiso")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenDepartamento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenDepartamento); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenDepartamento")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenEmail"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenEmail); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenEmail")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenTelefono"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenTelefono); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenTelefono")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrigenRegion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrigenRegion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrigenRegion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteCiudad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteCiudad); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteCiudad")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteCodigoPostal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteCodigoPostal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteCodigoPostal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteCalle"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteCalle); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteCalle")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteNumero"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteNumero); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteNumero")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitentePiso"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitentePiso); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitentePiso")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteDepartamento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteDepartamento); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteDepartamento")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteEmail"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteEmail); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteEmail")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteTelefono"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteTelefono); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteTelefono")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteDni"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteDni); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteDni")
	}
	val = func() json.RawMessage {
		if v, ok := fields["RemitenteTipo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RemitenteTipo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for RemitenteTipo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrdenCompra"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenCompra); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrdenCompra")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ClientePadre"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ClientePadre); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ClientePadre")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoEstado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoEstado); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoEstado")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoDescripcion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoDescripcion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoPedidoCodigo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPedidoCodigo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TipoPedidoCodigo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoPedidoDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPedidoDescripcion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TipoPedidoDescripcion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoGrilla"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoGrilla); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TipoGrilla")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEnvioFacturar"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEnvioFacturar); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaEnvioFacturar")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaFacturacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaFacturacion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaFacturacion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["PrecioValorFC"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PrecioValorFC); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for PrecioValorFC")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroEnvio); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroEnvio")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NotasPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NotasPedido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NotasPedido")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaCita"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaCita); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaCita")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEntrega"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEntrega); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaEntrega")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaExpedicionSolicitada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaExpedicionSolicitada); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaExpedicionSolicitada")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaExpedicionProgramada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaExpedicionProgramada); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaExpedicionProgramada")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaExpedicionPrometida"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaExpedicionPrometida); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaExpedicionPrometida")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEntregaPlanificada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEntregaPlanificada); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaEntregaPlanificada")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEntregaProgramada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEntregaProgramada); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaEntregaProgramada")
	}
	val = func() json.RawMessage {
		if v, ok := fields["GrupoOrdenes"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.GrupoOrdenes); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for GrupoOrdenes")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FranjaHorario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FranjaHorario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FranjaHorario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["EstadoOTAcondi"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstadoOTAcondi); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for EstadoOTAcondi")
	}
	val = func() json.RawMessage {
		if v, ok := fields["EstadoOTTraz"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstadoOTTraz); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for EstadoOTTraz")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEvento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEvento); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaEvento")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CantidadTotal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CantidadTotal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CantidadTotal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CantidadExpedidaTotal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CantidadExpedidaTotal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CantidadExpedidaTotal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CantidadPickeadaTotal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CantidadPickeadaTotal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CantidadPickeadaTotal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ExtUdfStr20"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ExtUdfStr20); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ExtUdfStr20")
	}
	return nil
}
