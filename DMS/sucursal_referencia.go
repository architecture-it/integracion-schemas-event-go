// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     SucursalReferencia.avsc
 */
package DMSEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SucursalReferencia struct {
	UnificacionId string `json:"UnificacionId"`

	SucursalId string `json:"SucursalId"`

	Origen string `json:"Origen"`
}

const SucursalReferenciaAvroCRC64Fingerprint = "\b\xd6\x16u\xc2W\x8f\x81"

func NewSucursalReferencia() SucursalReferencia {
	r := SucursalReferencia{}
	return r
}

func DeserializeSucursalReferencia(r io.Reader) (SucursalReferencia, error) {
	t := NewSucursalReferencia()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeSucursalReferenciaFromSchema(r io.Reader, schema string) (SucursalReferencia, error) {
	t := NewSucursalReferencia()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeSucursalReferencia(r SucursalReferencia, w io.Writer) error {
	var err error
	err = vm.WriteString(r.UnificacionId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.SucursalId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Origen, w)
	if err != nil {
		return err
	}
	return err
}

func (r SucursalReferencia) Serialize(w io.Writer) error {
	return writeSucursalReferencia(r, w)
}

func (r SucursalReferencia) Schema() string {
	return "{\"fields\":[{\"name\":\"UnificacionId\",\"type\":\"string\"},{\"name\":\"SucursalId\",\"type\":\"string\"},{\"name\":\"Origen\",\"type\":\"string\"}],\"name\":\"Andreani.DMS.Events.Hdr.Common.SucursalReferencia\",\"type\":\"record\"}"
}

func (r SucursalReferencia) SchemaName() string {
	return "Andreani.DMS.Events.Hdr.Common.SucursalReferencia"
}

func (_ SucursalReferencia) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ SucursalReferencia) SetInt(v int32)       { panic("Unsupported operation") }
func (_ SucursalReferencia) SetLong(v int64)      { panic("Unsupported operation") }
func (_ SucursalReferencia) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ SucursalReferencia) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ SucursalReferencia) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ SucursalReferencia) SetString(v string)   { panic("Unsupported operation") }
func (_ SucursalReferencia) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *SucursalReferencia) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.UnificacionId}

		return w

	case 1:
		w := types.String{Target: &r.SucursalId}

		return w

	case 2:
		w := types.String{Target: &r.Origen}

		return w

	}
	panic("Unknown field index")
}

func (r *SucursalReferencia) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *SucursalReferencia) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ SucursalReferencia) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ SucursalReferencia) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ SucursalReferencia) HintSize(int)                     { panic("Unsupported operation") }
func (_ SucursalReferencia) Finalize()                        {}

func (_ SucursalReferencia) AvroCRC64Fingerprint() []byte {
	return []byte(SucursalReferenciaAvroCRC64Fingerprint)
}

func (r SucursalReferencia) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["UnificacionId"], err = json.Marshal(r.UnificacionId)
	if err != nil {
		return nil, err
	}
	output["SucursalId"], err = json.Marshal(r.SucursalId)
	if err != nil {
		return nil, err
	}
	output["Origen"], err = json.Marshal(r.Origen)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *SucursalReferencia) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["UnificacionId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UnificacionId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for UnificacionId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SucursalId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Origen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Origen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Origen")
	}
	return nil
}
