// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     PedidoDeAlmacenSCE.avsc
 */
package Wapv2Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type DetallePedido struct {
	Articulo Articulo `json:"articulo"`

	ContratoWarehouse *UnionNullString `json:"contratoWarehouse"`

	Numerodelinea *UnionNullString `json:"numerodelinea"`

	Tipoacondicionamientoescundario *UnionNullString `json:"tipoacondicionamientoescundario"`

	EstatusOTdeAcondi *UnionNullString `json:"estatusOTdeAcondi"`

	DiasVencimientoMinimo *UnionNullInt `json:"diasVencimientoMinimo"`

	TiposDeAcondicionamientoSecundario *UnionNullListaDeTiposDeAcondicionamientoSecundario `json:"tiposDeAcondicionamientoSecundario"`
}

const DetallePedidoAvroCRC64Fingerprint = "\xb0Ή\x1c\xec\x82ɣ"

func NewDetallePedido() DetallePedido {
	r := DetallePedido{}
	r.Articulo = NewArticulo()

	r.ContratoWarehouse = nil
	r.EstatusOTdeAcondi = nil
	r.TiposDeAcondicionamientoSecundario = nil
	return r
}

func DeserializeDetallePedido(r io.Reader) (DetallePedido, error) {
	t := NewDetallePedido()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeDetallePedidoFromSchema(r io.Reader, schema string) (DetallePedido, error) {
	t := NewDetallePedido()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeDetallePedido(r DetallePedido, w io.Writer) error {
	var err error
	err = writeArticulo(r.Articulo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ContratoWarehouse, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Numerodelinea, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Tipoacondicionamientoescundario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstatusOTdeAcondi, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.DiasVencimientoMinimo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullListaDeTiposDeAcondicionamientoSecundario(r.TiposDeAcondicionamientoSecundario, w)
	if err != nil {
		return err
	}
	return err
}

func (r DetallePedido) Serialize(w io.Writer) error {
	return writeDetallePedido(r, w)
}

func (r DetallePedido) Schema() string {
	return "{\"fields\":[{\"name\":\"articulo\",\"type\":{\"fields\":[{\"name\":\"codigo\",\"type\":\"string\"},{\"name\":\"cantidad\",\"type\":\"double\"},{\"name\":\"propietario\",\"type\":\"string\"},{\"name\":\"numeropedido\",\"type\":[\"null\",\"string\"]},{\"name\":\"zonaConsumo\",\"type\":[\"null\",\"string\"]},{\"name\":\"serie\",\"type\":[\"null\",\"string\"]},{\"name\":\"unidadmedida\",\"type\":\"string\"},{\"default\":null,\"name\":\"datosadicionales\",\"type\":[\"null\",{\"fields\":[{\"name\":\"metadatos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"ListaDePropiedades\",\"type\":\"record\"}]},{\"name\":\"lote\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"loteDeFabricante\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteSecundario\",\"type\":[\"null\",\"string\"]},{\"name\":\"fechaDeVencimiento\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"otrosDatos\",\"type\":[\"null\",\"string\"]},{\"name\":\"estado\",\"type\":[\"null\",\"string\"]}],\"name\":\"LoteArticulo\",\"type\":\"record\"}}],\"name\":\"Articulo\",\"type\":\"record\"}},{\"default\":null,\"name\":\"contratoWarehouse\",\"type\":[\"null\",\"string\"]},{\"name\":\"numerodelinea\",\"type\":[\"null\",\"string\"]},{\"name\":\"tipoacondicionamientoescundario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estatusOTdeAcondi\",\"type\":[\"null\",\"string\"]},{\"name\":\"diasVencimientoMinimo\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"tiposDeAcondicionamientoSecundario\",\"type\":[\"null\",{\"fields\":[{\"name\":\"tiposDeAcondicionamientoSecundario\",\"type\":{\"items\":{\"fields\":[{\"name\":\"tipoDeAcondi\",\"type\":\"string\"}],\"name\":\"TiposDeAcondicionamientoSecundario\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"ListaDeTiposDeAcondicionamientoSecundario\",\"type\":\"record\"}]}],\"name\":\"Andreani.Wapv2.Events.Record.DetallePedido\",\"type\":\"record\"}"
}

func (r DetallePedido) SchemaName() string {
	return "Andreani.Wapv2.Events.Record.DetallePedido"
}

func (_ DetallePedido) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ DetallePedido) SetInt(v int32)       { panic("Unsupported operation") }
func (_ DetallePedido) SetLong(v int64)      { panic("Unsupported operation") }
func (_ DetallePedido) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ DetallePedido) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ DetallePedido) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ DetallePedido) SetString(v string)   { panic("Unsupported operation") }
func (_ DetallePedido) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *DetallePedido) Get(i int) types.Field {
	switch i {
	case 0:
		r.Articulo = NewArticulo()

		w := types.Record{Target: &r.Articulo}

		return w

	case 1:
		r.ContratoWarehouse = NewUnionNullString()

		return r.ContratoWarehouse
	case 2:
		r.Numerodelinea = NewUnionNullString()

		return r.Numerodelinea
	case 3:
		r.Tipoacondicionamientoescundario = NewUnionNullString()

		return r.Tipoacondicionamientoescundario
	case 4:
		r.EstatusOTdeAcondi = NewUnionNullString()

		return r.EstatusOTdeAcondi
	case 5:
		r.DiasVencimientoMinimo = NewUnionNullInt()

		return r.DiasVencimientoMinimo
	case 6:
		r.TiposDeAcondicionamientoSecundario = NewUnionNullListaDeTiposDeAcondicionamientoSecundario()

		return r.TiposDeAcondicionamientoSecundario
	}
	panic("Unknown field index")
}

func (r *DetallePedido) SetDefault(i int) {
	switch i {
	case 1:
		r.ContratoWarehouse = nil
		return
	case 4:
		r.EstatusOTdeAcondi = nil
		return
	case 6:
		r.TiposDeAcondicionamientoSecundario = nil
		return
	}
	panic("Unknown field index")
}

func (r *DetallePedido) NullField(i int) {
	switch i {
	case 1:
		r.ContratoWarehouse = nil
		return
	case 2:
		r.Numerodelinea = nil
		return
	case 3:
		r.Tipoacondicionamientoescundario = nil
		return
	case 4:
		r.EstatusOTdeAcondi = nil
		return
	case 5:
		r.DiasVencimientoMinimo = nil
		return
	case 6:
		r.TiposDeAcondicionamientoSecundario = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ DetallePedido) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ DetallePedido) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ DetallePedido) HintSize(int)                     { panic("Unsupported operation") }
func (_ DetallePedido) Finalize()                        {}

func (_ DetallePedido) AvroCRC64Fingerprint() []byte {
	return []byte(DetallePedidoAvroCRC64Fingerprint)
}

func (r DetallePedido) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["articulo"], err = json.Marshal(r.Articulo)
	if err != nil {
		return nil, err
	}
	output["contratoWarehouse"], err = json.Marshal(r.ContratoWarehouse)
	if err != nil {
		return nil, err
	}
	output["numerodelinea"], err = json.Marshal(r.Numerodelinea)
	if err != nil {
		return nil, err
	}
	output["tipoacondicionamientoescundario"], err = json.Marshal(r.Tipoacondicionamientoescundario)
	if err != nil {
		return nil, err
	}
	output["estatusOTdeAcondi"], err = json.Marshal(r.EstatusOTdeAcondi)
	if err != nil {
		return nil, err
	}
	output["diasVencimientoMinimo"], err = json.Marshal(r.DiasVencimientoMinimo)
	if err != nil {
		return nil, err
	}
	output["tiposDeAcondicionamientoSecundario"], err = json.Marshal(r.TiposDeAcondicionamientoSecundario)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *DetallePedido) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["articulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Articulo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for articulo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["contratoWarehouse"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContratoWarehouse); err != nil {
			return err
		}
	} else {
		r.ContratoWarehouse = NewUnionNullString()

		r.ContratoWarehouse = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["numerodelinea"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Numerodelinea); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for numerodelinea")
	}
	val = func() json.RawMessage {
		if v, ok := fields["tipoacondicionamientoescundario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Tipoacondicionamientoescundario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for tipoacondicionamientoescundario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["estatusOTdeAcondi"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstatusOTdeAcondi); err != nil {
			return err
		}
	} else {
		r.EstatusOTdeAcondi = NewUnionNullString()

		r.EstatusOTdeAcondi = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["diasVencimientoMinimo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DiasVencimientoMinimo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for diasVencimientoMinimo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["tiposDeAcondicionamientoSecundario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TiposDeAcondicionamientoSecundario); err != nil {
			return err
		}
	} else {
		r.TiposDeAcondicionamientoSecundario = NewUnionNullListaDeTiposDeAcondicionamientoSecundario()

		r.TiposDeAcondicionamientoSecundario = nil
	}
	return nil
}
