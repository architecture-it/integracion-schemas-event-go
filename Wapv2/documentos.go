// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ListaDeDocumentos.avsc
 */
package Wapv2Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Documentos struct {
	DocumentoBase64 string `json:"documentoBase64"`
}

const DocumentosAvroCRC64Fingerprint = "|t6\xd57s\x84\x87"

func NewDocumentos() Documentos {
	r := Documentos{}
	return r
}

func DeserializeDocumentos(r io.Reader) (Documentos, error) {
	t := NewDocumentos()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeDocumentosFromSchema(r io.Reader, schema string) (Documentos, error) {
	t := NewDocumentos()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeDocumentos(r Documentos, w io.Writer) error {
	var err error
	err = vm.WriteString(r.DocumentoBase64, w)
	if err != nil {
		return err
	}
	return err
}

func (r Documentos) Serialize(w io.Writer) error {
	return writeDocumentos(r, w)
}

func (r Documentos) Schema() string {
	return "{\"fields\":[{\"name\":\"documentoBase64\",\"type\":\"string\"}],\"name\":\"Andreani.Wapv2.Events.Record.Documentos\",\"type\":\"record\"}"
}

func (r Documentos) SchemaName() string {
	return "Andreani.Wapv2.Events.Record.Documentos"
}

func (_ Documentos) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Documentos) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Documentos) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Documentos) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Documentos) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Documentos) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Documentos) SetString(v string)   { panic("Unsupported operation") }
func (_ Documentos) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Documentos) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.DocumentoBase64}

		return w

	}
	panic("Unknown field index")
}

func (r *Documentos) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *Documentos) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ Documentos) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Documentos) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Documentos) HintSize(int)                     { panic("Unsupported operation") }
func (_ Documentos) Finalize()                        {}

func (_ Documentos) AvroCRC64Fingerprint() []byte {
	return []byte(DocumentosAvroCRC64Fingerprint)
}

func (r Documentos) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["documentoBase64"], err = json.Marshal(r.DocumentoBase64)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Documentos) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["documentoBase64"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DocumentoBase64); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for documentoBase64")
	}
	return nil
}
