// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     Transporte.avsc
 */
package Wapv2Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullDatosPersonalesTypeEnum int

const (
	UnionNullDatosPersonalesTypeEnumDatosPersonales UnionNullDatosPersonalesTypeEnum = 1
)

type UnionNullDatosPersonales struct {
	Null            *types.NullVal
	DatosPersonales DatosPersonales
	UnionType       UnionNullDatosPersonalesTypeEnum
}

func writeUnionNullDatosPersonales(r *UnionNullDatosPersonales, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullDatosPersonalesTypeEnumDatosPersonales:
		return writeDatosPersonales(r.DatosPersonales, w)
	}
	return fmt.Errorf("invalid value for *UnionNullDatosPersonales")
}

func NewUnionNullDatosPersonales() *UnionNullDatosPersonales {
	return &UnionNullDatosPersonales{}
}

func (r *UnionNullDatosPersonales) Serialize(w io.Writer) error {
	return writeUnionNullDatosPersonales(r, w)
}

func DeserializeUnionNullDatosPersonales(r io.Reader) (*UnionNullDatosPersonales, error) {
	t := NewUnionNullDatosPersonales()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullDatosPersonalesFromSchema(r io.Reader, schema string) (*UnionNullDatosPersonales, error) {
	t := NewUnionNullDatosPersonales()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullDatosPersonales) Schema() string {
	return "[\"null\",{\"fields\":[{\"default\":null,\"name\":\"numeroDeDocumento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"nombreCompleto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"idinternocliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"eMail\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"telefonos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"listaDeTelefonos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"default\":null,\"name\":\"tipo\",\"type\":[\"null\",\"string\"]},{\"name\":\"numero\",\"type\":\"string\"}],\"name\":\"Telefono\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDeTelefonos\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"contacto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"tipoDeDocumento\",\"type\":[\"null\",{\"name\":\"TipoDeDocumento\",\"symbols\":[\"undefined\",\"DNI\",\"CUIT\",\"CUIL\"],\"type\":\"enum\"}]}],\"name\":\"DatosPersonales\",\"type\":\"record\"}]"
}

func (_ *UnionNullDatosPersonales) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullDatosPersonales) SetLong(v int64) {

	r.UnionType = (UnionNullDatosPersonalesTypeEnum)(v)
}

func (r *UnionNullDatosPersonales) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.DatosPersonales = NewDatosPersonales()
		return &types.Record{Target: (&r.DatosPersonales)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullDatosPersonales) NullField(i int)                  { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) HintSize(i int)                   { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullDatosPersonales) Finalize()                        {}

func (r *UnionNullDatosPersonales) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullDatosPersonalesTypeEnumDatosPersonales:
		return json.Marshal(map[string]interface{}{"Andreani.Wapv2.Events.Record.DatosPersonales": r.DatosPersonales})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullDatosPersonales")
}

func (r *UnionNullDatosPersonales) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["Andreani.Wapv2.Events.Record.DatosPersonales"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.DatosPersonales)
	}
	return fmt.Errorf("invalid value for *UnionNullDatosPersonales")
}
