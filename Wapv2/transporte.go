// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     Transporte.avsc
 */
package Wapv2Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Transporte struct {
	IdTransportista *UnionNullString `json:"idTransportista"`

	DatosPersonales *UnionNullDatosPersonales `json:"datosPersonales"`

	Referencia *UnionNullReferencia `json:"referencia"`
}

const TransporteAvroCRC64Fingerprint = "\xec\xbeL\xba\x0eRb\xaa"

func NewTransporte() Transporte {
	r := Transporte{}
	r.IdTransportista = nil
	r.DatosPersonales = nil
	r.Referencia = nil
	return r
}

func DeserializeTransporte(r io.Reader) (Transporte, error) {
	t := NewTransporte()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeTransporteFromSchema(r io.Reader, schema string) (Transporte, error) {
	t := NewTransporte()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeTransporte(r Transporte, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.IdTransportista, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDatosPersonales(r.DatosPersonales, w)
	if err != nil {
		return err
	}
	err = writeUnionNullReferencia(r.Referencia, w)
	if err != nil {
		return err
	}
	return err
}

func (r Transporte) Serialize(w io.Writer) error {
	return writeTransporte(r, w)
}

func (r Transporte) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"idTransportista\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"datosPersonales\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"numeroDeDocumento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"nombreCompleto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"idinternocliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"eMail\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"telefonos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"listaDeTelefonos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"default\":null,\"name\":\"tipo\",\"type\":[\"null\",\"string\"]},{\"name\":\"numero\",\"type\":\"string\"}],\"name\":\"Telefono\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDeTelefonos\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"contacto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"tipoDeDocumento\",\"type\":[\"null\",{\"name\":\"TipoDeDocumento\",\"symbols\":[\"undefined\",\"DNI\",\"CUIT\",\"CUIL\"],\"type\":\"enum\"}]}],\"name\":\"DatosPersonales\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"referencia\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"transportista\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"contenedor\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"muelleRecepcion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numeroCita\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numeroGuia\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numero\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"gln\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"contacto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"correoElectronico\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigoISOpais\",\"type\":[\"null\",\"string\"]}],\"name\":\"Referencia\",\"type\":\"record\"}]}],\"name\":\"Andreani.Wapv2.Events.Record.Transporte\",\"type\":\"record\"}"
}

func (r Transporte) SchemaName() string {
	return "Andreani.Wapv2.Events.Record.Transporte"
}

func (_ Transporte) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Transporte) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Transporte) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Transporte) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Transporte) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Transporte) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Transporte) SetString(v string)   { panic("Unsupported operation") }
func (_ Transporte) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Transporte) Get(i int) types.Field {
	switch i {
	case 0:
		r.IdTransportista = NewUnionNullString()

		return r.IdTransportista
	case 1:
		r.DatosPersonales = NewUnionNullDatosPersonales()

		return r.DatosPersonales
	case 2:
		r.Referencia = NewUnionNullReferencia()

		return r.Referencia
	}
	panic("Unknown field index")
}

func (r *Transporte) SetDefault(i int) {
	switch i {
	case 0:
		r.IdTransportista = nil
		return
	case 1:
		r.DatosPersonales = nil
		return
	case 2:
		r.Referencia = nil
		return
	}
	panic("Unknown field index")
}

func (r *Transporte) NullField(i int) {
	switch i {
	case 0:
		r.IdTransportista = nil
		return
	case 1:
		r.DatosPersonales = nil
		return
	case 2:
		r.Referencia = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Transporte) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Transporte) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Transporte) HintSize(int)                     { panic("Unsupported operation") }
func (_ Transporte) Finalize()                        {}

func (_ Transporte) AvroCRC64Fingerprint() []byte {
	return []byte(TransporteAvroCRC64Fingerprint)
}

func (r Transporte) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["idTransportista"], err = json.Marshal(r.IdTransportista)
	if err != nil {
		return nil, err
	}
	output["datosPersonales"], err = json.Marshal(r.DatosPersonales)
	if err != nil {
		return nil, err
	}
	output["referencia"], err = json.Marshal(r.Referencia)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Transporte) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["idTransportista"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdTransportista); err != nil {
			return err
		}
	} else {
		r.IdTransportista = NewUnionNullString()

		r.IdTransportista = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["datosPersonales"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DatosPersonales); err != nil {
			return err
		}
	} else {
		r.DatosPersonales = NewUnionNullDatosPersonales()

		r.DatosPersonales = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["referencia"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Referencia); err != nil {
			return err
		}
	} else {
		r.Referencia = NewUnionNullReferencia()

		r.Referencia = nil
	}
	return nil
}
