// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     NotificacionFord.avsc
 */
package NotificacionesEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type MaestroConcesionario struct {
	Id_concesionario *UnionNullInt `json:"id_concesionario"`

	Razon_social *UnionNullString `json:"razon_social"`

	Direccion *UnionNullString `json:"direccion"`

	Localidad *UnionNullString `json:"localidad"`

	Provincia *UnionNullString `json:"provincia"`

	Cp_origen *UnionNullInt `json:"cp_origen"`

	Cp_destino *UnionNullInt `json:"cp_destino"`

	Codigo_cliente *UnionNullInt `json:"codigo_cliente"`

	Contrato *UnionNullInt `json:"contrato"`

	Sla *UnionNullInt `json:"sla"`

	Corte_horario *UnionNullString `json:"corte_horario"`

	Email_1 *UnionNullString `json:"email_1"`

	Email_2 *UnionNullString `json:"email_2"`

	Email_3 *UnionNullString `json:"email_3"`

	Email_4 *UnionNullString `json:"email_4"`

	Email_5 *UnionNullString `json:"email_5"`

	Email_6 *UnionNullString `json:"email_6"`
}

const MaestroConcesionarioAvroCRC64Fingerprint = "\xdcF\xe9\xcaG\x93\\="

func NewMaestroConcesionario() MaestroConcesionario {
	r := MaestroConcesionario{}
	r.Id_concesionario = nil
	r.Razon_social = nil
	r.Direccion = nil
	r.Localidad = nil
	r.Provincia = nil
	r.Cp_origen = nil
	r.Cp_destino = nil
	r.Codigo_cliente = nil
	r.Contrato = nil
	r.Sla = nil
	r.Corte_horario = nil
	r.Email_1 = nil
	r.Email_2 = nil
	r.Email_3 = nil
	r.Email_4 = nil
	r.Email_5 = nil
	r.Email_6 = nil
	return r
}

func DeserializeMaestroConcesionario(r io.Reader) (MaestroConcesionario, error) {
	t := NewMaestroConcesionario()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeMaestroConcesionarioFromSchema(r io.Reader, schema string) (MaestroConcesionario, error) {
	t := NewMaestroConcesionario()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeMaestroConcesionario(r MaestroConcesionario, w io.Writer) error {
	var err error
	err = writeUnionNullInt(r.Id_concesionario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Razon_social, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Direccion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Localidad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Provincia, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.Cp_origen, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.Cp_destino, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.Codigo_cliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.Contrato, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.Sla, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Corte_horario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Email_1, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Email_2, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Email_3, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Email_4, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Email_5, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Email_6, w)
	if err != nil {
		return err
	}
	return err
}

func (r MaestroConcesionario) Serialize(w io.Writer) error {
	return writeMaestroConcesionario(r, w)
}

func (r MaestroConcesionario) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"id_concesionario\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"razon_social\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"direccion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"localidad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"provincia\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"cp_origen\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"cp_destino\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"codigo_cliente\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"contrato\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"sla\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"corte_horario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"email_1\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"email_2\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"email_3\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"email_4\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"email_5\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"email_6\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.Notificaciones.Events.Records.MaestroConcesionario\",\"type\":\"record\"}"
}

func (r MaestroConcesionario) SchemaName() string {
	return "Andreani.Notificaciones.Events.Records.MaestroConcesionario"
}

func (_ MaestroConcesionario) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ MaestroConcesionario) SetInt(v int32)       { panic("Unsupported operation") }
func (_ MaestroConcesionario) SetLong(v int64)      { panic("Unsupported operation") }
func (_ MaestroConcesionario) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ MaestroConcesionario) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ MaestroConcesionario) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ MaestroConcesionario) SetString(v string)   { panic("Unsupported operation") }
func (_ MaestroConcesionario) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *MaestroConcesionario) Get(i int) types.Field {
	switch i {
	case 0:
		r.Id_concesionario = NewUnionNullInt()

		return r.Id_concesionario
	case 1:
		r.Razon_social = NewUnionNullString()

		return r.Razon_social
	case 2:
		r.Direccion = NewUnionNullString()

		return r.Direccion
	case 3:
		r.Localidad = NewUnionNullString()

		return r.Localidad
	case 4:
		r.Provincia = NewUnionNullString()

		return r.Provincia
	case 5:
		r.Cp_origen = NewUnionNullInt()

		return r.Cp_origen
	case 6:
		r.Cp_destino = NewUnionNullInt()

		return r.Cp_destino
	case 7:
		r.Codigo_cliente = NewUnionNullInt()

		return r.Codigo_cliente
	case 8:
		r.Contrato = NewUnionNullInt()

		return r.Contrato
	case 9:
		r.Sla = NewUnionNullInt()

		return r.Sla
	case 10:
		r.Corte_horario = NewUnionNullString()

		return r.Corte_horario
	case 11:
		r.Email_1 = NewUnionNullString()

		return r.Email_1
	case 12:
		r.Email_2 = NewUnionNullString()

		return r.Email_2
	case 13:
		r.Email_3 = NewUnionNullString()

		return r.Email_3
	case 14:
		r.Email_4 = NewUnionNullString()

		return r.Email_4
	case 15:
		r.Email_5 = NewUnionNullString()

		return r.Email_5
	case 16:
		r.Email_6 = NewUnionNullString()

		return r.Email_6
	}
	panic("Unknown field index")
}

func (r *MaestroConcesionario) SetDefault(i int) {
	switch i {
	case 0:
		r.Id_concesionario = nil
		return
	case 1:
		r.Razon_social = nil
		return
	case 2:
		r.Direccion = nil
		return
	case 3:
		r.Localidad = nil
		return
	case 4:
		r.Provincia = nil
		return
	case 5:
		r.Cp_origen = nil
		return
	case 6:
		r.Cp_destino = nil
		return
	case 7:
		r.Codigo_cliente = nil
		return
	case 8:
		r.Contrato = nil
		return
	case 9:
		r.Sla = nil
		return
	case 10:
		r.Corte_horario = nil
		return
	case 11:
		r.Email_1 = nil
		return
	case 12:
		r.Email_2 = nil
		return
	case 13:
		r.Email_3 = nil
		return
	case 14:
		r.Email_4 = nil
		return
	case 15:
		r.Email_5 = nil
		return
	case 16:
		r.Email_6 = nil
		return
	}
	panic("Unknown field index")
}

func (r *MaestroConcesionario) NullField(i int) {
	switch i {
	case 0:
		r.Id_concesionario = nil
		return
	case 1:
		r.Razon_social = nil
		return
	case 2:
		r.Direccion = nil
		return
	case 3:
		r.Localidad = nil
		return
	case 4:
		r.Provincia = nil
		return
	case 5:
		r.Cp_origen = nil
		return
	case 6:
		r.Cp_destino = nil
		return
	case 7:
		r.Codigo_cliente = nil
		return
	case 8:
		r.Contrato = nil
		return
	case 9:
		r.Sla = nil
		return
	case 10:
		r.Corte_horario = nil
		return
	case 11:
		r.Email_1 = nil
		return
	case 12:
		r.Email_2 = nil
		return
	case 13:
		r.Email_3 = nil
		return
	case 14:
		r.Email_4 = nil
		return
	case 15:
		r.Email_5 = nil
		return
	case 16:
		r.Email_6 = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ MaestroConcesionario) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ MaestroConcesionario) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ MaestroConcesionario) HintSize(int)                     { panic("Unsupported operation") }
func (_ MaestroConcesionario) Finalize()                        {}

func (_ MaestroConcesionario) AvroCRC64Fingerprint() []byte {
	return []byte(MaestroConcesionarioAvroCRC64Fingerprint)
}

func (r MaestroConcesionario) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["id_concesionario"], err = json.Marshal(r.Id_concesionario)
	if err != nil {
		return nil, err
	}
	output["razon_social"], err = json.Marshal(r.Razon_social)
	if err != nil {
		return nil, err
	}
	output["direccion"], err = json.Marshal(r.Direccion)
	if err != nil {
		return nil, err
	}
	output["localidad"], err = json.Marshal(r.Localidad)
	if err != nil {
		return nil, err
	}
	output["provincia"], err = json.Marshal(r.Provincia)
	if err != nil {
		return nil, err
	}
	output["cp_origen"], err = json.Marshal(r.Cp_origen)
	if err != nil {
		return nil, err
	}
	output["cp_destino"], err = json.Marshal(r.Cp_destino)
	if err != nil {
		return nil, err
	}
	output["codigo_cliente"], err = json.Marshal(r.Codigo_cliente)
	if err != nil {
		return nil, err
	}
	output["contrato"], err = json.Marshal(r.Contrato)
	if err != nil {
		return nil, err
	}
	output["sla"], err = json.Marshal(r.Sla)
	if err != nil {
		return nil, err
	}
	output["corte_horario"], err = json.Marshal(r.Corte_horario)
	if err != nil {
		return nil, err
	}
	output["email_1"], err = json.Marshal(r.Email_1)
	if err != nil {
		return nil, err
	}
	output["email_2"], err = json.Marshal(r.Email_2)
	if err != nil {
		return nil, err
	}
	output["email_3"], err = json.Marshal(r.Email_3)
	if err != nil {
		return nil, err
	}
	output["email_4"], err = json.Marshal(r.Email_4)
	if err != nil {
		return nil, err
	}
	output["email_5"], err = json.Marshal(r.Email_5)
	if err != nil {
		return nil, err
	}
	output["email_6"], err = json.Marshal(r.Email_6)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *MaestroConcesionario) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["id_concesionario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Id_concesionario); err != nil {
			return err
		}
	} else {
		r.Id_concesionario = NewUnionNullInt()

		r.Id_concesionario = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["razon_social"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Razon_social); err != nil {
			return err
		}
	} else {
		r.Razon_social = NewUnionNullString()

		r.Razon_social = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["direccion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Direccion); err != nil {
			return err
		}
	} else {
		r.Direccion = NewUnionNullString()

		r.Direccion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["localidad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Localidad); err != nil {
			return err
		}
	} else {
		r.Localidad = NewUnionNullString()

		r.Localidad = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["provincia"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Provincia); err != nil {
			return err
		}
	} else {
		r.Provincia = NewUnionNullString()

		r.Provincia = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["cp_origen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cp_origen); err != nil {
			return err
		}
	} else {
		r.Cp_origen = NewUnionNullInt()

		r.Cp_origen = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["cp_destino"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cp_destino); err != nil {
			return err
		}
	} else {
		r.Cp_destino = NewUnionNullInt()

		r.Cp_destino = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["codigo_cliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Codigo_cliente); err != nil {
			return err
		}
	} else {
		r.Codigo_cliente = NewUnionNullInt()

		r.Codigo_cliente = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["contrato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contrato); err != nil {
			return err
		}
	} else {
		r.Contrato = NewUnionNullInt()

		r.Contrato = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["sla"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sla); err != nil {
			return err
		}
	} else {
		r.Sla = NewUnionNullInt()

		r.Sla = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["corte_horario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Corte_horario); err != nil {
			return err
		}
	} else {
		r.Corte_horario = NewUnionNullString()

		r.Corte_horario = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["email_1"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Email_1); err != nil {
			return err
		}
	} else {
		r.Email_1 = NewUnionNullString()

		r.Email_1 = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["email_2"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Email_2); err != nil {
			return err
		}
	} else {
		r.Email_2 = NewUnionNullString()

		r.Email_2 = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["email_3"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Email_3); err != nil {
			return err
		}
	} else {
		r.Email_3 = NewUnionNullString()

		r.Email_3 = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["email_4"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Email_4); err != nil {
			return err
		}
	} else {
		r.Email_4 = NewUnionNullString()

		r.Email_4 = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["email_5"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Email_5); err != nil {
			return err
		}
	} else {
		r.Email_5 = NewUnionNullString()

		r.Email_5 = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["email_6"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Email_6); err != nil {
			return err
		}
	} else {
		r.Email_6 = NewUnionNullString()

		r.Email_6 = nil
	}
	return nil
}
