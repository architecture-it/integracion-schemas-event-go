// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     Incidencia.avsc
 */
package IncidenciasEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Incidencia struct {
	Identificacion Identificacion `json:"Identificacion"`

	Id *UnionNullInt `json:"Id"`

	ReferenciaWh *UnionNullString `json:"ReferenciaWh"`

	ReferenciaCliente *UnionNullString `json:"ReferenciaCliente"`

	ReferenciaCliente2 *UnionNullString `json:"ReferenciaCliente2"`

	Prioridad *UnionNullInt `json:"Prioridad"`

	Observaciones *UnionNullString `json:"Observaciones"`

	LecturaArticulo *UnionNullString `json:"LecturaArticulo"`

	SkuArticulo *UnionNullString `json:"SkuArticulo"`

	DescripcionArticulo *UnionNullString `json:"DescripcionArticulo"`

	CantidadArticulo *UnionNullString `json:"CantidadArticulo"`

	LoteArticulo *UnionNullString `json:"LoteArticulo"`

	NroSerieArticulo *UnionNullString `json:"NroSerieArticulo"`

	AlmacenDestino *UnionNullString `json:"AlmacenDestino"`

	IdMotivo *UnionNullString `json:"IdMotivo"`

	IdMotivoExterno *UnionNullString `json:"IdMotivoExterno"`

	Detalle *UnionNullString `json:"Detalle"`

	IdTareaTraslado *UnionNullString `json:"IdTareaTraslado"`
}

const IncidenciaAvroCRC64Fingerprint = "\x90\xd6\xf5\xfa\xd7\\J\xe3"

func NewIncidencia() Incidencia {
	r := Incidencia{}
	r.Identificacion = NewIdentificacion()

	r.Id = nil
	r.ReferenciaWh = nil
	r.ReferenciaCliente = nil
	r.ReferenciaCliente2 = nil
	r.Prioridad = nil
	r.Observaciones = nil
	r.LecturaArticulo = nil
	r.SkuArticulo = nil
	r.DescripcionArticulo = nil
	r.CantidadArticulo = nil
	r.LoteArticulo = nil
	r.NroSerieArticulo = nil
	r.AlmacenDestino = nil
	r.IdMotivo = nil
	r.IdMotivoExterno = nil
	r.Detalle = nil
	r.IdTareaTraslado = nil
	return r
}

func DeserializeIncidencia(r io.Reader) (Incidencia, error) {
	t := NewIncidencia()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeIncidenciaFromSchema(r io.Reader, schema string) (Incidencia, error) {
	t := NewIncidencia()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeIncidencia(r Incidencia, w io.Writer) error {
	var err error
	err = writeIdentificacion(r.Identificacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.Id, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ReferenciaWh, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ReferenciaCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ReferenciaCliente2, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.Prioridad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Observaciones, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.LecturaArticulo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SkuArticulo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DescripcionArticulo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CantidadArticulo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.LoteArticulo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NroSerieArticulo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AlmacenDestino, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.IdMotivo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.IdMotivoExterno, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Detalle, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.IdTareaTraslado, w)
	if err != nil {
		return err
	}
	return err
}

func (r Incidencia) Serialize(w io.Writer) error {
	return writeIncidencia(r, w)
}

func (r Incidencia) Schema() string {
	return "{\"fields\":[{\"name\":\"Identificacion\",\"type\":{\"fields\":[{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"Evento\",\"type\":\"string\"},{\"name\":\"Nombre\",\"type\":\"string\"},{\"name\":\"Proceso\",\"type\":\"string\"},{\"name\":\"FechaHoraGeneracion\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"SistemaOrigen\",\"type\":\"string\"},{\"name\":\"Almacen\",\"type\":\"string\"},{\"name\":\"Propietario\",\"type\":\"string\"},{\"name\":\"Instancia\",\"type\":\"string\"},{\"default\":null,\"name\":\"PlantaOperacionId\",\"type\":[\"null\",\"int\"]}],\"name\":\"Identificacion\",\"namespace\":\"Andreani.Incidencias.Events.Common\",\"type\":\"record\"}},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"ReferenciaWh\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ReferenciaCliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ReferenciaCliente2\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Prioridad\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"Observaciones\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LecturaArticulo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SkuArticulo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DescripcionArticulo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CantidadArticulo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LoteArticulo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NroSerieArticulo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"AlmacenDestino\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IdMotivo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IdMotivoExterno\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Detalle\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IdTareaTraslado\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.Incidencias.Events.Record.Incidencia\",\"type\":\"record\"}"
}

func (r Incidencia) SchemaName() string {
	return "Andreani.Incidencias.Events.Record.Incidencia"
}

func (_ Incidencia) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Incidencia) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Incidencia) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Incidencia) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Incidencia) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Incidencia) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Incidencia) SetString(v string)   { panic("Unsupported operation") }
func (_ Incidencia) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Incidencia) Get(i int) types.Field {
	switch i {
	case 0:
		r.Identificacion = NewIdentificacion()

		w := types.Record{Target: &r.Identificacion}

		return w

	case 1:
		r.Id = NewUnionNullInt()

		return r.Id
	case 2:
		r.ReferenciaWh = NewUnionNullString()

		return r.ReferenciaWh
	case 3:
		r.ReferenciaCliente = NewUnionNullString()

		return r.ReferenciaCliente
	case 4:
		r.ReferenciaCliente2 = NewUnionNullString()

		return r.ReferenciaCliente2
	case 5:
		r.Prioridad = NewUnionNullInt()

		return r.Prioridad
	case 6:
		r.Observaciones = NewUnionNullString()

		return r.Observaciones
	case 7:
		r.LecturaArticulo = NewUnionNullString()

		return r.LecturaArticulo
	case 8:
		r.SkuArticulo = NewUnionNullString()

		return r.SkuArticulo
	case 9:
		r.DescripcionArticulo = NewUnionNullString()

		return r.DescripcionArticulo
	case 10:
		r.CantidadArticulo = NewUnionNullString()

		return r.CantidadArticulo
	case 11:
		r.LoteArticulo = NewUnionNullString()

		return r.LoteArticulo
	case 12:
		r.NroSerieArticulo = NewUnionNullString()

		return r.NroSerieArticulo
	case 13:
		r.AlmacenDestino = NewUnionNullString()

		return r.AlmacenDestino
	case 14:
		r.IdMotivo = NewUnionNullString()

		return r.IdMotivo
	case 15:
		r.IdMotivoExterno = NewUnionNullString()

		return r.IdMotivoExterno
	case 16:
		r.Detalle = NewUnionNullString()

		return r.Detalle
	case 17:
		r.IdTareaTraslado = NewUnionNullString()

		return r.IdTareaTraslado
	}
	panic("Unknown field index")
}

func (r *Incidencia) SetDefault(i int) {
	switch i {
	case 1:
		r.Id = nil
		return
	case 2:
		r.ReferenciaWh = nil
		return
	case 3:
		r.ReferenciaCliente = nil
		return
	case 4:
		r.ReferenciaCliente2 = nil
		return
	case 5:
		r.Prioridad = nil
		return
	case 6:
		r.Observaciones = nil
		return
	case 7:
		r.LecturaArticulo = nil
		return
	case 8:
		r.SkuArticulo = nil
		return
	case 9:
		r.DescripcionArticulo = nil
		return
	case 10:
		r.CantidadArticulo = nil
		return
	case 11:
		r.LoteArticulo = nil
		return
	case 12:
		r.NroSerieArticulo = nil
		return
	case 13:
		r.AlmacenDestino = nil
		return
	case 14:
		r.IdMotivo = nil
		return
	case 15:
		r.IdMotivoExterno = nil
		return
	case 16:
		r.Detalle = nil
		return
	case 17:
		r.IdTareaTraslado = nil
		return
	}
	panic("Unknown field index")
}

func (r *Incidencia) NullField(i int) {
	switch i {
	case 1:
		r.Id = nil
		return
	case 2:
		r.ReferenciaWh = nil
		return
	case 3:
		r.ReferenciaCliente = nil
		return
	case 4:
		r.ReferenciaCliente2 = nil
		return
	case 5:
		r.Prioridad = nil
		return
	case 6:
		r.Observaciones = nil
		return
	case 7:
		r.LecturaArticulo = nil
		return
	case 8:
		r.SkuArticulo = nil
		return
	case 9:
		r.DescripcionArticulo = nil
		return
	case 10:
		r.CantidadArticulo = nil
		return
	case 11:
		r.LoteArticulo = nil
		return
	case 12:
		r.NroSerieArticulo = nil
		return
	case 13:
		r.AlmacenDestino = nil
		return
	case 14:
		r.IdMotivo = nil
		return
	case 15:
		r.IdMotivoExterno = nil
		return
	case 16:
		r.Detalle = nil
		return
	case 17:
		r.IdTareaTraslado = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Incidencia) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Incidencia) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Incidencia) HintSize(int)                     { panic("Unsupported operation") }
func (_ Incidencia) Finalize()                        {}

func (_ Incidencia) AvroCRC64Fingerprint() []byte {
	return []byte(IncidenciaAvroCRC64Fingerprint)
}

func (r Incidencia) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Identificacion"], err = json.Marshal(r.Identificacion)
	if err != nil {
		return nil, err
	}
	output["Id"], err = json.Marshal(r.Id)
	if err != nil {
		return nil, err
	}
	output["ReferenciaWh"], err = json.Marshal(r.ReferenciaWh)
	if err != nil {
		return nil, err
	}
	output["ReferenciaCliente"], err = json.Marshal(r.ReferenciaCliente)
	if err != nil {
		return nil, err
	}
	output["ReferenciaCliente2"], err = json.Marshal(r.ReferenciaCliente2)
	if err != nil {
		return nil, err
	}
	output["Prioridad"], err = json.Marshal(r.Prioridad)
	if err != nil {
		return nil, err
	}
	output["Observaciones"], err = json.Marshal(r.Observaciones)
	if err != nil {
		return nil, err
	}
	output["LecturaArticulo"], err = json.Marshal(r.LecturaArticulo)
	if err != nil {
		return nil, err
	}
	output["SkuArticulo"], err = json.Marshal(r.SkuArticulo)
	if err != nil {
		return nil, err
	}
	output["DescripcionArticulo"], err = json.Marshal(r.DescripcionArticulo)
	if err != nil {
		return nil, err
	}
	output["CantidadArticulo"], err = json.Marshal(r.CantidadArticulo)
	if err != nil {
		return nil, err
	}
	output["LoteArticulo"], err = json.Marshal(r.LoteArticulo)
	if err != nil {
		return nil, err
	}
	output["NroSerieArticulo"], err = json.Marshal(r.NroSerieArticulo)
	if err != nil {
		return nil, err
	}
	output["AlmacenDestino"], err = json.Marshal(r.AlmacenDestino)
	if err != nil {
		return nil, err
	}
	output["IdMotivo"], err = json.Marshal(r.IdMotivo)
	if err != nil {
		return nil, err
	}
	output["IdMotivoExterno"], err = json.Marshal(r.IdMotivoExterno)
	if err != nil {
		return nil, err
	}
	output["Detalle"], err = json.Marshal(r.Detalle)
	if err != nil {
		return nil, err
	}
	output["IdTareaTraslado"], err = json.Marshal(r.IdTareaTraslado)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Incidencia) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Identificacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Identificacion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Identificacion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Id"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Id); err != nil {
			return err
		}
	} else {
		r.Id = NewUnionNullInt()

		r.Id = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ReferenciaWh"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReferenciaWh); err != nil {
			return err
		}
	} else {
		r.ReferenciaWh = NewUnionNullString()

		r.ReferenciaWh = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ReferenciaCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReferenciaCliente); err != nil {
			return err
		}
	} else {
		r.ReferenciaCliente = NewUnionNullString()

		r.ReferenciaCliente = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ReferenciaCliente2"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReferenciaCliente2); err != nil {
			return err
		}
	} else {
		r.ReferenciaCliente2 = NewUnionNullString()

		r.ReferenciaCliente2 = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Prioridad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Prioridad); err != nil {
			return err
		}
	} else {
		r.Prioridad = NewUnionNullInt()

		r.Prioridad = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Observaciones"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Observaciones); err != nil {
			return err
		}
	} else {
		r.Observaciones = NewUnionNullString()

		r.Observaciones = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["LecturaArticulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LecturaArticulo); err != nil {
			return err
		}
	} else {
		r.LecturaArticulo = NewUnionNullString()

		r.LecturaArticulo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SkuArticulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SkuArticulo); err != nil {
			return err
		}
	} else {
		r.SkuArticulo = NewUnionNullString()

		r.SkuArticulo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DescripcionArticulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DescripcionArticulo); err != nil {
			return err
		}
	} else {
		r.DescripcionArticulo = NewUnionNullString()

		r.DescripcionArticulo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CantidadArticulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CantidadArticulo); err != nil {
			return err
		}
	} else {
		r.CantidadArticulo = NewUnionNullString()

		r.CantidadArticulo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["LoteArticulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LoteArticulo); err != nil {
			return err
		}
	} else {
		r.LoteArticulo = NewUnionNullString()

		r.LoteArticulo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NroSerieArticulo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NroSerieArticulo); err != nil {
			return err
		}
	} else {
		r.NroSerieArticulo = NewUnionNullString()

		r.NroSerieArticulo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["AlmacenDestino"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AlmacenDestino); err != nil {
			return err
		}
	} else {
		r.AlmacenDestino = NewUnionNullString()

		r.AlmacenDestino = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["IdMotivo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdMotivo); err != nil {
			return err
		}
	} else {
		r.IdMotivo = NewUnionNullString()

		r.IdMotivo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["IdMotivoExterno"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdMotivoExterno); err != nil {
			return err
		}
	} else {
		r.IdMotivoExterno = NewUnionNullString()

		r.IdMotivoExterno = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Detalle"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Detalle); err != nil {
			return err
		}
	} else {
		r.Detalle = NewUnionNullString()

		r.Detalle = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["IdTareaTraslado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdTareaTraslado); err != nil {
			return err
		}
	} else {
		r.IdTareaTraslado = NewUnionNullString()

		r.IdTareaTraslado = nil
	}
	return nil
}
