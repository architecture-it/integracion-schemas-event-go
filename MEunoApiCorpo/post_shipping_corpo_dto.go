// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     SelfTransportShipmentEvent.avsc
 */
package MEunoApiCorpoEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type PostShippingCorpoDto struct {
	UsuarioId string `json:"usuarioId"`

	ClienteId string `json:"clienteId"`

	Remitente Remitente `json:"remitente"`

	Envios []Envio `json:"envios"`
}

const PostShippingCorpoDtoAvroCRC64Fingerprint = "2f\xf7\xb4rN{3"

func NewPostShippingCorpoDto() PostShippingCorpoDto {
	r := PostShippingCorpoDto{}
	r.Remitente = NewRemitente()

	r.Envios = make([]Envio, 0)

	return r
}

func DeserializePostShippingCorpoDto(r io.Reader) (PostShippingCorpoDto, error) {
	t := NewPostShippingCorpoDto()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializePostShippingCorpoDtoFromSchema(r io.Reader, schema string) (PostShippingCorpoDto, error) {
	t := NewPostShippingCorpoDto()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writePostShippingCorpoDto(r PostShippingCorpoDto, w io.Writer) error {
	var err error
	err = vm.WriteString(r.UsuarioId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.ClienteId, w)
	if err != nil {
		return err
	}
	err = writeRemitente(r.Remitente, w)
	if err != nil {
		return err
	}
	err = writeArrayEnvio(r.Envios, w)
	if err != nil {
		return err
	}
	return err
}

func (r PostShippingCorpoDto) Serialize(w io.Writer) error {
	return writePostShippingCorpoDto(r, w)
}

func (r PostShippingCorpoDto) Schema() string {
	return "{\"fields\":[{\"name\":\"usuarioId\",\"type\":\"string\"},{\"name\":\"clienteId\",\"type\":\"string\"},{\"name\":\"remitente\",\"type\":{\"fields\":[{\"name\":\"nombre\",\"type\":\"string\"},{\"name\":\"apellido\",\"type\":\"string\"},{\"name\":\"dni\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"telefono\",\"type\":\"string\"}],\"name\":\"Remitente\",\"type\":\"record\"}},{\"name\":\"envios\",\"type\":{\"items\":{\"fields\":[{\"name\":\"numeroContrato\",\"type\":\"string\"},{\"name\":\"tipoServicio\",\"type\":\"string\"},{\"name\":\"modoEntrega\",\"type\":\"string\"},{\"name\":\"template\",\"type\":\"string\"},{\"name\":\"direccionRemitente\",\"type\":{\"fields\":[{\"name\":\"idSucursal\",\"type\":\"int\"},{\"name\":\"calle\",\"type\":\"string\"},{\"name\":\"numero\",\"type\":\"string\"},{\"name\":\"piso\",\"type\":\"string\"},{\"name\":\"unidad\",\"type\":\"string\"},{\"name\":\"codigoPostal\",\"type\":\"string\"},{\"name\":\"localidad\",\"type\":\"string\"},{\"name\":\"provincia\",\"type\":\"string\"},{\"name\":\"observaciones\",\"type\":\"string\"}],\"name\":\"DireccionRemitente\",\"type\":\"record\"}},{\"name\":\"destinatario\",\"type\":{\"fields\":[{\"name\":\"nombre\",\"type\":\"string\"},{\"name\":\"apellido\",\"type\":\"string\"},{\"name\":\"dni\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"telefono\",\"type\":\"string\"}],\"name\":\"Destinatario\",\"type\":\"record\"}},{\"name\":\"direccionDestinatario\",\"type\":{\"fields\":[{\"name\":\"idSucursal\",\"type\":\"int\"},{\"name\":\"calle\",\"type\":\"string\"},{\"name\":\"numero\",\"type\":\"string\"},{\"name\":\"piso\",\"type\":\"string\"},{\"name\":\"unidad\",\"type\":\"string\"},{\"name\":\"codigoPostal\",\"type\":\"string\"},{\"name\":\"localidad\",\"type\":\"string\"},{\"name\":\"provincia\",\"type\":\"string\"},{\"name\":\"observaciones\",\"type\":\"string\"}],\"name\":\"DireccionDestinatario\",\"type\":\"record\"}},{\"name\":\"largo\",\"type\":\"int\"},{\"name\":\"ancho\",\"type\":\"int\"},{\"name\":\"alto\",\"type\":\"int\"},{\"name\":\"peso\",\"type\":\"int\"},{\"name\":\"pesoUnidad\",\"type\":\"string\"},{\"name\":\"cantidadBultos\",\"type\":\"int\"},{\"name\":\"volumenCm\",\"type\":\"int\"},{\"name\":\"valorDeclarado\",\"type\":\"int\"},{\"name\":\"numeroInterno\",\"type\":\"string\"},{\"name\":\"remito\",\"type\":\"string\"},{\"name\":\"remitosHijos\",\"type\":\"string\"},{\"name\":\"numeroPreestablecido\",\"type\":\"string\"}],\"name\":\"Envio\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Andreani.MEunoApiCorpo.Events.Record.Structs.PostShippingCorpoDto\",\"type\":\"record\"}"
}

func (r PostShippingCorpoDto) SchemaName() string {
	return "Andreani.MEunoApiCorpo.Events.Record.Structs.PostShippingCorpoDto"
}

func (_ PostShippingCorpoDto) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) SetInt(v int32)       { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) SetLong(v int64)      { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) SetString(v string)   { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *PostShippingCorpoDto) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.UsuarioId}

		return w

	case 1:
		w := types.String{Target: &r.ClienteId}

		return w

	case 2:
		r.Remitente = NewRemitente()

		w := types.Record{Target: &r.Remitente}

		return w

	case 3:
		r.Envios = make([]Envio, 0)

		w := ArrayEnvioWrapper{Target: &r.Envios}

		return w

	}
	panic("Unknown field index")
}

func (r *PostShippingCorpoDto) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *PostShippingCorpoDto) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ PostShippingCorpoDto) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) HintSize(int)                     { panic("Unsupported operation") }
func (_ PostShippingCorpoDto) Finalize()                        {}

func (_ PostShippingCorpoDto) AvroCRC64Fingerprint() []byte {
	return []byte(PostShippingCorpoDtoAvroCRC64Fingerprint)
}

func (r PostShippingCorpoDto) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["usuarioId"], err = json.Marshal(r.UsuarioId)
	if err != nil {
		return nil, err
	}
	output["clienteId"], err = json.Marshal(r.ClienteId)
	if err != nil {
		return nil, err
	}
	output["remitente"], err = json.Marshal(r.Remitente)
	if err != nil {
		return nil, err
	}
	output["envios"], err = json.Marshal(r.Envios)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *PostShippingCorpoDto) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["usuarioId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UsuarioId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for usuarioId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["clienteId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ClienteId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for clienteId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["remitente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Remitente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for remitente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["envios"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Envios); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for envios")
	}
	return nil
}
