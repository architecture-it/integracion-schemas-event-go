// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     CorpoShipmentStatusEvent.avsc
 */
package MEunoApiCorpoEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CorpoShipmentStatus int32

const (
	CorpoShipmentStatusPending      CorpoShipmentStatus = 0
	CorpoShipmentStatusShipped      CorpoShipmentStatus = 1
	CorpoShipmentStatusDelivered    CorpoShipmentStatus = 2
	CorpoShipmentStatusNotDelivered CorpoShipmentStatus = 3
)

func (e CorpoShipmentStatus) String() string {
	switch e {
	case CorpoShipmentStatusPending:
		return "Pending"
	case CorpoShipmentStatusShipped:
		return "Shipped"
	case CorpoShipmentStatusDelivered:
		return "Delivered"
	case CorpoShipmentStatusNotDelivered:
		return "NotDelivered"
	}
	return "unknown"
}

func writeCorpoShipmentStatus(r CorpoShipmentStatus, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewCorpoShipmentStatusValue(raw string) (r CorpoShipmentStatus, err error) {
	switch raw {
	case "Pending":
		return CorpoShipmentStatusPending, nil
	case "Shipped":
		return CorpoShipmentStatusShipped, nil
	case "Delivered":
		return CorpoShipmentStatusDelivered, nil
	case "NotDelivered":
		return CorpoShipmentStatusNotDelivered, nil
	}

	return -1, fmt.Errorf("invalid value for CorpoShipmentStatus: '%s'", raw)

}

func (b CorpoShipmentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *CorpoShipmentStatus) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewCorpoShipmentStatusValue(stringVal)
	*b = val
	return err
}

type CorpoShipmentStatusWrapper struct {
	Target *CorpoShipmentStatus
}

func (b CorpoShipmentStatusWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b CorpoShipmentStatusWrapper) SetInt(v int32) {
	*(b.Target) = CorpoShipmentStatus(v)
}

func (b CorpoShipmentStatusWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b CorpoShipmentStatusWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b CorpoShipmentStatusWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b CorpoShipmentStatusWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b CorpoShipmentStatusWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b CorpoShipmentStatusWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b CorpoShipmentStatusWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b CorpoShipmentStatusWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b CorpoShipmentStatusWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b CorpoShipmentStatusWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b CorpoShipmentStatusWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b CorpoShipmentStatusWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b CorpoShipmentStatusWrapper) Finalize() {}
