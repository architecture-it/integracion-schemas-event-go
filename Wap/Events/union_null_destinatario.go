// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     CreacionDeOrdenDeCompraRechazada.avsc
 */
package Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullDestinatarioTypeEnum int

const (
	UnionNullDestinatarioTypeEnumDestinatario UnionNullDestinatarioTypeEnum = 1
)

type UnionNullDestinatario struct {
	Null         *types.NullVal
	Destinatario Destinatario
	UnionType    UnionNullDestinatarioTypeEnum
}

func writeUnionNullDestinatario(r *UnionNullDestinatario, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullDestinatarioTypeEnumDestinatario:
		return writeDestinatario(r.Destinatario, w)
	}
	return fmt.Errorf("invalid value for *UnionNullDestinatario")
}

func NewUnionNullDestinatario() *UnionNullDestinatario {
	return &UnionNullDestinatario{}
}

func (r *UnionNullDestinatario) Serialize(w io.Writer) error {
	return writeUnionNullDestinatario(r, w)
}

func DeserializeUnionNullDestinatario(r io.Reader) (*UnionNullDestinatario, error) {
	t := NewUnionNullDestinatario()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullDestinatarioFromSchema(r io.Reader, schema string) (*UnionNullDestinatario, error) {
	t := NewUnionNullDestinatario()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullDestinatario) Schema() string {
	return "[\"null\",{\"fields\":[{\"name\":\"datosPersonales\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"numeroDeDocumento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"nombreCompleto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"idInternoDelCliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"eMail\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"telefonos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"listaDeTelefonos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"tipo\",\"type\":\"string\"},{\"name\":\"numero\",\"type\":\"string\"}],\"name\":\"Telefono\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDeTelefonos\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"agrupador\",\"type\":[\"null\",\"string\"]},{\"name\":\"tipoDeDocumento\",\"type\":{\"name\":\"TipoDeDocumento\",\"symbols\":[\"undefined\",\"DNI\",\"CUIT\",\"CUIL\"],\"type\":\"enum\"}}],\"name\":\"DatosPersonales\",\"type\":\"record\"}},{\"default\":null,\"name\":\"otrosDatos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"metadatos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDePropiedades\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"contacto\",\"type\":[\"null\",\"string\"]}],\"name\":\"Destinatario\",\"type\":\"record\"}]"
}

func (_ *UnionNullDestinatario) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullDestinatario) SetLong(v int64) {

	r.UnionType = (UnionNullDestinatarioTypeEnum)(v)
}

func (r *UnionNullDestinatario) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.Destinatario = NewDestinatario()
		return &types.Record{Target: (&r.Destinatario)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullDestinatario) NullField(i int)                  { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) HintSize(i int)                   { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullDestinatario) Finalize()                        {}

func (r *UnionNullDestinatario) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullDestinatarioTypeEnumDestinatario:
		return json.Marshal(map[string]interface{}{"Andreani.Wap.DatosDeReferencia.Destinatario": r.Destinatario})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullDestinatario")
}

func (r *UnionNullDestinatario) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["Andreani.Wap.DatosDeReferencia.Destinatario"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.Destinatario)
	}
	return fmt.Errorf("invalid value for *UnionNullDestinatario")
}
