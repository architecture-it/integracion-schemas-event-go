// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     CreacionDeOrdenDeCompraRechazada.avsc
 */
package Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullArticuloTypeEnum int

const (
	UnionNullArticuloTypeEnumArticulo UnionNullArticuloTypeEnum = 1
)

type UnionNullArticulo struct {
	Null      *types.NullVal
	Articulo  Articulo
	UnionType UnionNullArticuloTypeEnum
}

func writeUnionNullArticulo(r *UnionNullArticulo, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullArticuloTypeEnumArticulo:
		return writeArticulo(r.Articulo, w)
	}
	return fmt.Errorf("invalid value for *UnionNullArticulo")
}

func NewUnionNullArticulo() *UnionNullArticulo {
	return &UnionNullArticulo{}
}

func (r *UnionNullArticulo) Serialize(w io.Writer) error {
	return writeUnionNullArticulo(r, w)
}

func DeserializeUnionNullArticulo(r io.Reader) (*UnionNullArticulo, error) {
	t := NewUnionNullArticulo()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullArticuloFromSchema(r io.Reader, schema string) (*UnionNullArticulo, error) {
	t := NewUnionNullArticulo()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullArticulo) Schema() string {
	return "[\"null\",{\"fields\":[{\"name\":\"codigo\",\"type\":\"string\"},{\"name\":\"propietario\",\"type\":\"string\"},{\"default\":null,\"name\":\"lote\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"codigo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteDeFabricante\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteSecundario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"fechaDeVencimiento\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"otrosDatos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"metadatos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDePropiedades\",\"type\":\"record\"}]}],\"name\":\"Lote\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"otrosDatos\",\"type\":[\"null\",\"Andreani.Wap.DatosDeReferencia.ListaDePropiedades\"]}],\"name\":\"Articulo\",\"type\":\"record\"}]"
}

func (_ *UnionNullArticulo) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullArticulo) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullArticulo) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullArticulo) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullArticulo) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullArticulo) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullArticulo) SetLong(v int64) {

	r.UnionType = (UnionNullArticuloTypeEnum)(v)
}

func (r *UnionNullArticulo) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.Articulo = NewArticulo()
		return &types.Record{Target: (&r.Articulo)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullArticulo) NullField(i int)                  { panic("Unsupported operation") }
func (_ *UnionNullArticulo) HintSize(i int)                   { panic("Unsupported operation") }
func (_ *UnionNullArticulo) SetDefault(i int)                 { panic("Unsupported operation") }
func (_ *UnionNullArticulo) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ *UnionNullArticulo) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ *UnionNullArticulo) Finalize()                        {}

func (r *UnionNullArticulo) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullArticuloTypeEnumArticulo:
		return json.Marshal(map[string]interface{}{"Andreani.Wap.DatosDeReferencia.Articulo": r.Articulo})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullArticulo")
}

func (r *UnionNullArticulo) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["Andreani.Wap.DatosDeReferencia.Articulo"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.Articulo)
	}
	return fmt.Errorf("invalid value for *UnionNullArticulo")
}
