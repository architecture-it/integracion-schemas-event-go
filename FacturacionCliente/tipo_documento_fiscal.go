// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     TipoDocumentoFiscal.avsc
 */
package FacturacionClienteEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type TipoDocumentoFiscal int32

const (
	TipoDocumentoFiscalUndefined TipoDocumentoFiscal = 0
	TipoDocumentoFiscalTDF86     TipoDocumentoFiscal = 1
	TipoDocumentoFiscalTDF80     TipoDocumentoFiscal = 2
	TipoDocumentoFiscalTDF83     TipoDocumentoFiscal = 3
	TipoDocumentoFiscalTDF96     TipoDocumentoFiscal = 4
	TipoDocumentoFiscalTDF13     TipoDocumentoFiscal = 5
	TipoDocumentoFiscalTDF14     TipoDocumentoFiscal = 6
	TipoDocumentoFiscalTDF16     TipoDocumentoFiscal = 7
	TipoDocumentoFiscalTDF17     TipoDocumentoFiscal = 8
	TipoDocumentoFiscalTDF18     TipoDocumentoFiscal = 9
	TipoDocumentoFiscalTDF19     TipoDocumentoFiscal = 10
	TipoDocumentoFiscalTDF20     TipoDocumentoFiscal = 11
	TipoDocumentoFiscalTDF21     TipoDocumentoFiscal = 12
	TipoDocumentoFiscalTDF22     TipoDocumentoFiscal = 13
	TipoDocumentoFiscalTDF23     TipoDocumentoFiscal = 14
	TipoDocumentoFiscalTDF24     TipoDocumentoFiscal = 15
	TipoDocumentoFiscalTDF85     TipoDocumentoFiscal = 16
	TipoDocumentoFiscalTDF87     TipoDocumentoFiscal = 17
	TipoDocumentoFiscalTDF89     TipoDocumentoFiscal = 18
	TipoDocumentoFiscalTDF90     TipoDocumentoFiscal = 19
	TipoDocumentoFiscalTDF94     TipoDocumentoFiscal = 20
	TipoDocumentoFiscalTDF99     TipoDocumentoFiscal = 21
)

func (e TipoDocumentoFiscal) String() string {
	switch e {
	case TipoDocumentoFiscalUndefined:
		return "undefined"
	case TipoDocumentoFiscalTDF86:
		return "TDF86"
	case TipoDocumentoFiscalTDF80:
		return "TDF80"
	case TipoDocumentoFiscalTDF83:
		return "TDF83"
	case TipoDocumentoFiscalTDF96:
		return "TDF96"
	case TipoDocumentoFiscalTDF13:
		return "TDF13"
	case TipoDocumentoFiscalTDF14:
		return "TDF14"
	case TipoDocumentoFiscalTDF16:
		return "TDF16"
	case TipoDocumentoFiscalTDF17:
		return "TDF17"
	case TipoDocumentoFiscalTDF18:
		return "TDF18"
	case TipoDocumentoFiscalTDF19:
		return "TDF19"
	case TipoDocumentoFiscalTDF20:
		return "TDF20"
	case TipoDocumentoFiscalTDF21:
		return "TDF21"
	case TipoDocumentoFiscalTDF22:
		return "TDF22"
	case TipoDocumentoFiscalTDF23:
		return "TDF23"
	case TipoDocumentoFiscalTDF24:
		return "TDF24"
	case TipoDocumentoFiscalTDF85:
		return "TDF85"
	case TipoDocumentoFiscalTDF87:
		return "TDF87"
	case TipoDocumentoFiscalTDF89:
		return "TDF89"
	case TipoDocumentoFiscalTDF90:
		return "TDF90"
	case TipoDocumentoFiscalTDF94:
		return "TDF94"
	case TipoDocumentoFiscalTDF99:
		return "TDF99"
	}
	return "unknown"
}

func writeTipoDocumentoFiscal(r TipoDocumentoFiscal, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewTipoDocumentoFiscalValue(raw string) (r TipoDocumentoFiscal, err error) {
	switch raw {
	case "undefined":
		return TipoDocumentoFiscalUndefined, nil
	case "TDF86":
		return TipoDocumentoFiscalTDF86, nil
	case "TDF80":
		return TipoDocumentoFiscalTDF80, nil
	case "TDF83":
		return TipoDocumentoFiscalTDF83, nil
	case "TDF96":
		return TipoDocumentoFiscalTDF96, nil
	case "TDF13":
		return TipoDocumentoFiscalTDF13, nil
	case "TDF14":
		return TipoDocumentoFiscalTDF14, nil
	case "TDF16":
		return TipoDocumentoFiscalTDF16, nil
	case "TDF17":
		return TipoDocumentoFiscalTDF17, nil
	case "TDF18":
		return TipoDocumentoFiscalTDF18, nil
	case "TDF19":
		return TipoDocumentoFiscalTDF19, nil
	case "TDF20":
		return TipoDocumentoFiscalTDF20, nil
	case "TDF21":
		return TipoDocumentoFiscalTDF21, nil
	case "TDF22":
		return TipoDocumentoFiscalTDF22, nil
	case "TDF23":
		return TipoDocumentoFiscalTDF23, nil
	case "TDF24":
		return TipoDocumentoFiscalTDF24, nil
	case "TDF85":
		return TipoDocumentoFiscalTDF85, nil
	case "TDF87":
		return TipoDocumentoFiscalTDF87, nil
	case "TDF89":
		return TipoDocumentoFiscalTDF89, nil
	case "TDF90":
		return TipoDocumentoFiscalTDF90, nil
	case "TDF94":
		return TipoDocumentoFiscalTDF94, nil
	case "TDF99":
		return TipoDocumentoFiscalTDF99, nil
	}

	return -1, fmt.Errorf("invalid value for TipoDocumentoFiscal: '%s'", raw)

}

func (b TipoDocumentoFiscal) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *TipoDocumentoFiscal) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewTipoDocumentoFiscalValue(stringVal)
	*b = val
	return err
}

type TipoDocumentoFiscalWrapper struct {
	Target *TipoDocumentoFiscal
}

func (b TipoDocumentoFiscalWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b TipoDocumentoFiscalWrapper) SetInt(v int32) {
	*(b.Target) = TipoDocumentoFiscal(v)
}

func (b TipoDocumentoFiscalWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b TipoDocumentoFiscalWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b TipoDocumentoFiscalWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b TipoDocumentoFiscalWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b TipoDocumentoFiscalWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b TipoDocumentoFiscalWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b TipoDocumentoFiscalWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b TipoDocumentoFiscalWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b TipoDocumentoFiscalWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b TipoDocumentoFiscalWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b TipoDocumentoFiscalWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b TipoDocumentoFiscalWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b TipoDocumentoFiscalWrapper) Finalize() {}
