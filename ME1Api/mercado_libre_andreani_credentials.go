// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     MercadoLibreAndreaniCredentials.avsc
 */
package ME1ApiEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type MercadoLibreAndreaniCredentials struct {
	ClientId string `json:"ClientId"`

	ContractId string `json:"ContractId"`

	UserMeliId int32 `json:"UserMeliId"`
}

const MercadoLibreAndreaniCredentialsAvroCRC64Fingerprint = "$+h\x1c»Ñ%U"

func NewMercadoLibreAndreaniCredentials() MercadoLibreAndreaniCredentials {
	r := MercadoLibreAndreaniCredentials{}
	return r
}

func DeserializeMercadoLibreAndreaniCredentials(r io.Reader) (MercadoLibreAndreaniCredentials, error) {
	t := NewMercadoLibreAndreaniCredentials()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeMercadoLibreAndreaniCredentialsFromSchema(r io.Reader, schema string) (MercadoLibreAndreaniCredentials, error) {
	t := NewMercadoLibreAndreaniCredentials()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeMercadoLibreAndreaniCredentials(r MercadoLibreAndreaniCredentials, w io.Writer) error {
	var err error
	err = vm.WriteString(r.ClientId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.ContractId, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.UserMeliId, w)
	if err != nil {
		return err
	}
	return err
}

func (r MercadoLibreAndreaniCredentials) Serialize(w io.Writer) error {
	return writeMercadoLibreAndreaniCredentials(r, w)
}

func (r MercadoLibreAndreaniCredentials) Schema() string {
	return "{\"fields\":[{\"name\":\"ClientId\",\"type\":\"string\"},{\"name\":\"ContractId\",\"type\":\"string\"},{\"name\":\"UserMeliId\",\"type\":\"int\"}],\"name\":\"Andreani.Me1Backend.Events.Record.MercadoLibreAndreaniCredentials\",\"type\":\"record\"}"
}

func (r MercadoLibreAndreaniCredentials) SchemaName() string {
	return "Andreani.Me1Backend.Events.Record.MercadoLibreAndreaniCredentials"
}

func (_ MercadoLibreAndreaniCredentials) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) SetInt(v int32)       { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) SetLong(v int64)      { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) SetString(v string)   { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *MercadoLibreAndreaniCredentials) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.ClientId}

		return w

	case 1:
		w := types.String{Target: &r.ContractId}

		return w

	case 2:
		w := types.Int{Target: &r.UserMeliId}

		return w

	}
	panic("Unknown field index")
}

func (r *MercadoLibreAndreaniCredentials) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *MercadoLibreAndreaniCredentials) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ MercadoLibreAndreaniCredentials) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ MercadoLibreAndreaniCredentials) AppendArray() types.Field { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) HintSize(int)             { panic("Unsupported operation") }
func (_ MercadoLibreAndreaniCredentials) Finalize()                {}

func (_ MercadoLibreAndreaniCredentials) AvroCRC64Fingerprint() []byte {
	return []byte(MercadoLibreAndreaniCredentialsAvroCRC64Fingerprint)
}

func (r MercadoLibreAndreaniCredentials) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["ClientId"], err = json.Marshal(r.ClientId)
	if err != nil {
		return nil, err
	}
	output["ContractId"], err = json.Marshal(r.ContractId)
	if err != nil {
		return nil, err
	}
	output["UserMeliId"], err = json.Marshal(r.UserMeliId)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *MercadoLibreAndreaniCredentials) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["ClientId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ClientId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ClientId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ContractId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContractId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ContractId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["UserMeliId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UserMeliId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for UserMeliId")
	}
	return nil
}
