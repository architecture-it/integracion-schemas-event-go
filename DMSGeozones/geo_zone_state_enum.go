// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     GeoZoneStateEnum.avsc
 */
package DMSGeozonesEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type GeoZoneStateEnum int32

const (
	GeoZoneStateEnumACTIVE    GeoZoneStateEnum = 0
	GeoZoneStateEnumSUSPENDED GeoZoneStateEnum = 1
	GeoZoneStateEnumDRAFT     GeoZoneStateEnum = 2
	GeoZoneStateEnumDELETED   GeoZoneStateEnum = 3
	GeoZoneStateEnumINACTIVE  GeoZoneStateEnum = 4
)

func (e GeoZoneStateEnum) String() string {
	switch e {
	case GeoZoneStateEnumACTIVE:
		return "ACTIVE"
	case GeoZoneStateEnumSUSPENDED:
		return "SUSPENDED"
	case GeoZoneStateEnumDRAFT:
		return "DRAFT"
	case GeoZoneStateEnumDELETED:
		return "DELETED"
	case GeoZoneStateEnumINACTIVE:
		return "INACTIVE"
	}
	return "unknown"
}

func writeGeoZoneStateEnum(r GeoZoneStateEnum, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewGeoZoneStateEnumValue(raw string) (r GeoZoneStateEnum, err error) {
	switch raw {
	case "ACTIVE":
		return GeoZoneStateEnumACTIVE, nil
	case "SUSPENDED":
		return GeoZoneStateEnumSUSPENDED, nil
	case "DRAFT":
		return GeoZoneStateEnumDRAFT, nil
	case "DELETED":
		return GeoZoneStateEnumDELETED, nil
	case "INACTIVE":
		return GeoZoneStateEnumINACTIVE, nil
	}

	return -1, fmt.Errorf("invalid value for GeoZoneStateEnum: '%s'", raw)

}

func (b GeoZoneStateEnum) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *GeoZoneStateEnum) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewGeoZoneStateEnumValue(stringVal)
	*b = val
	return err
}

type GeoZoneStateEnumWrapper struct {
	Target *GeoZoneStateEnum
}

func (b GeoZoneStateEnumWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b GeoZoneStateEnumWrapper) SetInt(v int32) {
	*(b.Target) = GeoZoneStateEnum(v)
}

func (b GeoZoneStateEnumWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b GeoZoneStateEnumWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b GeoZoneStateEnumWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b GeoZoneStateEnumWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b GeoZoneStateEnumWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b GeoZoneStateEnumWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b GeoZoneStateEnumWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b GeoZoneStateEnumWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b GeoZoneStateEnumWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b GeoZoneStateEnumWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b GeoZoneStateEnumWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b GeoZoneStateEnumWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b GeoZoneStateEnumWrapper) Finalize() {}
