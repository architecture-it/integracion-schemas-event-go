// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     PedidoAcondi.avsc
 */
package ApiAcondicionamientoV2Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type PedidoAcondi struct {
	ContratoWarehouse *UnionNullString `json:"contratoWarehouse"`

	Lineas []LineaPedido `json:"lineas"`
}

const PedidoAcondiAvroCRC64Fingerprint = "\x93\xba\x7f\x95\x97\x7f\x19\xf2"

func NewPedidoAcondi() PedidoAcondi {
	r := PedidoAcondi{}
	r.ContratoWarehouse = nil
	r.Lineas = make([]LineaPedido, 0)

	return r
}

func DeserializePedidoAcondi(r io.Reader) (PedidoAcondi, error) {
	t := NewPedidoAcondi()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializePedidoAcondiFromSchema(r io.Reader, schema string) (PedidoAcondi, error) {
	t := NewPedidoAcondi()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writePedidoAcondi(r PedidoAcondi, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.ContratoWarehouse, w)
	if err != nil {
		return err
	}
	err = writeArrayLineaPedido(r.Lineas, w)
	if err != nil {
		return err
	}
	return err
}

func (r PedidoAcondi) Serialize(w io.Writer) error {
	return writePedidoAcondi(r, w)
}

func (r PedidoAcondi) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"contratoWarehouse\",\"type\":[\"null\",\"string\"]},{\"name\":\"lineas\",\"type\":{\"items\":{\"fields\":[{\"default\":null,\"name\":\"almacenCliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"cantidad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteDeFabricante\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteSecundario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"fechaDeVencimiento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoLote\",\"type\":[\"null\",\"string\"]}],\"name\":\"LineaPedido\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Andreani.ApiAcondicionamientoV2.Events.Common.PedidoAcondi\",\"type\":\"record\"}"
}

func (r PedidoAcondi) SchemaName() string {
	return "Andreani.ApiAcondicionamientoV2.Events.Common.PedidoAcondi"
}

func (_ PedidoAcondi) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ PedidoAcondi) SetInt(v int32)       { panic("Unsupported operation") }
func (_ PedidoAcondi) SetLong(v int64)      { panic("Unsupported operation") }
func (_ PedidoAcondi) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ PedidoAcondi) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ PedidoAcondi) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ PedidoAcondi) SetString(v string)   { panic("Unsupported operation") }
func (_ PedidoAcondi) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *PedidoAcondi) Get(i int) types.Field {
	switch i {
	case 0:
		r.ContratoWarehouse = NewUnionNullString()

		return r.ContratoWarehouse
	case 1:
		r.Lineas = make([]LineaPedido, 0)

		w := ArrayLineaPedidoWrapper{Target: &r.Lineas}

		return w

	}
	panic("Unknown field index")
}

func (r *PedidoAcondi) SetDefault(i int) {
	switch i {
	case 0:
		r.ContratoWarehouse = nil
		return
	}
	panic("Unknown field index")
}

func (r *PedidoAcondi) NullField(i int) {
	switch i {
	case 0:
		r.ContratoWarehouse = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ PedidoAcondi) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ PedidoAcondi) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ PedidoAcondi) HintSize(int)                     { panic("Unsupported operation") }
func (_ PedidoAcondi) Finalize()                        {}

func (_ PedidoAcondi) AvroCRC64Fingerprint() []byte {
	return []byte(PedidoAcondiAvroCRC64Fingerprint)
}

func (r PedidoAcondi) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["contratoWarehouse"], err = json.Marshal(r.ContratoWarehouse)
	if err != nil {
		return nil, err
	}
	output["lineas"], err = json.Marshal(r.Lineas)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *PedidoAcondi) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["contratoWarehouse"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContratoWarehouse); err != nil {
			return err
		}
	} else {
		r.ContratoWarehouse = NewUnionNullString()

		r.ContratoWarehouse = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["lineas"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Lineas); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for lineas")
	}
	return nil
}
