// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     AcondicionamientoV2Procesado.avsc
 */
package ApiAcondicionamientoV2Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type AbastecimientoAcondi struct {
	ContratoWarehouse *UnionNullString `json:"contratoWarehouse"`

	Lineas []LineaAbastecimiento `json:"lineas"`
}

const AbastecimientoAcondiAvroCRC64Fingerprint = "2\x8f\xab\x8f\xb5\xe1H\xb8"

func NewAbastecimientoAcondi() AbastecimientoAcondi {
	r := AbastecimientoAcondi{}
	r.ContratoWarehouse = nil
	r.Lineas = make([]LineaAbastecimiento, 0)

	return r
}

func DeserializeAbastecimientoAcondi(r io.Reader) (AbastecimientoAcondi, error) {
	t := NewAbastecimientoAcondi()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeAbastecimientoAcondiFromSchema(r io.Reader, schema string) (AbastecimientoAcondi, error) {
	t := NewAbastecimientoAcondi()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeAbastecimientoAcondi(r AbastecimientoAcondi, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.ContratoWarehouse, w)
	if err != nil {
		return err
	}
	err = writeArrayLineaAbastecimiento(r.Lineas, w)
	if err != nil {
		return err
	}
	return err
}

func (r AbastecimientoAcondi) Serialize(w io.Writer) error {
	return writeAbastecimientoAcondi(r, w)
}

func (r AbastecimientoAcondi) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"contratoWarehouse\",\"type\":[\"null\",\"string\"]},{\"name\":\"lineas\",\"type\":{\"items\":{\"fields\":[{\"default\":null,\"name\":\"codigo\",\"type\":[\"null\",\"string\"]},{\"name\":\"cantidadPedida\",\"type\":\"float\"},{\"default\":null,\"name\":\"almacenWMS\",\"type\":[\"null\",\"string\"]},{\"name\":\"tipoAcondicionamiento\",\"type\":{\"items\":\"string\",\"type\":\"array\"}},{\"default\":null,\"name\":\"loteDeFabricante\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteSecundario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"fechaDeVencimiento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoLote\",\"type\":[\"null\",\"string\"]}],\"name\":\"LineaAbastecimiento\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Andreani.ApiAcondicionamientoV2.Events.Common.AbastecimientoAcondi\",\"type\":\"record\"}"
}

func (r AbastecimientoAcondi) SchemaName() string {
	return "Andreani.ApiAcondicionamientoV2.Events.Common.AbastecimientoAcondi"
}

func (_ AbastecimientoAcondi) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) SetInt(v int32)       { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) SetLong(v int64)      { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) SetString(v string)   { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *AbastecimientoAcondi) Get(i int) types.Field {
	switch i {
	case 0:
		r.ContratoWarehouse = NewUnionNullString()

		return r.ContratoWarehouse
	case 1:
		r.Lineas = make([]LineaAbastecimiento, 0)

		w := ArrayLineaAbastecimientoWrapper{Target: &r.Lineas}

		return w

	}
	panic("Unknown field index")
}

func (r *AbastecimientoAcondi) SetDefault(i int) {
	switch i {
	case 0:
		r.ContratoWarehouse = nil
		return
	}
	panic("Unknown field index")
}

func (r *AbastecimientoAcondi) NullField(i int) {
	switch i {
	case 0:
		r.ContratoWarehouse = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ AbastecimientoAcondi) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) HintSize(int)                     { panic("Unsupported operation") }
func (_ AbastecimientoAcondi) Finalize()                        {}

func (_ AbastecimientoAcondi) AvroCRC64Fingerprint() []byte {
	return []byte(AbastecimientoAcondiAvroCRC64Fingerprint)
}

func (r AbastecimientoAcondi) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["contratoWarehouse"], err = json.Marshal(r.ContratoWarehouse)
	if err != nil {
		return nil, err
	}
	output["lineas"], err = json.Marshal(r.Lineas)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *AbastecimientoAcondi) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["contratoWarehouse"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContratoWarehouse); err != nil {
			return err
		}
	} else {
		r.ContratoWarehouse = NewUnionNullString()

		r.ContratoWarehouse = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["lineas"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Lineas); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for lineas")
	}
	return nil
}
