// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EnviosEvent.avsc
 */
package CartaDocumentoBackendEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Cotizacion struct {
	IdMercadoPago *UnionNullString `json:"IdMercadoPago"`

	Iva *UnionNullString `json:"Iva"`

	PesoAforado *UnionNullString `json:"PesoAforado"`

	SeguroDistribucionSinIva *UnionNullString `json:"SeguroDistribucionSinIva"`

	SeguroDistribucionConIva *UnionNullString `json:"SeguroDistribucionConIva"`

	DistribucionSinIva *UnionNullString `json:"DistribucionSinIva"`

	DistribucionConIva *UnionNullString `json:"DistribucionConIva"`

	TarifaSinIva *UnionNullString `json:"TarifaSinIva"`

	TarifaConIva *UnionNullString `json:"TarifaConIva"`

	Descuento *UnionNullString `json:"Descuento"`

	Cupon *UnionNullString `json:"Cupon"`
}

const CotizacionAvroCRC64Fingerprint = "lI\v-\x1a|\x89;"

func NewCotizacion() Cotizacion {
	r := Cotizacion{}
	r.IdMercadoPago = nil
	r.Iva = nil
	r.PesoAforado = nil
	r.SeguroDistribucionSinIva = nil
	r.SeguroDistribucionConIva = nil
	r.DistribucionSinIva = nil
	r.DistribucionConIva = nil
	r.TarifaSinIva = nil
	r.TarifaConIva = nil
	r.Descuento = nil
	r.Cupon = nil
	return r
}

func DeserializeCotizacion(r io.Reader) (Cotizacion, error) {
	t := NewCotizacion()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCotizacionFromSchema(r io.Reader, schema string) (Cotizacion, error) {
	t := NewCotizacion()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCotizacion(r Cotizacion, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.IdMercadoPago, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Iva, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PesoAforado, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SeguroDistribucionSinIva, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SeguroDistribucionConIva, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DistribucionSinIva, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DistribucionConIva, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TarifaSinIva, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TarifaConIva, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Descuento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Cupon, w)
	if err != nil {
		return err
	}
	return err
}

func (r Cotizacion) Serialize(w io.Writer) error {
	return writeCotizacion(r, w)
}

func (r Cotizacion) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"IdMercadoPago\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Iva\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PesoAforado\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SeguroDistribucionSinIva\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SeguroDistribucionConIva\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DistribucionSinIva\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DistribucionConIva\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TarifaSinIva\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TarifaConIva\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Descuento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Cupon\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.CartaDocumentoBackend.Events.Common.Cotizacion\",\"type\":\"record\"}"
}

func (r Cotizacion) SchemaName() string {
	return "Andreani.CartaDocumentoBackend.Events.Common.Cotizacion"
}

func (_ Cotizacion) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Cotizacion) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Cotizacion) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Cotizacion) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Cotizacion) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Cotizacion) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Cotizacion) SetString(v string)   { panic("Unsupported operation") }
func (_ Cotizacion) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Cotizacion) Get(i int) types.Field {
	switch i {
	case 0:
		r.IdMercadoPago = NewUnionNullString()

		return r.IdMercadoPago
	case 1:
		r.Iva = NewUnionNullString()

		return r.Iva
	case 2:
		r.PesoAforado = NewUnionNullString()

		return r.PesoAforado
	case 3:
		r.SeguroDistribucionSinIva = NewUnionNullString()

		return r.SeguroDistribucionSinIva
	case 4:
		r.SeguroDistribucionConIva = NewUnionNullString()

		return r.SeguroDistribucionConIva
	case 5:
		r.DistribucionSinIva = NewUnionNullString()

		return r.DistribucionSinIva
	case 6:
		r.DistribucionConIva = NewUnionNullString()

		return r.DistribucionConIva
	case 7:
		r.TarifaSinIva = NewUnionNullString()

		return r.TarifaSinIva
	case 8:
		r.TarifaConIva = NewUnionNullString()

		return r.TarifaConIva
	case 9:
		r.Descuento = NewUnionNullString()

		return r.Descuento
	case 10:
		r.Cupon = NewUnionNullString()

		return r.Cupon
	}
	panic("Unknown field index")
}

func (r *Cotizacion) SetDefault(i int) {
	switch i {
	case 0:
		r.IdMercadoPago = nil
		return
	case 1:
		r.Iva = nil
		return
	case 2:
		r.PesoAforado = nil
		return
	case 3:
		r.SeguroDistribucionSinIva = nil
		return
	case 4:
		r.SeguroDistribucionConIva = nil
		return
	case 5:
		r.DistribucionSinIva = nil
		return
	case 6:
		r.DistribucionConIva = nil
		return
	case 7:
		r.TarifaSinIva = nil
		return
	case 8:
		r.TarifaConIva = nil
		return
	case 9:
		r.Descuento = nil
		return
	case 10:
		r.Cupon = nil
		return
	}
	panic("Unknown field index")
}

func (r *Cotizacion) NullField(i int) {
	switch i {
	case 0:
		r.IdMercadoPago = nil
		return
	case 1:
		r.Iva = nil
		return
	case 2:
		r.PesoAforado = nil
		return
	case 3:
		r.SeguroDistribucionSinIva = nil
		return
	case 4:
		r.SeguroDistribucionConIva = nil
		return
	case 5:
		r.DistribucionSinIva = nil
		return
	case 6:
		r.DistribucionConIva = nil
		return
	case 7:
		r.TarifaSinIva = nil
		return
	case 8:
		r.TarifaConIva = nil
		return
	case 9:
		r.Descuento = nil
		return
	case 10:
		r.Cupon = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Cotizacion) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Cotizacion) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Cotizacion) HintSize(int)                     { panic("Unsupported operation") }
func (_ Cotizacion) Finalize()                        {}

func (_ Cotizacion) AvroCRC64Fingerprint() []byte {
	return []byte(CotizacionAvroCRC64Fingerprint)
}

func (r Cotizacion) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["IdMercadoPago"], err = json.Marshal(r.IdMercadoPago)
	if err != nil {
		return nil, err
	}
	output["Iva"], err = json.Marshal(r.Iva)
	if err != nil {
		return nil, err
	}
	output["PesoAforado"], err = json.Marshal(r.PesoAforado)
	if err != nil {
		return nil, err
	}
	output["SeguroDistribucionSinIva"], err = json.Marshal(r.SeguroDistribucionSinIva)
	if err != nil {
		return nil, err
	}
	output["SeguroDistribucionConIva"], err = json.Marshal(r.SeguroDistribucionConIva)
	if err != nil {
		return nil, err
	}
	output["DistribucionSinIva"], err = json.Marshal(r.DistribucionSinIva)
	if err != nil {
		return nil, err
	}
	output["DistribucionConIva"], err = json.Marshal(r.DistribucionConIva)
	if err != nil {
		return nil, err
	}
	output["TarifaSinIva"], err = json.Marshal(r.TarifaSinIva)
	if err != nil {
		return nil, err
	}
	output["TarifaConIva"], err = json.Marshal(r.TarifaConIva)
	if err != nil {
		return nil, err
	}
	output["Descuento"], err = json.Marshal(r.Descuento)
	if err != nil {
		return nil, err
	}
	output["Cupon"], err = json.Marshal(r.Cupon)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Cotizacion) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["IdMercadoPago"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdMercadoPago); err != nil {
			return err
		}
	} else {
		r.IdMercadoPago = NewUnionNullString()

		r.IdMercadoPago = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Iva"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Iva); err != nil {
			return err
		}
	} else {
		r.Iva = NewUnionNullString()

		r.Iva = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PesoAforado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PesoAforado); err != nil {
			return err
		}
	} else {
		r.PesoAforado = NewUnionNullString()

		r.PesoAforado = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SeguroDistribucionSinIva"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SeguroDistribucionSinIva); err != nil {
			return err
		}
	} else {
		r.SeguroDistribucionSinIva = NewUnionNullString()

		r.SeguroDistribucionSinIva = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SeguroDistribucionConIva"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SeguroDistribucionConIva); err != nil {
			return err
		}
	} else {
		r.SeguroDistribucionConIva = NewUnionNullString()

		r.SeguroDistribucionConIva = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DistribucionSinIva"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DistribucionSinIva); err != nil {
			return err
		}
	} else {
		r.DistribucionSinIva = NewUnionNullString()

		r.DistribucionSinIva = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DistribucionConIva"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DistribucionConIva); err != nil {
			return err
		}
	} else {
		r.DistribucionConIva = NewUnionNullString()

		r.DistribucionConIva = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TarifaSinIva"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TarifaSinIva); err != nil {
			return err
		}
	} else {
		r.TarifaSinIva = NewUnionNullString()

		r.TarifaSinIva = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TarifaConIva"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TarifaConIva); err != nil {
			return err
		}
	} else {
		r.TarifaConIva = NewUnionNullString()

		r.TarifaConIva = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Descuento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Descuento); err != nil {
			return err
		}
	} else {
		r.Descuento = NewUnionNullString()

		r.Descuento = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Cupon"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cupon); err != nil {
			return err
		}
	} else {
		r.Cupon = NewUnionNullString()

		r.Cupon = nil
	}
	return nil
}
