// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     PropiedadAdicionalElecciones.avsc
 */
package PublicadorMobileEleccionesEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type PropiedadAdicionalElecciones struct {
	Key *UnionNullString `json:"key"`

	Value *UnionNullString `json:"value"`
}

const PropiedadAdicionalEleccionesAvroCRC64Fingerprint = "+\x95\x8e\x82C\xd7}^"

func NewPropiedadAdicionalElecciones() PropiedadAdicionalElecciones {
	r := PropiedadAdicionalElecciones{}
	r.Key = nil
	r.Value = nil
	return r
}

func DeserializePropiedadAdicionalElecciones(r io.Reader) (PropiedadAdicionalElecciones, error) {
	t := NewPropiedadAdicionalElecciones()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializePropiedadAdicionalEleccionesFromSchema(r io.Reader, schema string) (PropiedadAdicionalElecciones, error) {
	t := NewPropiedadAdicionalElecciones()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writePropiedadAdicionalElecciones(r PropiedadAdicionalElecciones, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.Key, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Value, w)
	if err != nil {
		return err
	}
	return err
}

func (r PropiedadAdicionalElecciones) Serialize(w io.Writer) error {
	return writePropiedadAdicionalElecciones(r, w)
}

func (r PropiedadAdicionalElecciones) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"key\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"value\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.PublicadorMobileElecciones.Events.Common.PropiedadAdicionalElecciones\",\"type\":\"record\"}"
}

func (r PropiedadAdicionalElecciones) SchemaName() string {
	return "Andreani.PublicadorMobileElecciones.Events.Common.PropiedadAdicionalElecciones"
}

func (_ PropiedadAdicionalElecciones) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) SetInt(v int32)       { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) SetLong(v int64)      { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) SetString(v string)   { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *PropiedadAdicionalElecciones) Get(i int) types.Field {
	switch i {
	case 0:
		r.Key = NewUnionNullString()

		return r.Key
	case 1:
		r.Value = NewUnionNullString()

		return r.Value
	}
	panic("Unknown field index")
}

func (r *PropiedadAdicionalElecciones) SetDefault(i int) {
	switch i {
	case 0:
		r.Key = nil
		return
	case 1:
		r.Value = nil
		return
	}
	panic("Unknown field index")
}

func (r *PropiedadAdicionalElecciones) NullField(i int) {
	switch i {
	case 0:
		r.Key = nil
		return
	case 1:
		r.Value = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ PropiedadAdicionalElecciones) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ PropiedadAdicionalElecciones) AppendArray() types.Field { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) HintSize(int)             { panic("Unsupported operation") }
func (_ PropiedadAdicionalElecciones) Finalize()                {}

func (_ PropiedadAdicionalElecciones) AvroCRC64Fingerprint() []byte {
	return []byte(PropiedadAdicionalEleccionesAvroCRC64Fingerprint)
}

func (r PropiedadAdicionalElecciones) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["key"], err = json.Marshal(r.Key)
	if err != nil {
		return nil, err
	}
	output["value"], err = json.Marshal(r.Value)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *PropiedadAdicionalElecciones) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["key"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Key); err != nil {
			return err
		}
	} else {
		r.Key = NewUnionNullString()

		r.Key = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["value"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Value); err != nil {
			return err
		}
	} else {
		r.Value = NewUnionNullString()

		r.Value = nil
	}
	return nil
}
