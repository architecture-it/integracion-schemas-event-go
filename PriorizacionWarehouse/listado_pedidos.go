// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     listado_pedidos.avsc
 */
package PriorizacionWarehouseEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Listado_pedidos struct {
	Orden string `json:"orden"`

	Orden_prioridad string `json:"orden_prioridad"`

	Indice_prioridad string `json:"indice_prioridad"`

	Sku []Resupply `json:"sku"`
}

const Listado_pedidosAvroCRC64Fingerprint = "/\xf0:\x82\xc5/\xf4\x9e"

func NewListado_pedidos() Listado_pedidos {
	r := Listado_pedidos{}
	r.Sku = make([]Resupply, 0)

	return r
}

func DeserializeListado_pedidos(r io.Reader) (Listado_pedidos, error) {
	t := NewListado_pedidos()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeListado_pedidosFromSchema(r io.Reader, schema string) (Listado_pedidos, error) {
	t := NewListado_pedidos()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeListado_pedidos(r Listado_pedidos, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Orden, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Orden_prioridad, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Indice_prioridad, w)
	if err != nil {
		return err
	}
	err = writeArrayResupply(r.Sku, w)
	if err != nil {
		return err
	}
	return err
}

func (r Listado_pedidos) Serialize(w io.Writer) error {
	return writeListado_pedidos(r, w)
}

func (r Listado_pedidos) Schema() string {
	return "{\"fields\":[{\"name\":\"orden\",\"type\":\"string\"},{\"name\":\"orden_prioridad\",\"type\":\"string\"},{\"name\":\"indice_prioridad\",\"type\":\"string\"},{\"name\":\"sku\",\"type\":{\"items\":{\"fields\":[{\"name\":\"sku\",\"type\":\"string\"}],\"name\":\"resupply\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Andreani.PriorizacionWarehouse.Events.Common.listado_pedidos\",\"type\":\"record\"}"
}

func (r Listado_pedidos) SchemaName() string {
	return "Andreani.PriorizacionWarehouse.Events.Common.listado_pedidos"
}

func (_ Listado_pedidos) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Listado_pedidos) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Listado_pedidos) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Listado_pedidos) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Listado_pedidos) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Listado_pedidos) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Listado_pedidos) SetString(v string)   { panic("Unsupported operation") }
func (_ Listado_pedidos) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Listado_pedidos) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Orden}

		return w

	case 1:
		w := types.String{Target: &r.Orden_prioridad}

		return w

	case 2:
		w := types.String{Target: &r.Indice_prioridad}

		return w

	case 3:
		r.Sku = make([]Resupply, 0)

		w := ArrayResupplyWrapper{Target: &r.Sku}

		return w

	}
	panic("Unknown field index")
}

func (r *Listado_pedidos) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *Listado_pedidos) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ Listado_pedidos) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Listado_pedidos) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Listado_pedidos) HintSize(int)                     { panic("Unsupported operation") }
func (_ Listado_pedidos) Finalize()                        {}

func (_ Listado_pedidos) AvroCRC64Fingerprint() []byte {
	return []byte(Listado_pedidosAvroCRC64Fingerprint)
}

func (r Listado_pedidos) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["orden"], err = json.Marshal(r.Orden)
	if err != nil {
		return nil, err
	}
	output["orden_prioridad"], err = json.Marshal(r.Orden_prioridad)
	if err != nil {
		return nil, err
	}
	output["indice_prioridad"], err = json.Marshal(r.Indice_prioridad)
	if err != nil {
		return nil, err
	}
	output["sku"], err = json.Marshal(r.Sku)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Listado_pedidos) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["orden"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Orden); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for orden")
	}
	val = func() json.RawMessage {
		if v, ok := fields["orden_prioridad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Orden_prioridad); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for orden_prioridad")
	}
	val = func() json.RawMessage {
		if v, ok := fields["indice_prioridad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Indice_prioridad); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for indice_prioridad")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sku"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sku); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sku")
	}
	return nil
}
