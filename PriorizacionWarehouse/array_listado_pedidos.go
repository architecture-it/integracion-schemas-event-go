// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EventoPriorizacionWarehouse.avsc
 */
package PriorizacionWarehouseEvents

import (
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

func writeArrayListado_pedidos(r []Listado_pedidos, w io.Writer) error {
	err := vm.WriteLong(int64(len(r)), w)
	if err != nil || len(r) == 0 {
		return err
	}
	for _, e := range r {
		err = writeListado_pedidos(e, w)
		if err != nil {
			return err
		}
	}
	return vm.WriteLong(0, w)
}

type ArrayListado_pedidosWrapper struct {
	Target *[]Listado_pedidos
}

func (_ ArrayListado_pedidosWrapper) SetBoolean(v bool)     { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) SetInt(v int32)        { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) SetLong(v int64)       { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) SetFloat(v float32)    { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) SetDouble(v float64)   { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) SetBytes(v []byte)     { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) SetString(v string)    { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) SetUnionElem(v int64)  { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) Get(i int) types.Field { panic("Unsupported operation") }
func (_ ArrayListado_pedidosWrapper) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ ArrayListado_pedidosWrapper) Finalize()        {}
func (_ ArrayListado_pedidosWrapper) SetDefault(i int) { panic("Unsupported operation") }
func (r ArrayListado_pedidosWrapper) HintSize(s int) {
	if len(*r.Target) == 0 {
		*r.Target = make([]Listado_pedidos, 0, s)
	}
}
func (r ArrayListado_pedidosWrapper) NullField(i int) {
	panic("Unsupported operation")
}

func (r ArrayListado_pedidosWrapper) AppendArray() types.Field {
	var v Listado_pedidos
	v = NewListado_pedidos()

	*r.Target = append(*r.Target, v)
	return &types.Record{Target: &(*r.Target)[len(*r.Target)-1]}
}
