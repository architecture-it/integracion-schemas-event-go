// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ClientesNovedadMarketing.avsc
 */
package NotificacionesMarketingEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ClientesNovedadMarketing struct {
	IdModelo int64 `json:"idModelo"`

	ClienteExcel *UnionNullArrayClienteExcel `json:"ClienteExcel"`
}

const ClientesNovedadMarketingAvroCRC64Fingerprint = "\xbf3\xdc|\xc4ll\xc3"

func NewClientesNovedadMarketing() ClientesNovedadMarketing {
	r := ClientesNovedadMarketing{}
	r.ClienteExcel = nil
	return r
}

func DeserializeClientesNovedadMarketing(r io.Reader) (ClientesNovedadMarketing, error) {
	t := NewClientesNovedadMarketing()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeClientesNovedadMarketingFromSchema(r io.Reader, schema string) (ClientesNovedadMarketing, error) {
	t := NewClientesNovedadMarketing()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeClientesNovedadMarketing(r ClientesNovedadMarketing, w io.Writer) error {
	var err error
	err = vm.WriteLong(r.IdModelo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayClienteExcel(r.ClienteExcel, w)
	if err != nil {
		return err
	}
	return err
}

func (r ClientesNovedadMarketing) Serialize(w io.Writer) error {
	return writeClientesNovedadMarketing(r, w)
}

func (r ClientesNovedadMarketing) Schema() string {
	return "{\"fields\":[{\"name\":\"idModelo\",\"type\":\"long\"},{\"default\":null,\"name\":\"ClienteExcel\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"default\":null,\"name\":\"Nombre\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Mail\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Descuento\",\"type\":[\"null\",\"string\"]}],\"name\":\"ClienteExcel\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"Andreani.NotificacionesMarketing.Events.Record.ClientesNovedadMarketing\",\"type\":\"record\"}"
}

func (r ClientesNovedadMarketing) SchemaName() string {
	return "Andreani.NotificacionesMarketing.Events.Record.ClientesNovedadMarketing"
}

func (_ ClientesNovedadMarketing) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) SetString(v string)   { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ClientesNovedadMarketing) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.Long{Target: &r.IdModelo}

		return w

	case 1:
		r.ClienteExcel = NewUnionNullArrayClienteExcel()

		return r.ClienteExcel
	}
	panic("Unknown field index")
}

func (r *ClientesNovedadMarketing) SetDefault(i int) {
	switch i {
	case 1:
		r.ClienteExcel = nil
		return
	}
	panic("Unknown field index")
}

func (r *ClientesNovedadMarketing) NullField(i int) {
	switch i {
	case 1:
		r.ClienteExcel = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ ClientesNovedadMarketing) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) HintSize(int)                     { panic("Unsupported operation") }
func (_ ClientesNovedadMarketing) Finalize()                        {}

func (_ ClientesNovedadMarketing) AvroCRC64Fingerprint() []byte {
	return []byte(ClientesNovedadMarketingAvroCRC64Fingerprint)
}

func (r ClientesNovedadMarketing) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["idModelo"], err = json.Marshal(r.IdModelo)
	if err != nil {
		return nil, err
	}
	output["ClienteExcel"], err = json.Marshal(r.ClienteExcel)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ClientesNovedadMarketing) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["idModelo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdModelo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for idModelo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ClienteExcel"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ClienteExcel); err != nil {
			return err
		}
	} else {
		r.ClienteExcel = NewUnionNullArrayClienteExcel()

		r.ClienteExcel = nil
	}
	return nil
}
