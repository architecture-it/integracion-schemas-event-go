// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     RespuestaFormularioPreonboarding.avsc
 */
package NotificacionesMarketingEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type RespuestaFormularioPreonboarding struct {
	IdFormulario *UnionNullString `json:"IdFormulario"`

	TituloFormulario *UnionNullString `json:"TituloFormulario"`

	Nombre *UnionNullString `json:"Nombre"`

	Apellido *UnionNullString `json:"Apellido"`

	Telefono *UnionNullString `json:"Telefono"`

	Mail *UnionNullString `json:"Mail"`

	IdOrigen *UnionNullString `json:"IdOrigen"`

	DescripcionOrigen *UnionNullString `json:"DescripcionOrigen"`
}

const RespuestaFormularioPreonboardingAvroCRC64Fingerprint = "\x1f\x1c\xf7&GÐ¬^"

func NewRespuestaFormularioPreonboarding() RespuestaFormularioPreonboarding {
	r := RespuestaFormularioPreonboarding{}
	r.IdFormulario = nil
	r.TituloFormulario = nil
	r.Nombre = nil
	r.Apellido = nil
	r.Telefono = nil
	r.Mail = nil
	r.IdOrigen = nil
	r.DescripcionOrigen = nil
	return r
}

func DeserializeRespuestaFormularioPreonboarding(r io.Reader) (RespuestaFormularioPreonboarding, error) {
	t := NewRespuestaFormularioPreonboarding()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeRespuestaFormularioPreonboardingFromSchema(r io.Reader, schema string) (RespuestaFormularioPreonboarding, error) {
	t := NewRespuestaFormularioPreonboarding()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeRespuestaFormularioPreonboarding(r RespuestaFormularioPreonboarding, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.IdFormulario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TituloFormulario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Nombre, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Apellido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Telefono, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Mail, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.IdOrigen, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DescripcionOrigen, w)
	if err != nil {
		return err
	}
	return err
}

func (r RespuestaFormularioPreonboarding) Serialize(w io.Writer) error {
	return writeRespuestaFormularioPreonboarding(r, w)
}

func (r RespuestaFormularioPreonboarding) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"IdFormulario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TituloFormulario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Nombre\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Apellido\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Telefono\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Mail\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IdOrigen\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DescripcionOrigen\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.NotificacionesMarketing.Events.Record.RespuestaFormularioPreonboarding\",\"type\":\"record\"}"
}

func (r RespuestaFormularioPreonboarding) SchemaName() string {
	return "Andreani.NotificacionesMarketing.Events.Record.RespuestaFormularioPreonboarding"
}

func (_ RespuestaFormularioPreonboarding) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) SetInt(v int32)       { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) SetLong(v int64)      { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) SetString(v string)   { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *RespuestaFormularioPreonboarding) Get(i int) types.Field {
	switch i {
	case 0:
		r.IdFormulario = NewUnionNullString()

		return r.IdFormulario
	case 1:
		r.TituloFormulario = NewUnionNullString()

		return r.TituloFormulario
	case 2:
		r.Nombre = NewUnionNullString()

		return r.Nombre
	case 3:
		r.Apellido = NewUnionNullString()

		return r.Apellido
	case 4:
		r.Telefono = NewUnionNullString()

		return r.Telefono
	case 5:
		r.Mail = NewUnionNullString()

		return r.Mail
	case 6:
		r.IdOrigen = NewUnionNullString()

		return r.IdOrigen
	case 7:
		r.DescripcionOrigen = NewUnionNullString()

		return r.DescripcionOrigen
	}
	panic("Unknown field index")
}

func (r *RespuestaFormularioPreonboarding) SetDefault(i int) {
	switch i {
	case 0:
		r.IdFormulario = nil
		return
	case 1:
		r.TituloFormulario = nil
		return
	case 2:
		r.Nombre = nil
		return
	case 3:
		r.Apellido = nil
		return
	case 4:
		r.Telefono = nil
		return
	case 5:
		r.Mail = nil
		return
	case 6:
		r.IdOrigen = nil
		return
	case 7:
		r.DescripcionOrigen = nil
		return
	}
	panic("Unknown field index")
}

func (r *RespuestaFormularioPreonboarding) NullField(i int) {
	switch i {
	case 0:
		r.IdFormulario = nil
		return
	case 1:
		r.TituloFormulario = nil
		return
	case 2:
		r.Nombre = nil
		return
	case 3:
		r.Apellido = nil
		return
	case 4:
		r.Telefono = nil
		return
	case 5:
		r.Mail = nil
		return
	case 6:
		r.IdOrigen = nil
		return
	case 7:
		r.DescripcionOrigen = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ RespuestaFormularioPreonboarding) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ RespuestaFormularioPreonboarding) AppendArray() types.Field { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) HintSize(int)             { panic("Unsupported operation") }
func (_ RespuestaFormularioPreonboarding) Finalize()                {}

func (_ RespuestaFormularioPreonboarding) AvroCRC64Fingerprint() []byte {
	return []byte(RespuestaFormularioPreonboardingAvroCRC64Fingerprint)
}

func (r RespuestaFormularioPreonboarding) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["IdFormulario"], err = json.Marshal(r.IdFormulario)
	if err != nil {
		return nil, err
	}
	output["TituloFormulario"], err = json.Marshal(r.TituloFormulario)
	if err != nil {
		return nil, err
	}
	output["Nombre"], err = json.Marshal(r.Nombre)
	if err != nil {
		return nil, err
	}
	output["Apellido"], err = json.Marshal(r.Apellido)
	if err != nil {
		return nil, err
	}
	output["Telefono"], err = json.Marshal(r.Telefono)
	if err != nil {
		return nil, err
	}
	output["Mail"], err = json.Marshal(r.Mail)
	if err != nil {
		return nil, err
	}
	output["IdOrigen"], err = json.Marshal(r.IdOrigen)
	if err != nil {
		return nil, err
	}
	output["DescripcionOrigen"], err = json.Marshal(r.DescripcionOrigen)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *RespuestaFormularioPreonboarding) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["IdFormulario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdFormulario); err != nil {
			return err
		}
	} else {
		r.IdFormulario = NewUnionNullString()

		r.IdFormulario = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TituloFormulario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TituloFormulario); err != nil {
			return err
		}
	} else {
		r.TituloFormulario = NewUnionNullString()

		r.TituloFormulario = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Nombre"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Nombre); err != nil {
			return err
		}
	} else {
		r.Nombre = NewUnionNullString()

		r.Nombre = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Apellido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Apellido); err != nil {
			return err
		}
	} else {
		r.Apellido = NewUnionNullString()

		r.Apellido = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Telefono"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Telefono); err != nil {
			return err
		}
	} else {
		r.Telefono = NewUnionNullString()

		r.Telefono = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Mail"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Mail); err != nil {
			return err
		}
	} else {
		r.Mail = NewUnionNullString()

		r.Mail = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["IdOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdOrigen); err != nil {
			return err
		}
	} else {
		r.IdOrigen = NewUnionNullString()

		r.IdOrigen = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DescripcionOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DescripcionOrigen); err != nil {
			return err
		}
	} else {
		r.DescripcionOrigen = NewUnionNullString()

		r.DescripcionOrigen = nil
	}
	return nil
}
