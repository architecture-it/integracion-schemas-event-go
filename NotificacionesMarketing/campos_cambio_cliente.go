// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     CamposCambioCliente.avsc
 */
package NotificacionesMarketingEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CamposCambioCliente struct {
	Campo *UnionNullString `json:"Campo"`

	ValorAnterior *UnionNullString `json:"ValorAnterior"`

	ValorNuevo *UnionNullString `json:"ValorNuevo"`
}

const CamposCambioClienteAvroCRC64Fingerprint = "/\xf7}\x98\xfe\xca0a"

func NewCamposCambioCliente() CamposCambioCliente {
	r := CamposCambioCliente{}
	r.Campo = nil
	r.ValorAnterior = nil
	r.ValorNuevo = nil
	return r
}

func DeserializeCamposCambioCliente(r io.Reader) (CamposCambioCliente, error) {
	t := NewCamposCambioCliente()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCamposCambioClienteFromSchema(r io.Reader, schema string) (CamposCambioCliente, error) {
	t := NewCamposCambioCliente()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCamposCambioCliente(r CamposCambioCliente, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.Campo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ValorAnterior, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ValorNuevo, w)
	if err != nil {
		return err
	}
	return err
}

func (r CamposCambioCliente) Serialize(w io.Writer) error {
	return writeCamposCambioCliente(r, w)
}

func (r CamposCambioCliente) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"Campo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ValorAnterior\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ValorNuevo\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.NotificacionesMarketing.Events.Record.CamposCambioCliente\",\"type\":\"record\"}"
}

func (r CamposCambioCliente) SchemaName() string {
	return "Andreani.NotificacionesMarketing.Events.Record.CamposCambioCliente"
}

func (_ CamposCambioCliente) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ CamposCambioCliente) SetInt(v int32)       { panic("Unsupported operation") }
func (_ CamposCambioCliente) SetLong(v int64)      { panic("Unsupported operation") }
func (_ CamposCambioCliente) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ CamposCambioCliente) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ CamposCambioCliente) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ CamposCambioCliente) SetString(v string)   { panic("Unsupported operation") }
func (_ CamposCambioCliente) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *CamposCambioCliente) Get(i int) types.Field {
	switch i {
	case 0:
		r.Campo = NewUnionNullString()

		return r.Campo
	case 1:
		r.ValorAnterior = NewUnionNullString()

		return r.ValorAnterior
	case 2:
		r.ValorNuevo = NewUnionNullString()

		return r.ValorNuevo
	}
	panic("Unknown field index")
}

func (r *CamposCambioCliente) SetDefault(i int) {
	switch i {
	case 0:
		r.Campo = nil
		return
	case 1:
		r.ValorAnterior = nil
		return
	case 2:
		r.ValorNuevo = nil
		return
	}
	panic("Unknown field index")
}

func (r *CamposCambioCliente) NullField(i int) {
	switch i {
	case 0:
		r.Campo = nil
		return
	case 1:
		r.ValorAnterior = nil
		return
	case 2:
		r.ValorNuevo = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ CamposCambioCliente) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ CamposCambioCliente) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ CamposCambioCliente) HintSize(int)                     { panic("Unsupported operation") }
func (_ CamposCambioCliente) Finalize()                        {}

func (_ CamposCambioCliente) AvroCRC64Fingerprint() []byte {
	return []byte(CamposCambioClienteAvroCRC64Fingerprint)
}

func (r CamposCambioCliente) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Campo"], err = json.Marshal(r.Campo)
	if err != nil {
		return nil, err
	}
	output["ValorAnterior"], err = json.Marshal(r.ValorAnterior)
	if err != nil {
		return nil, err
	}
	output["ValorNuevo"], err = json.Marshal(r.ValorNuevo)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *CamposCambioCliente) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Campo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Campo); err != nil {
			return err
		}
	} else {
		r.Campo = NewUnionNullString()

		r.Campo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ValorAnterior"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ValorAnterior); err != nil {
			return err
		}
	} else {
		r.ValorAnterior = NewUnionNullString()

		r.ValorAnterior = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ValorNuevo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ValorNuevo); err != nil {
			return err
		}
	} else {
		r.ValorNuevo = NewUnionNullString()

		r.ValorNuevo = nil
	}
	return nil
}
