// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     UOHdrCreada.avsc
 */
package UOPublisherHdrEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type GeoPos struct {
	Latitud string `json:"Latitud"`

	Longitud string `json:"Longitud"`
}

const GeoPosAvroCRC64Fingerprint = "\x88\xb3\x97\xbdU7\x9a\xf0"

func NewGeoPos() GeoPos {
	r := GeoPos{}
	return r
}

func DeserializeGeoPos(r io.Reader) (GeoPos, error) {
	t := NewGeoPos()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeGeoPosFromSchema(r io.Reader, schema string) (GeoPos, error) {
	t := NewGeoPos()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeGeoPos(r GeoPos, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Latitud, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Longitud, w)
	if err != nil {
		return err
	}
	return err
}

func (r GeoPos) Serialize(w io.Writer) error {
	return writeGeoPos(r, w)
}

func (r GeoPos) Schema() string {
	return "{\"fields\":[{\"name\":\"Latitud\",\"type\":\"string\"},{\"name\":\"Longitud\",\"type\":\"string\"}],\"name\":\"Andreani.UOPublisherHdr.Events.Common.GeoPos\",\"type\":\"record\"}"
}

func (r GeoPos) SchemaName() string {
	return "Andreani.UOPublisherHdr.Events.Common.GeoPos"
}

func (_ GeoPos) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ GeoPos) SetInt(v int32)       { panic("Unsupported operation") }
func (_ GeoPos) SetLong(v int64)      { panic("Unsupported operation") }
func (_ GeoPos) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ GeoPos) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ GeoPos) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ GeoPos) SetString(v string)   { panic("Unsupported operation") }
func (_ GeoPos) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *GeoPos) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Latitud}

		return w

	case 1:
		w := types.String{Target: &r.Longitud}

		return w

	}
	panic("Unknown field index")
}

func (r *GeoPos) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *GeoPos) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ GeoPos) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ GeoPos) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ GeoPos) HintSize(int)                     { panic("Unsupported operation") }
func (_ GeoPos) Finalize()                        {}

func (_ GeoPos) AvroCRC64Fingerprint() []byte {
	return []byte(GeoPosAvroCRC64Fingerprint)
}

func (r GeoPos) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Latitud"], err = json.Marshal(r.Latitud)
	if err != nil {
		return nil, err
	}
	output["Longitud"], err = json.Marshal(r.Longitud)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *GeoPos) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Latitud"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Latitud); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Latitud")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Longitud"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Longitud); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Longitud")
	}
	return nil
}
