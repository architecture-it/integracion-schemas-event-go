// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     UOHdrCreada.avsc
 */
package UOPublisherHdrEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Envio struct {
	NumeroDeEnvio string `json:"NumeroDeEnvio"`

	OrdenEscaneo int32 `json:"ordenEscaneo"`

	OrdenEntrega int32 `json:"ordenEntrega"`

	Origen string `json:"Origen"`

	NumeroHdrOrigen *UnionNullString `json:"NumeroHdrOrigen"`

	ClienteId int32 `json:"ClienteId"`

	DestinatarioId int32 `json:"DestinatarioId"`

	DireccionId int32 `json:"DireccionId"`

	TipoDeServicioId *UnionNullInt `json:"TipoDeServicioId"`

	Contrato *UnionNullString `json:"Contrato"`

	FranjaHoraria *UnionNullString `json:"franjaHoraria"`

	ProximaFase *UnionNullString `json:"proximaFase"`

	DeclarationState *UnionNullInt `json:"DeclarationState"`

	Componentes *UnionNullArrayPieceComponent `json:"Componentes"`

	BultoData *UnionNullBultoData `json:"BultoData"`
}

const EnvioAvroCRC64Fingerprint = " \xe7\xc7!\xf6\xa1|\x96"

func NewEnvio() Envio {
	r := Envio{}
	r.NumeroHdrOrigen = nil
	r.TipoDeServicioId = nil
	r.Contrato = nil
	r.FranjaHoraria = nil
	r.ProximaFase = nil
	r.DeclarationState = nil
	r.Componentes = nil
	r.BultoData = nil
	return r
}

func DeserializeEnvio(r io.Reader) (Envio, error) {
	t := NewEnvio()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeEnvioFromSchema(r io.Reader, schema string) (Envio, error) {
	t := NewEnvio()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeEnvio(r Envio, w io.Writer) error {
	var err error
	err = vm.WriteString(r.NumeroDeEnvio, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.OrdenEscaneo, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.OrdenEntrega, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Origen, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroHdrOrigen, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.ClienteId, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.DestinatarioId, w)
	if err != nil {
		return err
	}
	err = vm.WriteInt(r.DireccionId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.TipoDeServicioId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Contrato, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FranjaHoraria, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ProximaFase, w)
	if err != nil {
		return err
	}
	err = writeUnionNullInt(r.DeclarationState, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayPieceComponent(r.Componentes, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBultoData(r.BultoData, w)
	if err != nil {
		return err
	}
	return err
}

func (r Envio) Serialize(w io.Writer) error {
	return writeEnvio(r, w)
}

func (r Envio) Schema() string {
	return "{\"fields\":[{\"name\":\"NumeroDeEnvio\",\"type\":\"string\"},{\"name\":\"ordenEscaneo\",\"type\":\"int\"},{\"name\":\"ordenEntrega\",\"type\":\"int\"},{\"name\":\"Origen\",\"type\":\"string\"},{\"default\":null,\"name\":\"NumeroHdrOrigen\",\"type\":[\"null\",\"string\"]},{\"name\":\"ClienteId\",\"type\":\"int\"},{\"name\":\"DestinatarioId\",\"type\":\"int\"},{\"name\":\"DireccionId\",\"type\":\"int\"},{\"default\":null,\"name\":\"TipoDeServicioId\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"Contrato\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"franjaHoraria\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"proximaFase\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DeclarationState\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"Componentes\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"componentCode\",\"type\":\"string\"},{\"name\":\"componentValue\",\"type\":\"string\"}],\"name\":\"PieceComponent\",\"type\":\"record\"},\"type\":\"array\"}]},{\"default\":null,\"name\":\"BultoData\",\"type\":[\"null\",{\"fields\":[{\"name\":\"Numero\",\"type\":\"int\"},{\"name\":\"Codigos\",\"type\":{\"items\":\"string\",\"type\":\"array\"}}],\"name\":\"BultoData\",\"type\":\"record\"}]}],\"name\":\"Andreani.UOPublisherHdr.Events.Common.Envio\",\"type\":\"record\"}"
}

func (r Envio) SchemaName() string {
	return "Andreani.UOPublisherHdr.Events.Common.Envio"
}

func (_ Envio) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Envio) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Envio) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Envio) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Envio) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Envio) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Envio) SetString(v string)   { panic("Unsupported operation") }
func (_ Envio) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Envio) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.NumeroDeEnvio}

		return w

	case 1:
		w := types.Int{Target: &r.OrdenEscaneo}

		return w

	case 2:
		w := types.Int{Target: &r.OrdenEntrega}

		return w

	case 3:
		w := types.String{Target: &r.Origen}

		return w

	case 4:
		r.NumeroHdrOrigen = NewUnionNullString()

		return r.NumeroHdrOrigen
	case 5:
		w := types.Int{Target: &r.ClienteId}

		return w

	case 6:
		w := types.Int{Target: &r.DestinatarioId}

		return w

	case 7:
		w := types.Int{Target: &r.DireccionId}

		return w

	case 8:
		r.TipoDeServicioId = NewUnionNullInt()

		return r.TipoDeServicioId
	case 9:
		r.Contrato = NewUnionNullString()

		return r.Contrato
	case 10:
		r.FranjaHoraria = NewUnionNullString()

		return r.FranjaHoraria
	case 11:
		r.ProximaFase = NewUnionNullString()

		return r.ProximaFase
	case 12:
		r.DeclarationState = NewUnionNullInt()

		return r.DeclarationState
	case 13:
		r.Componentes = NewUnionNullArrayPieceComponent()

		return r.Componentes
	case 14:
		r.BultoData = NewUnionNullBultoData()

		return r.BultoData
	}
	panic("Unknown field index")
}

func (r *Envio) SetDefault(i int) {
	switch i {
	case 4:
		r.NumeroHdrOrigen = nil
		return
	case 8:
		r.TipoDeServicioId = nil
		return
	case 9:
		r.Contrato = nil
		return
	case 10:
		r.FranjaHoraria = nil
		return
	case 11:
		r.ProximaFase = nil
		return
	case 12:
		r.DeclarationState = nil
		return
	case 13:
		r.Componentes = nil
		return
	case 14:
		r.BultoData = nil
		return
	}
	panic("Unknown field index")
}

func (r *Envio) NullField(i int) {
	switch i {
	case 4:
		r.NumeroHdrOrigen = nil
		return
	case 8:
		r.TipoDeServicioId = nil
		return
	case 9:
		r.Contrato = nil
		return
	case 10:
		r.FranjaHoraria = nil
		return
	case 11:
		r.ProximaFase = nil
		return
	case 12:
		r.DeclarationState = nil
		return
	case 13:
		r.Componentes = nil
		return
	case 14:
		r.BultoData = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Envio) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Envio) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Envio) HintSize(int)                     { panic("Unsupported operation") }
func (_ Envio) Finalize()                        {}

func (_ Envio) AvroCRC64Fingerprint() []byte {
	return []byte(EnvioAvroCRC64Fingerprint)
}

func (r Envio) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["NumeroDeEnvio"], err = json.Marshal(r.NumeroDeEnvio)
	if err != nil {
		return nil, err
	}
	output["ordenEscaneo"], err = json.Marshal(r.OrdenEscaneo)
	if err != nil {
		return nil, err
	}
	output["ordenEntrega"], err = json.Marshal(r.OrdenEntrega)
	if err != nil {
		return nil, err
	}
	output["Origen"], err = json.Marshal(r.Origen)
	if err != nil {
		return nil, err
	}
	output["NumeroHdrOrigen"], err = json.Marshal(r.NumeroHdrOrigen)
	if err != nil {
		return nil, err
	}
	output["ClienteId"], err = json.Marshal(r.ClienteId)
	if err != nil {
		return nil, err
	}
	output["DestinatarioId"], err = json.Marshal(r.DestinatarioId)
	if err != nil {
		return nil, err
	}
	output["DireccionId"], err = json.Marshal(r.DireccionId)
	if err != nil {
		return nil, err
	}
	output["TipoDeServicioId"], err = json.Marshal(r.TipoDeServicioId)
	if err != nil {
		return nil, err
	}
	output["Contrato"], err = json.Marshal(r.Contrato)
	if err != nil {
		return nil, err
	}
	output["franjaHoraria"], err = json.Marshal(r.FranjaHoraria)
	if err != nil {
		return nil, err
	}
	output["proximaFase"], err = json.Marshal(r.ProximaFase)
	if err != nil {
		return nil, err
	}
	output["DeclarationState"], err = json.Marshal(r.DeclarationState)
	if err != nil {
		return nil, err
	}
	output["Componentes"], err = json.Marshal(r.Componentes)
	if err != nil {
		return nil, err
	}
	output["BultoData"], err = json.Marshal(r.BultoData)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Envio) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["NumeroDeEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDeEnvio); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroDeEnvio")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ordenEscaneo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenEscaneo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ordenEscaneo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ordenEntrega"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenEntrega); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ordenEntrega")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Origen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Origen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Origen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroHdrOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroHdrOrigen); err != nil {
			return err
		}
	} else {
		r.NumeroHdrOrigen = NewUnionNullString()

		r.NumeroHdrOrigen = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ClienteId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ClienteId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ClienteId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DestinatarioId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DireccionId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DireccionId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for DireccionId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoDeServicioId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoDeServicioId); err != nil {
			return err
		}
	} else {
		r.TipoDeServicioId = NewUnionNullInt()

		r.TipoDeServicioId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Contrato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contrato); err != nil {
			return err
		}
	} else {
		r.Contrato = NewUnionNullString()

		r.Contrato = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["franjaHoraria"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FranjaHoraria); err != nil {
			return err
		}
	} else {
		r.FranjaHoraria = NewUnionNullString()

		r.FranjaHoraria = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["proximaFase"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ProximaFase); err != nil {
			return err
		}
	} else {
		r.ProximaFase = NewUnionNullString()

		r.ProximaFase = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DeclarationState"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DeclarationState); err != nil {
			return err
		}
	} else {
		r.DeclarationState = NewUnionNullInt()

		r.DeclarationState = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Componentes"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Componentes); err != nil {
			return err
		}
	} else {
		r.Componentes = NewUnionNullArrayPieceComponent()

		r.Componentes = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["BultoData"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.BultoData); err != nil {
			return err
		}
	} else {
		r.BultoData = NewUnionNullBultoData()

		r.BultoData = nil
	}
	return nil
}
