// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ETA.avsc
 */
package DeliveryEstimateEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ETA struct {
	EtaRangoInicio *UnionNullLong `json:"EtaRangoInicio"`

	EtaRangoFin *UnionNullLong `json:"EtaRangoFin"`

	Eta *UnionNullLong `json:"Eta"`

	NumeroEnvio *UnionNullString `json:"NumeroEnvio"`

	NumeroDeEnvio *UnionNullString `json:"NumeroDeEnvio"`

	CalculoEta CalculoEta `json:"CalculoEta"`

	Transportista Transportista `json:"Transportista"`

	Timestamp *UnionNullLong `json:"Timestamp"`

	Cuando *UnionNullLong `json:"Cuando"`
}

const ETAAvroCRC64Fingerprint = "\xd1\x0e…ê\x99\xed\xf8;"

func NewETA() ETA {
	r := ETA{}
	r.EtaRangoInicio = nil
	r.EtaRangoFin = nil
	r.Eta = nil
	r.NumeroEnvio = nil
	r.NumeroDeEnvio = nil
	r.CalculoEta = NewCalculoEta()

	r.Transportista = NewTransportista()

	r.Timestamp = nil
	r.Cuando = nil
	return r
}

func DeserializeETA(r io.Reader) (ETA, error) {
	t := NewETA()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeETAFromSchema(r io.Reader, schema string) (ETA, error) {
	t := NewETA()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeETA(r ETA, w io.Writer) error {
	var err error
	err = writeUnionNullLong(r.EtaRangoInicio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.EtaRangoFin, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Eta, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroEnvio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroDeEnvio, w)
	if err != nil {
		return err
	}
	err = writeCalculoEta(r.CalculoEta, w)
	if err != nil {
		return err
	}
	err = writeTransportista(r.Transportista, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Timestamp, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Cuando, w)
	if err != nil {
		return err
	}
	return err
}

func (r ETA) Serialize(w io.Writer) error {
	return writeETA(r, w)
}

func (r ETA) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"EtaRangoInicio\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"EtaRangoFin\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"Eta\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"NumeroEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroDeEnvio\",\"type\":[\"null\",\"string\"]},{\"name\":\"CalculoEta\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"OrdenDeEnvioEnHR\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"NumeroHojaDeRuta\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Geocoordenadas\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"RecorridoEnSegundos\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"RecorridoEnMetros\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"DemoraEnDomicilioEnMinutos\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"DemoraSalidaSucursalEnMinutos\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"EtaAnterior\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaCreacionHojaDeRuta\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"PosicionHDR\",\"type\":[\"null\",\"int\"]}],\"name\":\"CalculoEta\",\"type\":\"record\"}},{\"name\":\"Transportista\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"EsEventual\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"IdGla\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IdGli\",\"type\":[\"null\",\"string\"]},{\"name\":\"SucursalDondeTrabaja\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"CodigoAlertran\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CodigoIntegra\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Nombre\",\"type\":[\"null\",\"string\"]}],\"name\":\"SucursalDondeTrabaja\",\"type\":\"record\"}},{\"default\":null,\"name\":\"NumeroDeDocumento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NombreCompleto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TipoDeDocumento\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"CumplimientoSecuenciaHR\",\"type\":[\"null\",\"double\"]}],\"name\":\"Transportista\",\"type\":\"record\"}},{\"default\":null,\"name\":\"Timestamp\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"Cuando\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]}],\"name\":\"Andreani.DeliveryEstimate.Events.Records.ETA\",\"type\":\"record\"}"
}

func (r ETA) SchemaName() string {
	return "Andreani.DeliveryEstimate.Events.Records.ETA"
}

func (_ ETA) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ETA) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ETA) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ETA) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ETA) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ETA) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ETA) SetString(v string)   { panic("Unsupported operation") }
func (_ ETA) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ETA) Get(i int) types.Field {
	switch i {
	case 0:
		r.EtaRangoInicio = NewUnionNullLong()

		return r.EtaRangoInicio
	case 1:
		r.EtaRangoFin = NewUnionNullLong()

		return r.EtaRangoFin
	case 2:
		r.Eta = NewUnionNullLong()

		return r.Eta
	case 3:
		r.NumeroEnvio = NewUnionNullString()

		return r.NumeroEnvio
	case 4:
		r.NumeroDeEnvio = NewUnionNullString()

		return r.NumeroDeEnvio
	case 5:
		r.CalculoEta = NewCalculoEta()

		w := types.Record{Target: &r.CalculoEta}

		return w

	case 6:
		r.Transportista = NewTransportista()

		w := types.Record{Target: &r.Transportista}

		return w

	case 7:
		r.Timestamp = NewUnionNullLong()

		return r.Timestamp
	case 8:
		r.Cuando = NewUnionNullLong()

		return r.Cuando
	}
	panic("Unknown field index")
}

func (r *ETA) SetDefault(i int) {
	switch i {
	case 0:
		r.EtaRangoInicio = nil
		return
	case 1:
		r.EtaRangoFin = nil
		return
	case 2:
		r.Eta = nil
		return
	case 3:
		r.NumeroEnvio = nil
		return
	case 4:
		r.NumeroDeEnvio = nil
		return
	case 7:
		r.Timestamp = nil
		return
	case 8:
		r.Cuando = nil
		return
	}
	panic("Unknown field index")
}

func (r *ETA) NullField(i int) {
	switch i {
	case 0:
		r.EtaRangoInicio = nil
		return
	case 1:
		r.EtaRangoFin = nil
		return
	case 2:
		r.Eta = nil
		return
	case 3:
		r.NumeroEnvio = nil
		return
	case 4:
		r.NumeroDeEnvio = nil
		return
	case 7:
		r.Timestamp = nil
		return
	case 8:
		r.Cuando = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ ETA) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ETA) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ETA) HintSize(int)                     { panic("Unsupported operation") }
func (_ ETA) Finalize()                        {}

func (_ ETA) AvroCRC64Fingerprint() []byte {
	return []byte(ETAAvroCRC64Fingerprint)
}

func (r ETA) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["EtaRangoInicio"], err = json.Marshal(r.EtaRangoInicio)
	if err != nil {
		return nil, err
	}
	output["EtaRangoFin"], err = json.Marshal(r.EtaRangoFin)
	if err != nil {
		return nil, err
	}
	output["Eta"], err = json.Marshal(r.Eta)
	if err != nil {
		return nil, err
	}
	output["NumeroEnvio"], err = json.Marshal(r.NumeroEnvio)
	if err != nil {
		return nil, err
	}
	output["NumeroDeEnvio"], err = json.Marshal(r.NumeroDeEnvio)
	if err != nil {
		return nil, err
	}
	output["CalculoEta"], err = json.Marshal(r.CalculoEta)
	if err != nil {
		return nil, err
	}
	output["Transportista"], err = json.Marshal(r.Transportista)
	if err != nil {
		return nil, err
	}
	output["Timestamp"], err = json.Marshal(r.Timestamp)
	if err != nil {
		return nil, err
	}
	output["Cuando"], err = json.Marshal(r.Cuando)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ETA) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["EtaRangoInicio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EtaRangoInicio); err != nil {
			return err
		}
	} else {
		r.EtaRangoInicio = NewUnionNullLong()

		r.EtaRangoInicio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EtaRangoFin"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EtaRangoFin); err != nil {
			return err
		}
	} else {
		r.EtaRangoFin = NewUnionNullLong()

		r.EtaRangoFin = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Eta"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Eta); err != nil {
			return err
		}
	} else {
		r.Eta = NewUnionNullLong()

		r.Eta = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroEnvio); err != nil {
			return err
		}
	} else {
		r.NumeroEnvio = NewUnionNullString()

		r.NumeroEnvio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroDeEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDeEnvio); err != nil {
			return err
		}
	} else {
		r.NumeroDeEnvio = NewUnionNullString()

		r.NumeroDeEnvio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CalculoEta"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CalculoEta); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CalculoEta")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Transportista"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Transportista); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Transportista")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Timestamp"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Timestamp); err != nil {
			return err
		}
	} else {
		r.Timestamp = NewUnionNullLong()

		r.Timestamp = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Cuando"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cuando); err != nil {
			return err
		}
	} else {
		r.Cuando = NewUnionNullLong()

		r.Cuando = nil
	}
	return nil
}
