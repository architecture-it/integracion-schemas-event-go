// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ERA.avsc
 */
package DeliveryEstimateEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ERA struct {
	EraRangoInicio *UnionNullLong `json:"EraRangoInicio"`

	EraRangoFin *UnionNullLong `json:"EraRangoFin"`

	Era *UnionNullLong `json:"Era"`

	CodigoDeEnvio *UnionNullString `json:"codigoDeEnvio"`

	CalculoEra CalculoEra `json:"CalculoEra"`

	Transportista Transportista `json:"Transportista"`

	Timestamp *UnionNullLong `json:"Timestamp"`

	Cuando *UnionNullLong `json:"Cuando"`
}

const ERAAvroCRC64Fingerprint = "^\xb95\x15\xb3\x9b<\xa7"

func NewERA() ERA {
	r := ERA{}
	r.EraRangoInicio = nil
	r.EraRangoFin = nil
	r.Era = nil
	r.CodigoDeEnvio = nil
	r.CalculoEra = NewCalculoEra()

	r.Transportista = NewTransportista()

	r.Timestamp = nil
	r.Cuando = nil
	return r
}

func DeserializeERA(r io.Reader) (ERA, error) {
	t := NewERA()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeERAFromSchema(r io.Reader, schema string) (ERA, error) {
	t := NewERA()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeERA(r ERA, w io.Writer) error {
	var err error
	err = writeUnionNullLong(r.EraRangoInicio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.EraRangoFin, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Era, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoDeEnvio, w)
	if err != nil {
		return err
	}
	err = writeCalculoEra(r.CalculoEra, w)
	if err != nil {
		return err
	}
	err = writeTransportista(r.Transportista, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Timestamp, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Cuando, w)
	if err != nil {
		return err
	}
	return err
}

func (r ERA) Serialize(w io.Writer) error {
	return writeERA(r, w)
}

func (r ERA) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"EraRangoInicio\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"EraRangoFin\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"Era\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"codigoDeEnvio\",\"type\":[\"null\",\"string\"]},{\"name\":\"CalculoEra\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"OrdenDeEnvioEnHR\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"NumeroHojaDeRuta\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Geocoordenadas\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"RecorridoEnSegundos\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"RecorridoEnMetros\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"DemoraEnDomicilioEnMinutos\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"DemoraSalidaSucursalEnMinutos\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"EraAnterior\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaCreacionHojaDeRuta\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]}],\"name\":\"CalculoEra\",\"type\":\"record\"}},{\"name\":\"Transportista\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"EsEventual\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"IdGla\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"IdGli\",\"type\":[\"null\",\"string\"]},{\"name\":\"SucursalDondeTrabaja\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"CodigoAlertran\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CodigoIntegra\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Nombre\",\"type\":[\"null\",\"string\"]}],\"name\":\"SucursalDondeTrabaja\",\"type\":\"record\"}},{\"default\":null,\"name\":\"NumeroDeDocumento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NombreCompleto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TipoDeDocumento\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"CumplimientoSecuenciaHR\",\"type\":[\"null\",\"double\"]}],\"name\":\"Transportista\",\"type\":\"record\"}},{\"default\":null,\"name\":\"Timestamp\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"Cuando\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]}],\"name\":\"Andreani.DeliveryEstimate.Events.Records.ERA\",\"type\":\"record\"}"
}

func (r ERA) SchemaName() string {
	return "Andreani.DeliveryEstimate.Events.Records.ERA"
}

func (_ ERA) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ERA) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ERA) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ERA) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ERA) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ERA) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ERA) SetString(v string)   { panic("Unsupported operation") }
func (_ ERA) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ERA) Get(i int) types.Field {
	switch i {
	case 0:
		r.EraRangoInicio = NewUnionNullLong()

		return r.EraRangoInicio
	case 1:
		r.EraRangoFin = NewUnionNullLong()

		return r.EraRangoFin
	case 2:
		r.Era = NewUnionNullLong()

		return r.Era
	case 3:
		r.CodigoDeEnvio = NewUnionNullString()

		return r.CodigoDeEnvio
	case 4:
		r.CalculoEra = NewCalculoEra()

		w := types.Record{Target: &r.CalculoEra}

		return w

	case 5:
		r.Transportista = NewTransportista()

		w := types.Record{Target: &r.Transportista}

		return w

	case 6:
		r.Timestamp = NewUnionNullLong()

		return r.Timestamp
	case 7:
		r.Cuando = NewUnionNullLong()

		return r.Cuando
	}
	panic("Unknown field index")
}

func (r *ERA) SetDefault(i int) {
	switch i {
	case 0:
		r.EraRangoInicio = nil
		return
	case 1:
		r.EraRangoFin = nil
		return
	case 2:
		r.Era = nil
		return
	case 3:
		r.CodigoDeEnvio = nil
		return
	case 6:
		r.Timestamp = nil
		return
	case 7:
		r.Cuando = nil
		return
	}
	panic("Unknown field index")
}

func (r *ERA) NullField(i int) {
	switch i {
	case 0:
		r.EraRangoInicio = nil
		return
	case 1:
		r.EraRangoFin = nil
		return
	case 2:
		r.Era = nil
		return
	case 3:
		r.CodigoDeEnvio = nil
		return
	case 6:
		r.Timestamp = nil
		return
	case 7:
		r.Cuando = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ ERA) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ERA) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ERA) HintSize(int)                     { panic("Unsupported operation") }
func (_ ERA) Finalize()                        {}

func (_ ERA) AvroCRC64Fingerprint() []byte {
	return []byte(ERAAvroCRC64Fingerprint)
}

func (r ERA) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["EraRangoInicio"], err = json.Marshal(r.EraRangoInicio)
	if err != nil {
		return nil, err
	}
	output["EraRangoFin"], err = json.Marshal(r.EraRangoFin)
	if err != nil {
		return nil, err
	}
	output["Era"], err = json.Marshal(r.Era)
	if err != nil {
		return nil, err
	}
	output["codigoDeEnvio"], err = json.Marshal(r.CodigoDeEnvio)
	if err != nil {
		return nil, err
	}
	output["CalculoEra"], err = json.Marshal(r.CalculoEra)
	if err != nil {
		return nil, err
	}
	output["Transportista"], err = json.Marshal(r.Transportista)
	if err != nil {
		return nil, err
	}
	output["Timestamp"], err = json.Marshal(r.Timestamp)
	if err != nil {
		return nil, err
	}
	output["Cuando"], err = json.Marshal(r.Cuando)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ERA) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["EraRangoInicio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EraRangoInicio); err != nil {
			return err
		}
	} else {
		r.EraRangoInicio = NewUnionNullLong()

		r.EraRangoInicio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EraRangoFin"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EraRangoFin); err != nil {
			return err
		}
	} else {
		r.EraRangoFin = NewUnionNullLong()

		r.EraRangoFin = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Era"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Era); err != nil {
			return err
		}
	} else {
		r.Era = NewUnionNullLong()

		r.Era = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["codigoDeEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoDeEnvio); err != nil {
			return err
		}
	} else {
		r.CodigoDeEnvio = NewUnionNullString()

		r.CodigoDeEnvio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CalculoEra"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CalculoEra); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CalculoEra")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Transportista"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Transportista); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Transportista")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Timestamp"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Timestamp); err != nil {
			return err
		}
	} else {
		r.Timestamp = NewUnionNullLong()

		r.Timestamp = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Cuando"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cuando); err != nil {
			return err
		}
	} else {
		r.Cuando = NewUnionNullLong()

		r.Cuando = nil
	}
	return nil
}
