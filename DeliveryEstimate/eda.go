// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EDA.avsc
 */
package DeliveryEstimateEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type EDA struct {
	DiasHabiles *UnionNullInt `json:"diasHabiles"`

	Eda *UnionNullLong `json:"eda"`

	Sistema *UnionNullString `json:"sistema"`

	CodigoDeEnvio *UnionNullString `json:"codigoDeEnvio"`

	CodigoDeContratoInterno *UnionNullString `json:"codigoDeContratoInterno"`

	CalculoEda CalculoEda `json:"calculoEda"`

	Cuando *UnionNullLong `json:"cuando"`

	FechaAlta *UnionNullLong `json:"fechaAlta"`

	Estimacion *UnionNullString `json:"estimacion"`

	EstimacionDescripcion *UnionNullString `json:"estimacionDescripcion"`

	EstimacionI *UnionNullString `json:"estimacionI"`

	EstimacionDescripcionI *UnionNullString `json:"estimacionDescripcionI"`
}

const EDAAvroCRC64Fingerprint = "\xb4A\x9e\xe3\xf7\xbb\xe3\xf5"

func NewEDA() EDA {
	r := EDA{}
	r.CalculoEda = NewCalculoEda()

	r.Estimacion = nil
	r.EstimacionDescripcion = nil
	r.EstimacionI = nil
	r.EstimacionDescripcionI = nil
	return r
}

func DeserializeEDA(r io.Reader) (EDA, error) {
	t := NewEDA()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeEDAFromSchema(r io.Reader, schema string) (EDA, error) {
	t := NewEDA()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeEDA(r EDA, w io.Writer) error {
	var err error
	err = writeUnionNullInt(r.DiasHabiles, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Eda, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Sistema, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoDeEnvio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoDeContratoInterno, w)
	if err != nil {
		return err
	}
	err = writeCalculoEda(r.CalculoEda, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.Cuando, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaAlta, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Estimacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstimacionDescripcion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstimacionI, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstimacionDescripcionI, w)
	if err != nil {
		return err
	}
	return err
}

func (r EDA) Serialize(w io.Writer) error {
	return writeEDA(r, w)
}

func (r EDA) Schema() string {
	return "{\"fields\":[{\"name\":\"diasHabiles\",\"type\":[\"null\",\"int\"]},{\"name\":\"eda\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"sistema\",\"type\":[\"null\",\"string\"]},{\"name\":\"codigoDeEnvio\",\"type\":[\"null\",\"string\"]},{\"name\":\"codigoDeContratoInterno\",\"type\":[\"null\",\"string\"]},{\"name\":\"calculoEda\",\"type\":{\"fields\":[{\"name\":\"codigoPostalSucursalOrigen\",\"type\":[\"null\",\"string\"]},{\"name\":\"codigoPostalSucursalDistribucion\",\"type\":[\"null\",\"string\"]},{\"name\":\"codigoPostalDestino\",\"type\":[\"null\",\"string\"]},{\"name\":\"localidadDestino\",\"type\":[\"null\",\"string\"]},{\"name\":\"localidadSucursalDistribucion\",\"type\":[\"null\",\"string\"]},{\"name\":\"localidadSucursalOrigen\",\"type\":[\"null\",\"string\"]}],\"name\":\"CalculoEda\",\"type\":\"record\"}},{\"name\":\"cuando\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"fechaAlta\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"estimacion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estimacionDescripcion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estimacionI\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estimacionDescripcionI\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.DeliveryEstimate.Events.Records.EDA\",\"type\":\"record\"}"
}

func (r EDA) SchemaName() string {
	return "Andreani.DeliveryEstimate.Events.Records.EDA"
}

func (_ EDA) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ EDA) SetInt(v int32)       { panic("Unsupported operation") }
func (_ EDA) SetLong(v int64)      { panic("Unsupported operation") }
func (_ EDA) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ EDA) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ EDA) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ EDA) SetString(v string)   { panic("Unsupported operation") }
func (_ EDA) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *EDA) Get(i int) types.Field {
	switch i {
	case 0:
		r.DiasHabiles = NewUnionNullInt()

		return r.DiasHabiles
	case 1:
		r.Eda = NewUnionNullLong()

		return r.Eda
	case 2:
		r.Sistema = NewUnionNullString()

		return r.Sistema
	case 3:
		r.CodigoDeEnvio = NewUnionNullString()

		return r.CodigoDeEnvio
	case 4:
		r.CodigoDeContratoInterno = NewUnionNullString()

		return r.CodigoDeContratoInterno
	case 5:
		r.CalculoEda = NewCalculoEda()

		w := types.Record{Target: &r.CalculoEda}

		return w

	case 6:
		r.Cuando = NewUnionNullLong()

		return r.Cuando
	case 7:
		r.FechaAlta = NewUnionNullLong()

		return r.FechaAlta
	case 8:
		r.Estimacion = NewUnionNullString()

		return r.Estimacion
	case 9:
		r.EstimacionDescripcion = NewUnionNullString()

		return r.EstimacionDescripcion
	case 10:
		r.EstimacionI = NewUnionNullString()

		return r.EstimacionI
	case 11:
		r.EstimacionDescripcionI = NewUnionNullString()

		return r.EstimacionDescripcionI
	}
	panic("Unknown field index")
}

func (r *EDA) SetDefault(i int) {
	switch i {
	case 8:
		r.Estimacion = nil
		return
	case 9:
		r.EstimacionDescripcion = nil
		return
	case 10:
		r.EstimacionI = nil
		return
	case 11:
		r.EstimacionDescripcionI = nil
		return
	}
	panic("Unknown field index")
}

func (r *EDA) NullField(i int) {
	switch i {
	case 0:
		r.DiasHabiles = nil
		return
	case 1:
		r.Eda = nil
		return
	case 2:
		r.Sistema = nil
		return
	case 3:
		r.CodigoDeEnvio = nil
		return
	case 4:
		r.CodigoDeContratoInterno = nil
		return
	case 6:
		r.Cuando = nil
		return
	case 7:
		r.FechaAlta = nil
		return
	case 8:
		r.Estimacion = nil
		return
	case 9:
		r.EstimacionDescripcion = nil
		return
	case 10:
		r.EstimacionI = nil
		return
	case 11:
		r.EstimacionDescripcionI = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ EDA) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ EDA) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ EDA) HintSize(int)                     { panic("Unsupported operation") }
func (_ EDA) Finalize()                        {}

func (_ EDA) AvroCRC64Fingerprint() []byte {
	return []byte(EDAAvroCRC64Fingerprint)
}

func (r EDA) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["diasHabiles"], err = json.Marshal(r.DiasHabiles)
	if err != nil {
		return nil, err
	}
	output["eda"], err = json.Marshal(r.Eda)
	if err != nil {
		return nil, err
	}
	output["sistema"], err = json.Marshal(r.Sistema)
	if err != nil {
		return nil, err
	}
	output["codigoDeEnvio"], err = json.Marshal(r.CodigoDeEnvio)
	if err != nil {
		return nil, err
	}
	output["codigoDeContratoInterno"], err = json.Marshal(r.CodigoDeContratoInterno)
	if err != nil {
		return nil, err
	}
	output["calculoEda"], err = json.Marshal(r.CalculoEda)
	if err != nil {
		return nil, err
	}
	output["cuando"], err = json.Marshal(r.Cuando)
	if err != nil {
		return nil, err
	}
	output["fechaAlta"], err = json.Marshal(r.FechaAlta)
	if err != nil {
		return nil, err
	}
	output["estimacion"], err = json.Marshal(r.Estimacion)
	if err != nil {
		return nil, err
	}
	output["estimacionDescripcion"], err = json.Marshal(r.EstimacionDescripcion)
	if err != nil {
		return nil, err
	}
	output["estimacionI"], err = json.Marshal(r.EstimacionI)
	if err != nil {
		return nil, err
	}
	output["estimacionDescripcionI"], err = json.Marshal(r.EstimacionDescripcionI)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *EDA) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["diasHabiles"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DiasHabiles); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for diasHabiles")
	}
	val = func() json.RawMessage {
		if v, ok := fields["eda"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Eda); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for eda")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sistema"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sistema); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sistema")
	}
	val = func() json.RawMessage {
		if v, ok := fields["codigoDeEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoDeEnvio); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for codigoDeEnvio")
	}
	val = func() json.RawMessage {
		if v, ok := fields["codigoDeContratoInterno"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoDeContratoInterno); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for codigoDeContratoInterno")
	}
	val = func() json.RawMessage {
		if v, ok := fields["calculoEda"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CalculoEda); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for calculoEda")
	}
	val = func() json.RawMessage {
		if v, ok := fields["cuando"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cuando); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for cuando")
	}
	val = func() json.RawMessage {
		if v, ok := fields["fechaAlta"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaAlta); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for fechaAlta")
	}
	val = func() json.RawMessage {
		if v, ok := fields["estimacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Estimacion); err != nil {
			return err
		}
	} else {
		r.Estimacion = NewUnionNullString()

		r.Estimacion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["estimacionDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstimacionDescripcion); err != nil {
			return err
		}
	} else {
		r.EstimacionDescripcion = NewUnionNullString()

		r.EstimacionDescripcion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["estimacionI"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstimacionI); err != nil {
			return err
		}
	} else {
		r.EstimacionI = NewUnionNullString()

		r.EstimacionI = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["estimacionDescripcionI"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstimacionDescripcionI); err != nil {
			return err
		}
	} else {
		r.EstimacionDescripcionI = NewUnionNullString()

		r.EstimacionDescripcionI = nil
	}
	return nil
}
