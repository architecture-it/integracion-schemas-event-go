// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EnvioEtiqueta.avsc
 */
package CorporativoEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type DatosConstanciaEtiqueta struct {
	Url string `json:"Url"`

	NumeroPermisionaria string `json:"NumeroPermisionaria"`

	SucursalDistribucion string `json:"SucursalDistribucion"`

	SucursalDistribucionNomenclatura string `json:"SucursalDistribucionNomenclatura"`

	SucursalDistribucionDescripcion string `json:"SucursalDistribucionDescripcion"`

	SucursalDistribucionId string `json:"SucursalDistribucionId"`

	SucursalRendicion *UnionNullString `json:"SucursalRendicion"`

	SucursalRendicionNomenclatura *UnionNullString `json:"SucursalRendicionNomenclatura"`

	SucursalRendicionDescripcion *UnionNullString `json:"SucursalRendicionDescripcion"`

	SucursalRendicionId *UnionNullString `json:"SucursalRendicionId"`

	CodigoSucursalCabecera string `json:"CodigoSucursalCabecera"`

	SucursalAbastecedoraDescripcion *UnionNullString `json:"SucursalAbastecedoraDescripcion"`

	SucursalAbastecedoraId *UnionNullString `json:"SucursalAbastecedoraId"`

	CodigoZonaReparto string `json:"CodigoZonaReparto"`
}

const DatosConstanciaEtiquetaAvroCRC64Fingerprint = "{9~da8\x8a\x03"

func NewDatosConstanciaEtiqueta() DatosConstanciaEtiqueta {
	r := DatosConstanciaEtiqueta{}
	r.SucursalRendicion = nil
	r.SucursalRendicionNomenclatura = nil
	r.SucursalRendicionDescripcion = nil
	r.SucursalRendicionId = nil
	r.SucursalAbastecedoraDescripcion = nil
	r.SucursalAbastecedoraId = nil
	return r
}

func DeserializeDatosConstanciaEtiqueta(r io.Reader) (DatosConstanciaEtiqueta, error) {
	t := NewDatosConstanciaEtiqueta()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeDatosConstanciaEtiquetaFromSchema(r io.Reader, schema string) (DatosConstanciaEtiqueta, error) {
	t := NewDatosConstanciaEtiqueta()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeDatosConstanciaEtiqueta(r DatosConstanciaEtiqueta, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Url, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.NumeroPermisionaria, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.SucursalDistribucion, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.SucursalDistribucionNomenclatura, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.SucursalDistribucionDescripcion, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.SucursalDistribucionId, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SucursalRendicion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SucursalRendicionNomenclatura, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SucursalRendicionDescripcion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SucursalRendicionId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.CodigoSucursalCabecera, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SucursalAbastecedoraDescripcion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SucursalAbastecedoraId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.CodigoZonaReparto, w)
	if err != nil {
		return err
	}
	return err
}

func (r DatosConstanciaEtiqueta) Serialize(w io.Writer) error {
	return writeDatosConstanciaEtiqueta(r, w)
}

func (r DatosConstanciaEtiqueta) Schema() string {
	return "{\"fields\":[{\"name\":\"Url\",\"type\":\"string\"},{\"name\":\"NumeroPermisionaria\",\"type\":\"string\"},{\"name\":\"SucursalDistribucion\",\"type\":\"string\"},{\"name\":\"SucursalDistribucionNomenclatura\",\"type\":\"string\"},{\"name\":\"SucursalDistribucionDescripcion\",\"type\":\"string\"},{\"name\":\"SucursalDistribucionId\",\"type\":\"string\"},{\"default\":null,\"name\":\"SucursalRendicion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SucursalRendicionNomenclatura\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SucursalRendicionDescripcion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SucursalRendicionId\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoSucursalCabecera\",\"type\":\"string\"},{\"default\":null,\"name\":\"SucursalAbastecedoraDescripcion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SucursalAbastecedoraId\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoZonaReparto\",\"type\":\"string\"}],\"name\":\"Andreani.Corporativo.Events.Record.DatosConstanciaEtiqueta\",\"type\":\"record\"}"
}

func (r DatosConstanciaEtiqueta) SchemaName() string {
	return "Andreani.Corporativo.Events.Record.DatosConstanciaEtiqueta"
}

func (_ DatosConstanciaEtiqueta) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) SetInt(v int32)       { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) SetLong(v int64)      { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) SetString(v string)   { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *DatosConstanciaEtiqueta) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Url}

		return w

	case 1:
		w := types.String{Target: &r.NumeroPermisionaria}

		return w

	case 2:
		w := types.String{Target: &r.SucursalDistribucion}

		return w

	case 3:
		w := types.String{Target: &r.SucursalDistribucionNomenclatura}

		return w

	case 4:
		w := types.String{Target: &r.SucursalDistribucionDescripcion}

		return w

	case 5:
		w := types.String{Target: &r.SucursalDistribucionId}

		return w

	case 6:
		r.SucursalRendicion = NewUnionNullString()

		return r.SucursalRendicion
	case 7:
		r.SucursalRendicionNomenclatura = NewUnionNullString()

		return r.SucursalRendicionNomenclatura
	case 8:
		r.SucursalRendicionDescripcion = NewUnionNullString()

		return r.SucursalRendicionDescripcion
	case 9:
		r.SucursalRendicionId = NewUnionNullString()

		return r.SucursalRendicionId
	case 10:
		w := types.String{Target: &r.CodigoSucursalCabecera}

		return w

	case 11:
		r.SucursalAbastecedoraDescripcion = NewUnionNullString()

		return r.SucursalAbastecedoraDescripcion
	case 12:
		r.SucursalAbastecedoraId = NewUnionNullString()

		return r.SucursalAbastecedoraId
	case 13:
		w := types.String{Target: &r.CodigoZonaReparto}

		return w

	}
	panic("Unknown field index")
}

func (r *DatosConstanciaEtiqueta) SetDefault(i int) {
	switch i {
	case 6:
		r.SucursalRendicion = nil
		return
	case 7:
		r.SucursalRendicionNomenclatura = nil
		return
	case 8:
		r.SucursalRendicionDescripcion = nil
		return
	case 9:
		r.SucursalRendicionId = nil
		return
	case 11:
		r.SucursalAbastecedoraDescripcion = nil
		return
	case 12:
		r.SucursalAbastecedoraId = nil
		return
	}
	panic("Unknown field index")
}

func (r *DatosConstanciaEtiqueta) NullField(i int) {
	switch i {
	case 6:
		r.SucursalRendicion = nil
		return
	case 7:
		r.SucursalRendicionNomenclatura = nil
		return
	case 8:
		r.SucursalRendicionDescripcion = nil
		return
	case 9:
		r.SucursalRendicionId = nil
		return
	case 11:
		r.SucursalAbastecedoraDescripcion = nil
		return
	case 12:
		r.SucursalAbastecedoraId = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ DatosConstanciaEtiqueta) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) HintSize(int)                     { panic("Unsupported operation") }
func (_ DatosConstanciaEtiqueta) Finalize()                        {}

func (_ DatosConstanciaEtiqueta) AvroCRC64Fingerprint() []byte {
	return []byte(DatosConstanciaEtiquetaAvroCRC64Fingerprint)
}

func (r DatosConstanciaEtiqueta) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Url"], err = json.Marshal(r.Url)
	if err != nil {
		return nil, err
	}
	output["NumeroPermisionaria"], err = json.Marshal(r.NumeroPermisionaria)
	if err != nil {
		return nil, err
	}
	output["SucursalDistribucion"], err = json.Marshal(r.SucursalDistribucion)
	if err != nil {
		return nil, err
	}
	output["SucursalDistribucionNomenclatura"], err = json.Marshal(r.SucursalDistribucionNomenclatura)
	if err != nil {
		return nil, err
	}
	output["SucursalDistribucionDescripcion"], err = json.Marshal(r.SucursalDistribucionDescripcion)
	if err != nil {
		return nil, err
	}
	output["SucursalDistribucionId"], err = json.Marshal(r.SucursalDistribucionId)
	if err != nil {
		return nil, err
	}
	output["SucursalRendicion"], err = json.Marshal(r.SucursalRendicion)
	if err != nil {
		return nil, err
	}
	output["SucursalRendicionNomenclatura"], err = json.Marshal(r.SucursalRendicionNomenclatura)
	if err != nil {
		return nil, err
	}
	output["SucursalRendicionDescripcion"], err = json.Marshal(r.SucursalRendicionDescripcion)
	if err != nil {
		return nil, err
	}
	output["SucursalRendicionId"], err = json.Marshal(r.SucursalRendicionId)
	if err != nil {
		return nil, err
	}
	output["CodigoSucursalCabecera"], err = json.Marshal(r.CodigoSucursalCabecera)
	if err != nil {
		return nil, err
	}
	output["SucursalAbastecedoraDescripcion"], err = json.Marshal(r.SucursalAbastecedoraDescripcion)
	if err != nil {
		return nil, err
	}
	output["SucursalAbastecedoraId"], err = json.Marshal(r.SucursalAbastecedoraId)
	if err != nil {
		return nil, err
	}
	output["CodigoZonaReparto"], err = json.Marshal(r.CodigoZonaReparto)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *DatosConstanciaEtiqueta) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Url"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Url); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Url")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroPermisionaria"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroPermisionaria); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroPermisionaria")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalDistribucion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDistribucion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SucursalDistribucion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalDistribucionNomenclatura"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDistribucionNomenclatura); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SucursalDistribucionNomenclatura")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalDistribucionDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDistribucionDescripcion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SucursalDistribucionDescripcion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalDistribucionId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDistribucionId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SucursalDistribucionId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalRendicion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalRendicion); err != nil {
			return err
		}
	} else {
		r.SucursalRendicion = NewUnionNullString()

		r.SucursalRendicion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalRendicionNomenclatura"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalRendicionNomenclatura); err != nil {
			return err
		}
	} else {
		r.SucursalRendicionNomenclatura = NewUnionNullString()

		r.SucursalRendicionNomenclatura = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalRendicionDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalRendicionDescripcion); err != nil {
			return err
		}
	} else {
		r.SucursalRendicionDescripcion = NewUnionNullString()

		r.SucursalRendicionDescripcion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalRendicionId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalRendicionId); err != nil {
			return err
		}
	} else {
		r.SucursalRendicionId = NewUnionNullString()

		r.SucursalRendicionId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoSucursalCabecera"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoSucursalCabecera); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoSucursalCabecera")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalAbastecedoraDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalAbastecedoraDescripcion); err != nil {
			return err
		}
	} else {
		r.SucursalAbastecedoraDescripcion = NewUnionNullString()

		r.SucursalAbastecedoraDescripcion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalAbastecedoraId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalAbastecedoraId); err != nil {
			return err
		}
	} else {
		r.SucursalAbastecedoraId = NewUnionNullString()

		r.SucursalAbastecedoraId = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoZonaReparto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoZonaReparto); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoZonaReparto")
	}
	return nil
}
