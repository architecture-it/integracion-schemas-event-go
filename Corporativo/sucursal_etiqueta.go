// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     SucursalEtiqueta.avsc
 */
package CorporativoEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SucursalEtiqueta struct {
	Codigo string `json:"Codigo"`

	Numero string `json:"Numero"`

	Descripcion string `json:"Descripcion"`

	Canal string `json:"Canal"`

	Direccion DireccionSucursalEtiqueta `json:"Direccion"`

	SeHaceAtencionAlCliente bool `json:"SeHaceAtencionAlCliente"`

	Tipo string `json:"Tipo"`

	JsonTelefonos string `json:"JsonTelefonos"`

	Latitud float64 `json:"Latitud"`

	Longitud float64 `json:"Longitud"`
}

const SucursalEtiquetaAvroCRC64Fingerprint = "I\xa2`\x89\xb0#\x96\xd5"

func NewSucursalEtiqueta() SucursalEtiqueta {
	r := SucursalEtiqueta{}
	r.Direccion = NewDireccionSucursalEtiqueta()

	return r
}

func DeserializeSucursalEtiqueta(r io.Reader) (SucursalEtiqueta, error) {
	t := NewSucursalEtiqueta()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeSucursalEtiquetaFromSchema(r io.Reader, schema string) (SucursalEtiqueta, error) {
	t := NewSucursalEtiqueta()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeSucursalEtiqueta(r SucursalEtiqueta, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Codigo, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Numero, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Descripcion, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Canal, w)
	if err != nil {
		return err
	}
	err = writeDireccionSucursalEtiqueta(r.Direccion, w)
	if err != nil {
		return err
	}
	err = vm.WriteBool(r.SeHaceAtencionAlCliente, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Tipo, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.JsonTelefonos, w)
	if err != nil {
		return err
	}
	err = vm.WriteDouble(r.Latitud, w)
	if err != nil {
		return err
	}
	err = vm.WriteDouble(r.Longitud, w)
	if err != nil {
		return err
	}
	return err
}

func (r SucursalEtiqueta) Serialize(w io.Writer) error {
	return writeSucursalEtiqueta(r, w)
}

func (r SucursalEtiqueta) Schema() string {
	return "{\"fields\":[{\"name\":\"Codigo\",\"type\":\"string\"},{\"name\":\"Numero\",\"type\":\"string\"},{\"name\":\"Descripcion\",\"type\":\"string\"},{\"name\":\"Canal\",\"type\":\"string\"},{\"name\":\"Direccion\",\"type\":{\"fields\":[{\"name\":\"Calle\",\"type\":\"string\"},{\"name\":\"Numero\",\"type\":\"string\"},{\"name\":\"Provincia\",\"type\":\"string\"},{\"name\":\"Localidad\",\"type\":\"string\"},{\"name\":\"Region\",\"type\":\"string\"},{\"name\":\"Pais\",\"type\":\"string\"},{\"name\":\"CodigoPostal\",\"type\":\"string\"}],\"name\":\"DireccionSucursalEtiqueta\",\"type\":\"record\"}},{\"name\":\"SeHaceAtencionAlCliente\",\"type\":\"boolean\"},{\"name\":\"Tipo\",\"type\":\"string\"},{\"name\":\"JsonTelefonos\",\"type\":\"string\"},{\"name\":\"Latitud\",\"type\":\"double\"},{\"name\":\"Longitud\",\"type\":\"double\"}],\"name\":\"Corporativo.Events.Record.SucursalEtiqueta\",\"type\":\"record\"}"
}

func (r SucursalEtiqueta) SchemaName() string {
	return "Corporativo.Events.Record.SucursalEtiqueta"
}

func (_ SucursalEtiqueta) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ SucursalEtiqueta) SetInt(v int32)       { panic("Unsupported operation") }
func (_ SucursalEtiqueta) SetLong(v int64)      { panic("Unsupported operation") }
func (_ SucursalEtiqueta) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ SucursalEtiqueta) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ SucursalEtiqueta) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ SucursalEtiqueta) SetString(v string)   { panic("Unsupported operation") }
func (_ SucursalEtiqueta) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *SucursalEtiqueta) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Codigo}

		return w

	case 1:
		w := types.String{Target: &r.Numero}

		return w

	case 2:
		w := types.String{Target: &r.Descripcion}

		return w

	case 3:
		w := types.String{Target: &r.Canal}

		return w

	case 4:
		r.Direccion = NewDireccionSucursalEtiqueta()

		w := types.Record{Target: &r.Direccion}

		return w

	case 5:
		w := types.Boolean{Target: &r.SeHaceAtencionAlCliente}

		return w

	case 6:
		w := types.String{Target: &r.Tipo}

		return w

	case 7:
		w := types.String{Target: &r.JsonTelefonos}

		return w

	case 8:
		w := types.Double{Target: &r.Latitud}

		return w

	case 9:
		w := types.Double{Target: &r.Longitud}

		return w

	}
	panic("Unknown field index")
}

func (r *SucursalEtiqueta) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *SucursalEtiqueta) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ SucursalEtiqueta) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ SucursalEtiqueta) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ SucursalEtiqueta) HintSize(int)                     { panic("Unsupported operation") }
func (_ SucursalEtiqueta) Finalize()                        {}

func (_ SucursalEtiqueta) AvroCRC64Fingerprint() []byte {
	return []byte(SucursalEtiquetaAvroCRC64Fingerprint)
}

func (r SucursalEtiqueta) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Codigo"], err = json.Marshal(r.Codigo)
	if err != nil {
		return nil, err
	}
	output["Numero"], err = json.Marshal(r.Numero)
	if err != nil {
		return nil, err
	}
	output["Descripcion"], err = json.Marshal(r.Descripcion)
	if err != nil {
		return nil, err
	}
	output["Canal"], err = json.Marshal(r.Canal)
	if err != nil {
		return nil, err
	}
	output["Direccion"], err = json.Marshal(r.Direccion)
	if err != nil {
		return nil, err
	}
	output["SeHaceAtencionAlCliente"], err = json.Marshal(r.SeHaceAtencionAlCliente)
	if err != nil {
		return nil, err
	}
	output["Tipo"], err = json.Marshal(r.Tipo)
	if err != nil {
		return nil, err
	}
	output["JsonTelefonos"], err = json.Marshal(r.JsonTelefonos)
	if err != nil {
		return nil, err
	}
	output["Latitud"], err = json.Marshal(r.Latitud)
	if err != nil {
		return nil, err
	}
	output["Longitud"], err = json.Marshal(r.Longitud)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *SucursalEtiqueta) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Codigo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Codigo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Codigo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Numero"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Numero); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Numero")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Descripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Descripcion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Descripcion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Canal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Canal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Canal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Direccion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Direccion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Direccion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SeHaceAtencionAlCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SeHaceAtencionAlCliente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SeHaceAtencionAlCliente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Tipo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Tipo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Tipo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["JsonTelefonos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.JsonTelefonos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for JsonTelefonos")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Latitud"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Latitud); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Latitud")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Longitud"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Longitud); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Longitud")
	}
	return nil
}
