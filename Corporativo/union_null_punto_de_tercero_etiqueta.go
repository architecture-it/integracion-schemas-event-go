// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EnvioEtiqueta.avsc
 */
package CorporativoEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullPuntoDeTerceroEtiquetaTypeEnum int

const (
	UnionNullPuntoDeTerceroEtiquetaTypeEnumPuntoDeTerceroEtiqueta UnionNullPuntoDeTerceroEtiquetaTypeEnum = 1
)

type UnionNullPuntoDeTerceroEtiqueta struct {
	Null                   *types.NullVal
	PuntoDeTerceroEtiqueta PuntoDeTerceroEtiqueta
	UnionType              UnionNullPuntoDeTerceroEtiquetaTypeEnum
}

func writeUnionNullPuntoDeTerceroEtiqueta(r *UnionNullPuntoDeTerceroEtiqueta, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullPuntoDeTerceroEtiquetaTypeEnumPuntoDeTerceroEtiqueta:
		return writePuntoDeTerceroEtiqueta(r.PuntoDeTerceroEtiqueta, w)
	}
	return fmt.Errorf("invalid value for *UnionNullPuntoDeTerceroEtiqueta")
}

func NewUnionNullPuntoDeTerceroEtiqueta() *UnionNullPuntoDeTerceroEtiqueta {
	return &UnionNullPuntoDeTerceroEtiqueta{}
}

func (r *UnionNullPuntoDeTerceroEtiqueta) Serialize(w io.Writer) error {
	return writeUnionNullPuntoDeTerceroEtiqueta(r, w)
}

func DeserializeUnionNullPuntoDeTerceroEtiqueta(r io.Reader) (*UnionNullPuntoDeTerceroEtiqueta, error) {
	t := NewUnionNullPuntoDeTerceroEtiqueta()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullPuntoDeTerceroEtiquetaFromSchema(r io.Reader, schema string) (*UnionNullPuntoDeTerceroEtiqueta, error) {
	t := NewUnionNullPuntoDeTerceroEtiqueta()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullPuntoDeTerceroEtiqueta) Schema() string {
	return "[\"null\",{\"fields\":[{\"name\":\"Codigo\",\"type\":\"string\"},{\"name\":\"Numero\",\"type\":\"string\"},{\"name\":\"Descripcion\",\"type\":\"string\"},{\"name\":\"Canal\",\"type\":\"string\"},{\"name\":\"Direccion\",\"type\":{\"fields\":[{\"name\":\"Calle\",\"type\":\"string\"},{\"name\":\"Numero\",\"type\":\"string\"},{\"name\":\"Provincia\",\"type\":\"string\"},{\"name\":\"Localidad\",\"type\":\"string\"},{\"name\":\"Region\",\"type\":\"string\"},{\"name\":\"Pais\",\"type\":\"string\"},{\"name\":\"CodigoPostal\",\"type\":\"string\"}],\"name\":\"DireccionPuntoDeTerceroEtiqueta\",\"type\":\"record\"}},{\"name\":\"SeHaceAtencionAlCliente\",\"type\":\"boolean\"},{\"name\":\"Tipo\",\"type\":\"string\"},{\"name\":\"JsonTelefonos\",\"type\":\"string\"},{\"name\":\"Latitud\",\"type\":\"double\"},{\"name\":\"Longitud\",\"type\":\"double\"}],\"name\":\"PuntoDeTerceroEtiqueta\",\"type\":\"record\"}]"
}

func (_ *UnionNullPuntoDeTerceroEtiqueta) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullPuntoDeTerceroEtiqueta) SetLong(v int64) {

	r.UnionType = (UnionNullPuntoDeTerceroEtiquetaTypeEnum)(v)
}

func (r *UnionNullPuntoDeTerceroEtiqueta) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.PuntoDeTerceroEtiqueta = NewPuntoDeTerceroEtiqueta()
		return &types.Record{Target: (&r.PuntoDeTerceroEtiqueta)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullPuntoDeTerceroEtiqueta) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullPuntoDeTerceroEtiqueta) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullPuntoDeTerceroEtiqueta) Finalize()                {}

func (r *UnionNullPuntoDeTerceroEtiqueta) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullPuntoDeTerceroEtiquetaTypeEnumPuntoDeTerceroEtiqueta:
		return json.Marshal(map[string]interface{}{"Andreani.Corporativo.Events.Record.PuntoDeTerceroEtiqueta": r.PuntoDeTerceroEtiqueta})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullPuntoDeTerceroEtiqueta")
}

func (r *UnionNullPuntoDeTerceroEtiqueta) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["Andreani.Corporativo.Events.Record.PuntoDeTerceroEtiqueta"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.PuntoDeTerceroEtiqueta)
	}
	return fmt.Errorf("invalid value for *UnionNullPuntoDeTerceroEtiqueta")
}
