// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EventoWhSCEPedidosEmpaquetados.avsc
 */
package EventoWhPedidosEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Cabecera struct {
	OrdenWH string `json:"OrdenWH"`

	OrdenCliente string `json:"OrdenCliente"`

	Remito *UnionNullString `json:"Remito"`

	CodigoDestinatario string `json:"CodigoDestinatario"`

	TipoDeIntegracion *UnionNullString `json:"TipoDeIntegracion"`

	Acondicionamiento *UnionNullString `json:"Acondicionamiento"`

	AlmacenCliente *UnionNullString `json:"AlmacenCliente"`

	PrioridadApiPlani *UnionNullString `json:"PrioridadApiPlani"`

	CuentaTMS *UnionNullString `json:"CuentaTMS"`

	ContratoTMS *UnionNullString `json:"ContratoTMS"`

	FacturaLegal *UnionNullString `json:"FacturaLegal"`

	FacturaInterna *UnionNullString `json:"FacturaInterna"`

	TieneGestionCobranza *UnionNullString `json:"TieneGestionCobranza"`

	ValorSeguro *UnionNullString `json:"ValorSeguro"`

	AdmiteCambioLoteDirigido *UnionNullString `json:"AdmiteCambioLoteDirigido"`

	NoAdmitePickingParcial *UnionNullString `json:"NoAdmitePickingParcial"`

	ImprimeDocumentacion *UnionNullString `json:"ImprimeDocumentacion"`

	NumeroCale *UnionNullString `json:"NumeroCale"`

	Cot *UnionNullString `json:"Cot"`

	ComprobanteIngresosBrutos *UnionNullString `json:"ComprobanteIngresosBrutos"`

	ContratoServicioAlmacenes *UnionNullString `json:"ContratoServicioAlmacenes"`

	Marketplace *UnionNullString `json:"Marketplace"`

	TipoPedidoMatriz *UnionNullString `json:"TipoPedidoMatriz"`

	Contacto *UnionNullString `json:"Contacto"`

	Destinario *UnionNullString `json:"Destinario"`

	DestinatarioCalle *UnionNullString `json:"DestinatarioCalle"`

	DestinarioNumero *UnionNullString `json:"DestinarioNumero"`

	DestinatarioPiso *UnionNullString `json:"DestinatarioPiso"`

	DestinatarioDepartamento *UnionNullString `json:"DestinatarioDepartamento"`

	DestinatarioGLNDNI *UnionNullString `json:"DestinatarioGLNDNI"`

	DestinatarioCiudad *UnionNullString `json:"DestinatarioCiudad"`

	DestinatarioProvincia *UnionNullString `json:"DestinatarioProvincia"`

	DestinatarioCodigoPostal *UnionNullString `json:"DestinatarioCodigoPostal"`

	DestinatarioTelefono *UnionNullString `json:"DestinatarioTelefono"`

	DestinatarioEmail *UnionNullString `json:"DestinatarioEmail"`

	OrdenCompra *UnionNullString `json:"OrdenCompra"`

	ClientePadre string `json:"ClientePadre"`

	CodigoEstado string `json:"CodigoEstado"`

	CodigoDescripcion *UnionNullString `json:"CodigoDescripcion"`

	TipoPedidoCodigo string `json:"TipoPedidoCodigo"`

	TipoPedidoDescripcion *UnionNullString `json:"TipoPedidoDescripcion"`

	TipoGrilla *UnionNullString `json:"TipoGrilla"`

	FechaEnvioFacturar *UnionNullLong `json:"FechaEnvioFacturar"`

	FechaFacturacion *UnionNullLong `json:"FechaFacturacion"`

	PrecioValorFC *UnionNullString `json:"PrecioValorFC"`

	NumeroEnvio *UnionNullString `json:"NumeroEnvio"`

	NotasPedido *UnionNullString `json:"NotasPedido"`

	FechaCita *UnionNullLong `json:"FechaCita"`

	FechaEntrega *UnionNullLong `json:"FechaEntrega"`

	FechaExpedicionSolicitada *UnionNullLong `json:"FechaExpedicionSolicitada"`

	FechaExpedicionProgramada *UnionNullLong `json:"FechaExpedicionProgramada"`

	FechaExpedicionPrometida *UnionNullLong `json:"FechaExpedicionPrometida"`

	FechaEntregaPlanificada *UnionNullLong `json:"FechaEntregaPlanificada"`

	FechaEntregaProgramada *UnionNullLong `json:"FechaEntregaProgramada"`

	GrupoOrdenes string `json:"GrupoOrdenes"`

	FranjaHorario *UnionNullString `json:"FranjaHorario"`

	EstadoOTAcondi *UnionNullString `json:"EstadoOTAcondi"`

	EstadoOTTraz *UnionNullString `json:"EstadoOTTraz"`

	FechaEvento *UnionNullLong `json:"FechaEvento"`

	CreacionPedido *UnionNullLong `json:"CreacionPedido"`

	FechaPedido *UnionNullLong `json:"FechaPedido"`

	GlnOrigen *UnionNullString `json:"GlnOrigen"`

	CantidadTotal float32 `json:"CantidadTotal"`

	CantidadExpedidaTotal float32 `json:"CantidadExpedidaTotal"`

	CantidadPickeadaTotal float32 `json:"CantidadPickeadaTotal"`

	DestinatarioDomicilioAdicional *UnionNullString `json:"DestinatarioDomicilioAdicional"`

	Mail *UnionNullString `json:"Mail"`

	CodigoIsoPais *UnionNullString `json:"CodigoIsoPais"`

	EstadoControlCalidad *UnionNullString `json:"EstadoControlCalidad"`

	DescripcionTipoPedido *UnionNullString `json:"DescripcionTipoPedido"`

	LinkImpresionRemito *UnionNullString `json:"LinkImpresionRemito"`

	LinkImpresionEtiquetaPedido *UnionNullString `json:"LinkImpresionEtiquetaPedido"`

	CodigoANMAT *UnionNullString `json:"CodigoANMAT"`

	ErrorOtTraza *UnionNullString `json:"ErrorOtTraza"`

	ErrorOtAcondi *UnionNullString `json:"ErrorOtAcondi"`

	ErrorValidaciones *UnionNullString `json:"ErrorValidaciones"`

	PropietarioEcommerce *UnionNullString `json:"PropietarioEcommerce"`

	CodigoCliente *UnionNullString `json:"CodigoCliente"`

	NovedadesAcondi *UnionNullString `json:"NovedadesAcondi"`

	NumeroVale *UnionNullString `json:"NumeroVale"`

	CodigoEmbalaje *UnionNullString `json:"CodigoEmbalaje"`

	NumeroTaco *UnionNullString `json:"NumeroTaco"`

	UrlQR *UnionNullString `json:"UrlQR"`

	NumeroOrdenOriginalEcommerce *UnionNullString `json:"NumeroOrdenOriginalEcommerce"`

	NotasEmbalaje *UnionNullString `json:"NotasEmbalaje"`

	Propietario *UnionNullString `json:"Propietario"`

	InformaANMAT *UnionNullString `json:"InformaANMAT"`
}

const CabeceraAvroCRC64Fingerprint = "\xb4\xb1\x01\xfb\x10\x97\x81\xe6"

func NewCabecera() Cabecera {
	r := Cabecera{}
	r.Remito = nil
	r.TipoDeIntegracion = nil
	r.Acondicionamiento = nil
	r.AlmacenCliente = nil
	r.PrioridadApiPlani = nil
	r.CuentaTMS = nil
	r.ContratoTMS = nil
	r.FacturaLegal = nil
	r.FacturaInterna = nil
	r.TieneGestionCobranza = nil
	r.ValorSeguro = nil
	r.AdmiteCambioLoteDirigido = nil
	r.NoAdmitePickingParcial = nil
	r.ImprimeDocumentacion = nil
	r.NumeroCale = nil
	r.Cot = nil
	r.ComprobanteIngresosBrutos = nil
	r.ContratoServicioAlmacenes = nil
	r.Marketplace = nil
	r.TipoPedidoMatriz = nil
	r.Contacto = nil
	r.Destinario = nil
	r.DestinatarioCalle = nil
	r.DestinarioNumero = nil
	r.DestinatarioPiso = nil
	r.DestinatarioDepartamento = nil
	r.DestinatarioGLNDNI = nil
	r.DestinatarioCiudad = nil
	r.DestinatarioProvincia = nil
	r.DestinatarioCodigoPostal = nil
	r.DestinatarioTelefono = nil
	r.DestinatarioEmail = nil
	r.OrdenCompra = nil
	r.CodigoDescripcion = nil
	r.TipoPedidoDescripcion = nil
	r.TipoGrilla = nil
	r.FechaEnvioFacturar = nil
	r.FechaFacturacion = nil
	r.PrecioValorFC = nil
	r.NumeroEnvio = nil
	r.NotasPedido = nil
	r.FechaCita = nil
	r.FechaEntrega = nil
	r.FechaExpedicionSolicitada = nil
	r.FechaExpedicionProgramada = nil
	r.FechaExpedicionPrometida = nil
	r.FechaEntregaPlanificada = nil
	r.FechaEntregaProgramada = nil
	r.FranjaHorario = nil
	r.EstadoOTAcondi = nil
	r.EstadoOTTraz = nil
	r.FechaEvento = nil
	r.CreacionPedido = nil
	r.FechaPedido = nil
	r.GlnOrigen = nil
	r.DestinatarioDomicilioAdicional = nil
	r.Mail = nil
	r.CodigoIsoPais = nil
	r.EstadoControlCalidad = nil
	r.DescripcionTipoPedido = nil
	r.LinkImpresionRemito = nil
	r.LinkImpresionEtiquetaPedido = nil
	r.CodigoANMAT = nil
	r.ErrorOtTraza = nil
	r.ErrorOtAcondi = nil
	r.ErrorValidaciones = nil
	r.PropietarioEcommerce = nil
	r.CodigoCliente = nil
	r.NovedadesAcondi = nil
	r.NumeroVale = nil
	r.CodigoEmbalaje = nil
	r.NumeroTaco = nil
	r.UrlQR = nil
	r.NumeroOrdenOriginalEcommerce = nil
	r.NotasEmbalaje = nil
	r.Propietario = nil
	r.InformaANMAT = nil
	return r
}

func DeserializeCabecera(r io.Reader) (Cabecera, error) {
	t := NewCabecera()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCabeceraFromSchema(r io.Reader, schema string) (Cabecera, error) {
	t := NewCabecera()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCabecera(r Cabecera, w io.Writer) error {
	var err error
	err = vm.WriteString(r.OrdenWH, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.OrdenCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Remito, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.CodigoDestinatario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoDeIntegracion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Acondicionamiento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AlmacenCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PrioridadApiPlani, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CuentaTMS, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ContratoTMS, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FacturaLegal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FacturaInterna, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TieneGestionCobranza, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ValorSeguro, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AdmiteCambioLoteDirigido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NoAdmitePickingParcial, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ImprimeDocumentacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroCale, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Cot, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ComprobanteIngresosBrutos, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ContratoServicioAlmacenes, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Marketplace, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoPedidoMatriz, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Contacto, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Destinario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioCalle, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinarioNumero, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioPiso, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioDepartamento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioGLNDNI, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioCiudad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioProvincia, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioCodigoPostal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioTelefono, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioEmail, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrdenCompra, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.ClientePadre, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.CodigoEstado, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoDescripcion, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.TipoPedidoCodigo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoPedidoDescripcion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoGrilla, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEnvioFacturar, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaFacturacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PrecioValorFC, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroEnvio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NotasPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaCita, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEntrega, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaExpedicionSolicitada, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaExpedicionProgramada, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaExpedicionPrometida, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEntregaPlanificada, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEntregaProgramada, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.GrupoOrdenes, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FranjaHorario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstadoOTAcondi, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstadoOTTraz, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaEvento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.CreacionPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullLong(r.FechaPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.GlnOrigen, w)
	if err != nil {
		return err
	}
	err = vm.WriteFloat(r.CantidadTotal, w)
	if err != nil {
		return err
	}
	err = vm.WriteFloat(r.CantidadExpedidaTotal, w)
	if err != nil {
		return err
	}
	err = vm.WriteFloat(r.CantidadPickeadaTotal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DestinatarioDomicilioAdicional, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Mail, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoIsoPais, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EstadoControlCalidad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DescripcionTipoPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.LinkImpresionRemito, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.LinkImpresionEtiquetaPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoANMAT, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ErrorOtTraza, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ErrorOtAcondi, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ErrorValidaciones, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PropietarioEcommerce, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NovedadesAcondi, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroVale, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoEmbalaje, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroTaco, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.UrlQR, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroOrdenOriginalEcommerce, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NotasEmbalaje, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Propietario, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.InformaANMAT, w)
	if err != nil {
		return err
	}
	return err
}

func (r Cabecera) Serialize(w io.Writer) error {
	return writeCabecera(r, w)
}

func (r Cabecera) Schema() string {
	return "{\"fields\":[{\"name\":\"OrdenWH\",\"type\":\"string\"},{\"name\":\"OrdenCliente\",\"type\":\"string\"},{\"default\":null,\"name\":\"Remito\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoDestinatario\",\"type\":\"string\"},{\"default\":null,\"name\":\"TipoDeIntegracion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Acondicionamiento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"AlmacenCliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PrioridadApiPlani\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CuentaTMS\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ContratoTMS\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FacturaLegal\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FacturaInterna\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TieneGestionCobranza\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ValorSeguro\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"AdmiteCambioLoteDirigido\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NoAdmitePickingParcial\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ImprimeDocumentacion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroCale\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Cot\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ComprobanteIngresosBrutos\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ContratoServicioAlmacenes\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Marketplace\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TipoPedidoMatriz\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Contacto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Destinario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioCalle\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinarioNumero\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioPiso\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioDepartamento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioGLNDNI\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioCiudad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioProvincia\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioCodigoPostal\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioTelefono\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DestinatarioEmail\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"OrdenCompra\",\"type\":[\"null\",\"string\"]},{\"name\":\"ClientePadre\",\"type\":\"string\"},{\"name\":\"CodigoEstado\",\"type\":\"string\"},{\"default\":null,\"name\":\"CodigoDescripcion\",\"type\":[\"null\",\"string\"]},{\"name\":\"TipoPedidoCodigo\",\"type\":\"string\"},{\"default\":null,\"name\":\"TipoPedidoDescripcion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TipoGrilla\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FechaEnvioFacturar\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaFacturacion\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"PrecioValorFC\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NotasPedido\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FechaCita\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaEntrega\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaExpedicionSolicitada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaExpedicionProgramada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaExpedicionPrometida\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaEntregaPlanificada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaEntregaProgramada\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"name\":\"GrupoOrdenes\",\"type\":\"string\"},{\"default\":null,\"name\":\"FranjaHorario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"EstadoOTAcondi\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"EstadoOTTraz\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FechaEvento\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"CreacionPedido\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"FechaPedido\",\"type\":[\"null\",{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}]},{\"default\":null,\"name\":\"GlnOrigen\",\"type\":[\"null\",\"string\"]},{\"name\":\"CantidadTotal\",\"type\":\"float\"},{\"name\":\"CantidadExpedidaTotal\",\"type\":\"float\"},{\"name\":\"CantidadPickeadaTotal\",\"type\":\"float\"},{\"default\":null,\"name\":\"DestinatarioDomicilioAdicional\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Mail\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CodigoIsoPais\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"EstadoControlCalidad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DescripcionTipoPedido\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LinkImpresionRemito\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"LinkImpresionEtiquetaPedido\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CodigoANMAT\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ErrorOtTraza\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ErrorOtAcondi\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ErrorValidaciones\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"PropietarioEcommerce\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CodigoCliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NovedadesAcondi\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroVale\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CodigoEmbalaje\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroTaco\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"UrlQR\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroOrdenOriginalEcommerce\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NotasEmbalaje\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Propietario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"InformaANMAT\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.EventoWhPedidos.Events.SCEPedidosEmpaquetadosCommon.Cabecera\",\"type\":\"record\"}"
}

func (r Cabecera) SchemaName() string {
	return "Andreani.EventoWhPedidos.Events.SCEPedidosEmpaquetadosCommon.Cabecera"
}

func (_ Cabecera) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Cabecera) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Cabecera) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Cabecera) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Cabecera) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Cabecera) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Cabecera) SetString(v string)   { panic("Unsupported operation") }
func (_ Cabecera) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Cabecera) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.OrdenWH}

		return w

	case 1:
		w := types.String{Target: &r.OrdenCliente}

		return w

	case 2:
		r.Remito = NewUnionNullString()

		return r.Remito
	case 3:
		w := types.String{Target: &r.CodigoDestinatario}

		return w

	case 4:
		r.TipoDeIntegracion = NewUnionNullString()

		return r.TipoDeIntegracion
	case 5:
		r.Acondicionamiento = NewUnionNullString()

		return r.Acondicionamiento
	case 6:
		r.AlmacenCliente = NewUnionNullString()

		return r.AlmacenCliente
	case 7:
		r.PrioridadApiPlani = NewUnionNullString()

		return r.PrioridadApiPlani
	case 8:
		r.CuentaTMS = NewUnionNullString()

		return r.CuentaTMS
	case 9:
		r.ContratoTMS = NewUnionNullString()

		return r.ContratoTMS
	case 10:
		r.FacturaLegal = NewUnionNullString()

		return r.FacturaLegal
	case 11:
		r.FacturaInterna = NewUnionNullString()

		return r.FacturaInterna
	case 12:
		r.TieneGestionCobranza = NewUnionNullString()

		return r.TieneGestionCobranza
	case 13:
		r.ValorSeguro = NewUnionNullString()

		return r.ValorSeguro
	case 14:
		r.AdmiteCambioLoteDirigido = NewUnionNullString()

		return r.AdmiteCambioLoteDirigido
	case 15:
		r.NoAdmitePickingParcial = NewUnionNullString()

		return r.NoAdmitePickingParcial
	case 16:
		r.ImprimeDocumentacion = NewUnionNullString()

		return r.ImprimeDocumentacion
	case 17:
		r.NumeroCale = NewUnionNullString()

		return r.NumeroCale
	case 18:
		r.Cot = NewUnionNullString()

		return r.Cot
	case 19:
		r.ComprobanteIngresosBrutos = NewUnionNullString()

		return r.ComprobanteIngresosBrutos
	case 20:
		r.ContratoServicioAlmacenes = NewUnionNullString()

		return r.ContratoServicioAlmacenes
	case 21:
		r.Marketplace = NewUnionNullString()

		return r.Marketplace
	case 22:
		r.TipoPedidoMatriz = NewUnionNullString()

		return r.TipoPedidoMatriz
	case 23:
		r.Contacto = NewUnionNullString()

		return r.Contacto
	case 24:
		r.Destinario = NewUnionNullString()

		return r.Destinario
	case 25:
		r.DestinatarioCalle = NewUnionNullString()

		return r.DestinatarioCalle
	case 26:
		r.DestinarioNumero = NewUnionNullString()

		return r.DestinarioNumero
	case 27:
		r.DestinatarioPiso = NewUnionNullString()

		return r.DestinatarioPiso
	case 28:
		r.DestinatarioDepartamento = NewUnionNullString()

		return r.DestinatarioDepartamento
	case 29:
		r.DestinatarioGLNDNI = NewUnionNullString()

		return r.DestinatarioGLNDNI
	case 30:
		r.DestinatarioCiudad = NewUnionNullString()

		return r.DestinatarioCiudad
	case 31:
		r.DestinatarioProvincia = NewUnionNullString()

		return r.DestinatarioProvincia
	case 32:
		r.DestinatarioCodigoPostal = NewUnionNullString()

		return r.DestinatarioCodigoPostal
	case 33:
		r.DestinatarioTelefono = NewUnionNullString()

		return r.DestinatarioTelefono
	case 34:
		r.DestinatarioEmail = NewUnionNullString()

		return r.DestinatarioEmail
	case 35:
		r.OrdenCompra = NewUnionNullString()

		return r.OrdenCompra
	case 36:
		w := types.String{Target: &r.ClientePadre}

		return w

	case 37:
		w := types.String{Target: &r.CodigoEstado}

		return w

	case 38:
		r.CodigoDescripcion = NewUnionNullString()

		return r.CodigoDescripcion
	case 39:
		w := types.String{Target: &r.TipoPedidoCodigo}

		return w

	case 40:
		r.TipoPedidoDescripcion = NewUnionNullString()

		return r.TipoPedidoDescripcion
	case 41:
		r.TipoGrilla = NewUnionNullString()

		return r.TipoGrilla
	case 42:
		r.FechaEnvioFacturar = NewUnionNullLong()

		return r.FechaEnvioFacturar
	case 43:
		r.FechaFacturacion = NewUnionNullLong()

		return r.FechaFacturacion
	case 44:
		r.PrecioValorFC = NewUnionNullString()

		return r.PrecioValorFC
	case 45:
		r.NumeroEnvio = NewUnionNullString()

		return r.NumeroEnvio
	case 46:
		r.NotasPedido = NewUnionNullString()

		return r.NotasPedido
	case 47:
		r.FechaCita = NewUnionNullLong()

		return r.FechaCita
	case 48:
		r.FechaEntrega = NewUnionNullLong()

		return r.FechaEntrega
	case 49:
		r.FechaExpedicionSolicitada = NewUnionNullLong()

		return r.FechaExpedicionSolicitada
	case 50:
		r.FechaExpedicionProgramada = NewUnionNullLong()

		return r.FechaExpedicionProgramada
	case 51:
		r.FechaExpedicionPrometida = NewUnionNullLong()

		return r.FechaExpedicionPrometida
	case 52:
		r.FechaEntregaPlanificada = NewUnionNullLong()

		return r.FechaEntregaPlanificada
	case 53:
		r.FechaEntregaProgramada = NewUnionNullLong()

		return r.FechaEntregaProgramada
	case 54:
		w := types.String{Target: &r.GrupoOrdenes}

		return w

	case 55:
		r.FranjaHorario = NewUnionNullString()

		return r.FranjaHorario
	case 56:
		r.EstadoOTAcondi = NewUnionNullString()

		return r.EstadoOTAcondi
	case 57:
		r.EstadoOTTraz = NewUnionNullString()

		return r.EstadoOTTraz
	case 58:
		r.FechaEvento = NewUnionNullLong()

		return r.FechaEvento
	case 59:
		r.CreacionPedido = NewUnionNullLong()

		return r.CreacionPedido
	case 60:
		r.FechaPedido = NewUnionNullLong()

		return r.FechaPedido
	case 61:
		r.GlnOrigen = NewUnionNullString()

		return r.GlnOrigen
	case 62:
		w := types.Float{Target: &r.CantidadTotal}

		return w

	case 63:
		w := types.Float{Target: &r.CantidadExpedidaTotal}

		return w

	case 64:
		w := types.Float{Target: &r.CantidadPickeadaTotal}

		return w

	case 65:
		r.DestinatarioDomicilioAdicional = NewUnionNullString()

		return r.DestinatarioDomicilioAdicional
	case 66:
		r.Mail = NewUnionNullString()

		return r.Mail
	case 67:
		r.CodigoIsoPais = NewUnionNullString()

		return r.CodigoIsoPais
	case 68:
		r.EstadoControlCalidad = NewUnionNullString()

		return r.EstadoControlCalidad
	case 69:
		r.DescripcionTipoPedido = NewUnionNullString()

		return r.DescripcionTipoPedido
	case 70:
		r.LinkImpresionRemito = NewUnionNullString()

		return r.LinkImpresionRemito
	case 71:
		r.LinkImpresionEtiquetaPedido = NewUnionNullString()

		return r.LinkImpresionEtiquetaPedido
	case 72:
		r.CodigoANMAT = NewUnionNullString()

		return r.CodigoANMAT
	case 73:
		r.ErrorOtTraza = NewUnionNullString()

		return r.ErrorOtTraza
	case 74:
		r.ErrorOtAcondi = NewUnionNullString()

		return r.ErrorOtAcondi
	case 75:
		r.ErrorValidaciones = NewUnionNullString()

		return r.ErrorValidaciones
	case 76:
		r.PropietarioEcommerce = NewUnionNullString()

		return r.PropietarioEcommerce
	case 77:
		r.CodigoCliente = NewUnionNullString()

		return r.CodigoCliente
	case 78:
		r.NovedadesAcondi = NewUnionNullString()

		return r.NovedadesAcondi
	case 79:
		r.NumeroVale = NewUnionNullString()

		return r.NumeroVale
	case 80:
		r.CodigoEmbalaje = NewUnionNullString()

		return r.CodigoEmbalaje
	case 81:
		r.NumeroTaco = NewUnionNullString()

		return r.NumeroTaco
	case 82:
		r.UrlQR = NewUnionNullString()

		return r.UrlQR
	case 83:
		r.NumeroOrdenOriginalEcommerce = NewUnionNullString()

		return r.NumeroOrdenOriginalEcommerce
	case 84:
		r.NotasEmbalaje = NewUnionNullString()

		return r.NotasEmbalaje
	case 85:
		r.Propietario = NewUnionNullString()

		return r.Propietario
	case 86:
		r.InformaANMAT = NewUnionNullString()

		return r.InformaANMAT
	}
	panic("Unknown field index")
}

func (r *Cabecera) SetDefault(i int) {
	switch i {
	case 2:
		r.Remito = nil
		return
	case 4:
		r.TipoDeIntegracion = nil
		return
	case 5:
		r.Acondicionamiento = nil
		return
	case 6:
		r.AlmacenCliente = nil
		return
	case 7:
		r.PrioridadApiPlani = nil
		return
	case 8:
		r.CuentaTMS = nil
		return
	case 9:
		r.ContratoTMS = nil
		return
	case 10:
		r.FacturaLegal = nil
		return
	case 11:
		r.FacturaInterna = nil
		return
	case 12:
		r.TieneGestionCobranza = nil
		return
	case 13:
		r.ValorSeguro = nil
		return
	case 14:
		r.AdmiteCambioLoteDirigido = nil
		return
	case 15:
		r.NoAdmitePickingParcial = nil
		return
	case 16:
		r.ImprimeDocumentacion = nil
		return
	case 17:
		r.NumeroCale = nil
		return
	case 18:
		r.Cot = nil
		return
	case 19:
		r.ComprobanteIngresosBrutos = nil
		return
	case 20:
		r.ContratoServicioAlmacenes = nil
		return
	case 21:
		r.Marketplace = nil
		return
	case 22:
		r.TipoPedidoMatriz = nil
		return
	case 23:
		r.Contacto = nil
		return
	case 24:
		r.Destinario = nil
		return
	case 25:
		r.DestinatarioCalle = nil
		return
	case 26:
		r.DestinarioNumero = nil
		return
	case 27:
		r.DestinatarioPiso = nil
		return
	case 28:
		r.DestinatarioDepartamento = nil
		return
	case 29:
		r.DestinatarioGLNDNI = nil
		return
	case 30:
		r.DestinatarioCiudad = nil
		return
	case 31:
		r.DestinatarioProvincia = nil
		return
	case 32:
		r.DestinatarioCodigoPostal = nil
		return
	case 33:
		r.DestinatarioTelefono = nil
		return
	case 34:
		r.DestinatarioEmail = nil
		return
	case 35:
		r.OrdenCompra = nil
		return
	case 38:
		r.CodigoDescripcion = nil
		return
	case 40:
		r.TipoPedidoDescripcion = nil
		return
	case 41:
		r.TipoGrilla = nil
		return
	case 42:
		r.FechaEnvioFacturar = nil
		return
	case 43:
		r.FechaFacturacion = nil
		return
	case 44:
		r.PrecioValorFC = nil
		return
	case 45:
		r.NumeroEnvio = nil
		return
	case 46:
		r.NotasPedido = nil
		return
	case 47:
		r.FechaCita = nil
		return
	case 48:
		r.FechaEntrega = nil
		return
	case 49:
		r.FechaExpedicionSolicitada = nil
		return
	case 50:
		r.FechaExpedicionProgramada = nil
		return
	case 51:
		r.FechaExpedicionPrometida = nil
		return
	case 52:
		r.FechaEntregaPlanificada = nil
		return
	case 53:
		r.FechaEntregaProgramada = nil
		return
	case 55:
		r.FranjaHorario = nil
		return
	case 56:
		r.EstadoOTAcondi = nil
		return
	case 57:
		r.EstadoOTTraz = nil
		return
	case 58:
		r.FechaEvento = nil
		return
	case 59:
		r.CreacionPedido = nil
		return
	case 60:
		r.FechaPedido = nil
		return
	case 61:
		r.GlnOrigen = nil
		return
	case 65:
		r.DestinatarioDomicilioAdicional = nil
		return
	case 66:
		r.Mail = nil
		return
	case 67:
		r.CodigoIsoPais = nil
		return
	case 68:
		r.EstadoControlCalidad = nil
		return
	case 69:
		r.DescripcionTipoPedido = nil
		return
	case 70:
		r.LinkImpresionRemito = nil
		return
	case 71:
		r.LinkImpresionEtiquetaPedido = nil
		return
	case 72:
		r.CodigoANMAT = nil
		return
	case 73:
		r.ErrorOtTraza = nil
		return
	case 74:
		r.ErrorOtAcondi = nil
		return
	case 75:
		r.ErrorValidaciones = nil
		return
	case 76:
		r.PropietarioEcommerce = nil
		return
	case 77:
		r.CodigoCliente = nil
		return
	case 78:
		r.NovedadesAcondi = nil
		return
	case 79:
		r.NumeroVale = nil
		return
	case 80:
		r.CodigoEmbalaje = nil
		return
	case 81:
		r.NumeroTaco = nil
		return
	case 82:
		r.UrlQR = nil
		return
	case 83:
		r.NumeroOrdenOriginalEcommerce = nil
		return
	case 84:
		r.NotasEmbalaje = nil
		return
	case 85:
		r.Propietario = nil
		return
	case 86:
		r.InformaANMAT = nil
		return
	}
	panic("Unknown field index")
}

func (r *Cabecera) NullField(i int) {
	switch i {
	case 2:
		r.Remito = nil
		return
	case 4:
		r.TipoDeIntegracion = nil
		return
	case 5:
		r.Acondicionamiento = nil
		return
	case 6:
		r.AlmacenCliente = nil
		return
	case 7:
		r.PrioridadApiPlani = nil
		return
	case 8:
		r.CuentaTMS = nil
		return
	case 9:
		r.ContratoTMS = nil
		return
	case 10:
		r.FacturaLegal = nil
		return
	case 11:
		r.FacturaInterna = nil
		return
	case 12:
		r.TieneGestionCobranza = nil
		return
	case 13:
		r.ValorSeguro = nil
		return
	case 14:
		r.AdmiteCambioLoteDirigido = nil
		return
	case 15:
		r.NoAdmitePickingParcial = nil
		return
	case 16:
		r.ImprimeDocumentacion = nil
		return
	case 17:
		r.NumeroCale = nil
		return
	case 18:
		r.Cot = nil
		return
	case 19:
		r.ComprobanteIngresosBrutos = nil
		return
	case 20:
		r.ContratoServicioAlmacenes = nil
		return
	case 21:
		r.Marketplace = nil
		return
	case 22:
		r.TipoPedidoMatriz = nil
		return
	case 23:
		r.Contacto = nil
		return
	case 24:
		r.Destinario = nil
		return
	case 25:
		r.DestinatarioCalle = nil
		return
	case 26:
		r.DestinarioNumero = nil
		return
	case 27:
		r.DestinatarioPiso = nil
		return
	case 28:
		r.DestinatarioDepartamento = nil
		return
	case 29:
		r.DestinatarioGLNDNI = nil
		return
	case 30:
		r.DestinatarioCiudad = nil
		return
	case 31:
		r.DestinatarioProvincia = nil
		return
	case 32:
		r.DestinatarioCodigoPostal = nil
		return
	case 33:
		r.DestinatarioTelefono = nil
		return
	case 34:
		r.DestinatarioEmail = nil
		return
	case 35:
		r.OrdenCompra = nil
		return
	case 38:
		r.CodigoDescripcion = nil
		return
	case 40:
		r.TipoPedidoDescripcion = nil
		return
	case 41:
		r.TipoGrilla = nil
		return
	case 42:
		r.FechaEnvioFacturar = nil
		return
	case 43:
		r.FechaFacturacion = nil
		return
	case 44:
		r.PrecioValorFC = nil
		return
	case 45:
		r.NumeroEnvio = nil
		return
	case 46:
		r.NotasPedido = nil
		return
	case 47:
		r.FechaCita = nil
		return
	case 48:
		r.FechaEntrega = nil
		return
	case 49:
		r.FechaExpedicionSolicitada = nil
		return
	case 50:
		r.FechaExpedicionProgramada = nil
		return
	case 51:
		r.FechaExpedicionPrometida = nil
		return
	case 52:
		r.FechaEntregaPlanificada = nil
		return
	case 53:
		r.FechaEntregaProgramada = nil
		return
	case 55:
		r.FranjaHorario = nil
		return
	case 56:
		r.EstadoOTAcondi = nil
		return
	case 57:
		r.EstadoOTTraz = nil
		return
	case 58:
		r.FechaEvento = nil
		return
	case 59:
		r.CreacionPedido = nil
		return
	case 60:
		r.FechaPedido = nil
		return
	case 61:
		r.GlnOrigen = nil
		return
	case 65:
		r.DestinatarioDomicilioAdicional = nil
		return
	case 66:
		r.Mail = nil
		return
	case 67:
		r.CodigoIsoPais = nil
		return
	case 68:
		r.EstadoControlCalidad = nil
		return
	case 69:
		r.DescripcionTipoPedido = nil
		return
	case 70:
		r.LinkImpresionRemito = nil
		return
	case 71:
		r.LinkImpresionEtiquetaPedido = nil
		return
	case 72:
		r.CodigoANMAT = nil
		return
	case 73:
		r.ErrorOtTraza = nil
		return
	case 74:
		r.ErrorOtAcondi = nil
		return
	case 75:
		r.ErrorValidaciones = nil
		return
	case 76:
		r.PropietarioEcommerce = nil
		return
	case 77:
		r.CodigoCliente = nil
		return
	case 78:
		r.NovedadesAcondi = nil
		return
	case 79:
		r.NumeroVale = nil
		return
	case 80:
		r.CodigoEmbalaje = nil
		return
	case 81:
		r.NumeroTaco = nil
		return
	case 82:
		r.UrlQR = nil
		return
	case 83:
		r.NumeroOrdenOriginalEcommerce = nil
		return
	case 84:
		r.NotasEmbalaje = nil
		return
	case 85:
		r.Propietario = nil
		return
	case 86:
		r.InformaANMAT = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Cabecera) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Cabecera) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Cabecera) HintSize(int)                     { panic("Unsupported operation") }
func (_ Cabecera) Finalize()                        {}

func (_ Cabecera) AvroCRC64Fingerprint() []byte {
	return []byte(CabeceraAvroCRC64Fingerprint)
}

func (r Cabecera) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["OrdenWH"], err = json.Marshal(r.OrdenWH)
	if err != nil {
		return nil, err
	}
	output["OrdenCliente"], err = json.Marshal(r.OrdenCliente)
	if err != nil {
		return nil, err
	}
	output["Remito"], err = json.Marshal(r.Remito)
	if err != nil {
		return nil, err
	}
	output["CodigoDestinatario"], err = json.Marshal(r.CodigoDestinatario)
	if err != nil {
		return nil, err
	}
	output["TipoDeIntegracion"], err = json.Marshal(r.TipoDeIntegracion)
	if err != nil {
		return nil, err
	}
	output["Acondicionamiento"], err = json.Marshal(r.Acondicionamiento)
	if err != nil {
		return nil, err
	}
	output["AlmacenCliente"], err = json.Marshal(r.AlmacenCliente)
	if err != nil {
		return nil, err
	}
	output["PrioridadApiPlani"], err = json.Marshal(r.PrioridadApiPlani)
	if err != nil {
		return nil, err
	}
	output["CuentaTMS"], err = json.Marshal(r.CuentaTMS)
	if err != nil {
		return nil, err
	}
	output["ContratoTMS"], err = json.Marshal(r.ContratoTMS)
	if err != nil {
		return nil, err
	}
	output["FacturaLegal"], err = json.Marshal(r.FacturaLegal)
	if err != nil {
		return nil, err
	}
	output["FacturaInterna"], err = json.Marshal(r.FacturaInterna)
	if err != nil {
		return nil, err
	}
	output["TieneGestionCobranza"], err = json.Marshal(r.TieneGestionCobranza)
	if err != nil {
		return nil, err
	}
	output["ValorSeguro"], err = json.Marshal(r.ValorSeguro)
	if err != nil {
		return nil, err
	}
	output["AdmiteCambioLoteDirigido"], err = json.Marshal(r.AdmiteCambioLoteDirigido)
	if err != nil {
		return nil, err
	}
	output["NoAdmitePickingParcial"], err = json.Marshal(r.NoAdmitePickingParcial)
	if err != nil {
		return nil, err
	}
	output["ImprimeDocumentacion"], err = json.Marshal(r.ImprimeDocumentacion)
	if err != nil {
		return nil, err
	}
	output["NumeroCale"], err = json.Marshal(r.NumeroCale)
	if err != nil {
		return nil, err
	}
	output["Cot"], err = json.Marshal(r.Cot)
	if err != nil {
		return nil, err
	}
	output["ComprobanteIngresosBrutos"], err = json.Marshal(r.ComprobanteIngresosBrutos)
	if err != nil {
		return nil, err
	}
	output["ContratoServicioAlmacenes"], err = json.Marshal(r.ContratoServicioAlmacenes)
	if err != nil {
		return nil, err
	}
	output["Marketplace"], err = json.Marshal(r.Marketplace)
	if err != nil {
		return nil, err
	}
	output["TipoPedidoMatriz"], err = json.Marshal(r.TipoPedidoMatriz)
	if err != nil {
		return nil, err
	}
	output["Contacto"], err = json.Marshal(r.Contacto)
	if err != nil {
		return nil, err
	}
	output["Destinario"], err = json.Marshal(r.Destinario)
	if err != nil {
		return nil, err
	}
	output["DestinatarioCalle"], err = json.Marshal(r.DestinatarioCalle)
	if err != nil {
		return nil, err
	}
	output["DestinarioNumero"], err = json.Marshal(r.DestinarioNumero)
	if err != nil {
		return nil, err
	}
	output["DestinatarioPiso"], err = json.Marshal(r.DestinatarioPiso)
	if err != nil {
		return nil, err
	}
	output["DestinatarioDepartamento"], err = json.Marshal(r.DestinatarioDepartamento)
	if err != nil {
		return nil, err
	}
	output["DestinatarioGLNDNI"], err = json.Marshal(r.DestinatarioGLNDNI)
	if err != nil {
		return nil, err
	}
	output["DestinatarioCiudad"], err = json.Marshal(r.DestinatarioCiudad)
	if err != nil {
		return nil, err
	}
	output["DestinatarioProvincia"], err = json.Marshal(r.DestinatarioProvincia)
	if err != nil {
		return nil, err
	}
	output["DestinatarioCodigoPostal"], err = json.Marshal(r.DestinatarioCodigoPostal)
	if err != nil {
		return nil, err
	}
	output["DestinatarioTelefono"], err = json.Marshal(r.DestinatarioTelefono)
	if err != nil {
		return nil, err
	}
	output["DestinatarioEmail"], err = json.Marshal(r.DestinatarioEmail)
	if err != nil {
		return nil, err
	}
	output["OrdenCompra"], err = json.Marshal(r.OrdenCompra)
	if err != nil {
		return nil, err
	}
	output["ClientePadre"], err = json.Marshal(r.ClientePadre)
	if err != nil {
		return nil, err
	}
	output["CodigoEstado"], err = json.Marshal(r.CodigoEstado)
	if err != nil {
		return nil, err
	}
	output["CodigoDescripcion"], err = json.Marshal(r.CodigoDescripcion)
	if err != nil {
		return nil, err
	}
	output["TipoPedidoCodigo"], err = json.Marshal(r.TipoPedidoCodigo)
	if err != nil {
		return nil, err
	}
	output["TipoPedidoDescripcion"], err = json.Marshal(r.TipoPedidoDescripcion)
	if err != nil {
		return nil, err
	}
	output["TipoGrilla"], err = json.Marshal(r.TipoGrilla)
	if err != nil {
		return nil, err
	}
	output["FechaEnvioFacturar"], err = json.Marshal(r.FechaEnvioFacturar)
	if err != nil {
		return nil, err
	}
	output["FechaFacturacion"], err = json.Marshal(r.FechaFacturacion)
	if err != nil {
		return nil, err
	}
	output["PrecioValorFC"], err = json.Marshal(r.PrecioValorFC)
	if err != nil {
		return nil, err
	}
	output["NumeroEnvio"], err = json.Marshal(r.NumeroEnvio)
	if err != nil {
		return nil, err
	}
	output["NotasPedido"], err = json.Marshal(r.NotasPedido)
	if err != nil {
		return nil, err
	}
	output["FechaCita"], err = json.Marshal(r.FechaCita)
	if err != nil {
		return nil, err
	}
	output["FechaEntrega"], err = json.Marshal(r.FechaEntrega)
	if err != nil {
		return nil, err
	}
	output["FechaExpedicionSolicitada"], err = json.Marshal(r.FechaExpedicionSolicitada)
	if err != nil {
		return nil, err
	}
	output["FechaExpedicionProgramada"], err = json.Marshal(r.FechaExpedicionProgramada)
	if err != nil {
		return nil, err
	}
	output["FechaExpedicionPrometida"], err = json.Marshal(r.FechaExpedicionPrometida)
	if err != nil {
		return nil, err
	}
	output["FechaEntregaPlanificada"], err = json.Marshal(r.FechaEntregaPlanificada)
	if err != nil {
		return nil, err
	}
	output["FechaEntregaProgramada"], err = json.Marshal(r.FechaEntregaProgramada)
	if err != nil {
		return nil, err
	}
	output["GrupoOrdenes"], err = json.Marshal(r.GrupoOrdenes)
	if err != nil {
		return nil, err
	}
	output["FranjaHorario"], err = json.Marshal(r.FranjaHorario)
	if err != nil {
		return nil, err
	}
	output["EstadoOTAcondi"], err = json.Marshal(r.EstadoOTAcondi)
	if err != nil {
		return nil, err
	}
	output["EstadoOTTraz"], err = json.Marshal(r.EstadoOTTraz)
	if err != nil {
		return nil, err
	}
	output["FechaEvento"], err = json.Marshal(r.FechaEvento)
	if err != nil {
		return nil, err
	}
	output["CreacionPedido"], err = json.Marshal(r.CreacionPedido)
	if err != nil {
		return nil, err
	}
	output["FechaPedido"], err = json.Marshal(r.FechaPedido)
	if err != nil {
		return nil, err
	}
	output["GlnOrigen"], err = json.Marshal(r.GlnOrigen)
	if err != nil {
		return nil, err
	}
	output["CantidadTotal"], err = json.Marshal(r.CantidadTotal)
	if err != nil {
		return nil, err
	}
	output["CantidadExpedidaTotal"], err = json.Marshal(r.CantidadExpedidaTotal)
	if err != nil {
		return nil, err
	}
	output["CantidadPickeadaTotal"], err = json.Marshal(r.CantidadPickeadaTotal)
	if err != nil {
		return nil, err
	}
	output["DestinatarioDomicilioAdicional"], err = json.Marshal(r.DestinatarioDomicilioAdicional)
	if err != nil {
		return nil, err
	}
	output["Mail"], err = json.Marshal(r.Mail)
	if err != nil {
		return nil, err
	}
	output["CodigoIsoPais"], err = json.Marshal(r.CodigoIsoPais)
	if err != nil {
		return nil, err
	}
	output["EstadoControlCalidad"], err = json.Marshal(r.EstadoControlCalidad)
	if err != nil {
		return nil, err
	}
	output["DescripcionTipoPedido"], err = json.Marshal(r.DescripcionTipoPedido)
	if err != nil {
		return nil, err
	}
	output["LinkImpresionRemito"], err = json.Marshal(r.LinkImpresionRemito)
	if err != nil {
		return nil, err
	}
	output["LinkImpresionEtiquetaPedido"], err = json.Marshal(r.LinkImpresionEtiquetaPedido)
	if err != nil {
		return nil, err
	}
	output["CodigoANMAT"], err = json.Marshal(r.CodigoANMAT)
	if err != nil {
		return nil, err
	}
	output["ErrorOtTraza"], err = json.Marshal(r.ErrorOtTraza)
	if err != nil {
		return nil, err
	}
	output["ErrorOtAcondi"], err = json.Marshal(r.ErrorOtAcondi)
	if err != nil {
		return nil, err
	}
	output["ErrorValidaciones"], err = json.Marshal(r.ErrorValidaciones)
	if err != nil {
		return nil, err
	}
	output["PropietarioEcommerce"], err = json.Marshal(r.PropietarioEcommerce)
	if err != nil {
		return nil, err
	}
	output["CodigoCliente"], err = json.Marshal(r.CodigoCliente)
	if err != nil {
		return nil, err
	}
	output["NovedadesAcondi"], err = json.Marshal(r.NovedadesAcondi)
	if err != nil {
		return nil, err
	}
	output["NumeroVale"], err = json.Marshal(r.NumeroVale)
	if err != nil {
		return nil, err
	}
	output["CodigoEmbalaje"], err = json.Marshal(r.CodigoEmbalaje)
	if err != nil {
		return nil, err
	}
	output["NumeroTaco"], err = json.Marshal(r.NumeroTaco)
	if err != nil {
		return nil, err
	}
	output["UrlQR"], err = json.Marshal(r.UrlQR)
	if err != nil {
		return nil, err
	}
	output["NumeroOrdenOriginalEcommerce"], err = json.Marshal(r.NumeroOrdenOriginalEcommerce)
	if err != nil {
		return nil, err
	}
	output["NotasEmbalaje"], err = json.Marshal(r.NotasEmbalaje)
	if err != nil {
		return nil, err
	}
	output["Propietario"], err = json.Marshal(r.Propietario)
	if err != nil {
		return nil, err
	}
	output["InformaANMAT"], err = json.Marshal(r.InformaANMAT)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Cabecera) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["OrdenWH"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenWH); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrdenWH")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrdenCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenCliente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrdenCliente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Remito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Remito); err != nil {
			return err
		}
	} else {
		r.Remito = NewUnionNullString()

		r.Remito = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoDestinatario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoDestinatario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoDestinatario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoDeIntegracion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoDeIntegracion); err != nil {
			return err
		}
	} else {
		r.TipoDeIntegracion = NewUnionNullString()

		r.TipoDeIntegracion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Acondicionamiento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Acondicionamiento); err != nil {
			return err
		}
	} else {
		r.Acondicionamiento = NewUnionNullString()

		r.Acondicionamiento = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["AlmacenCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AlmacenCliente); err != nil {
			return err
		}
	} else {
		r.AlmacenCliente = NewUnionNullString()

		r.AlmacenCliente = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PrioridadApiPlani"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PrioridadApiPlani); err != nil {
			return err
		}
	} else {
		r.PrioridadApiPlani = NewUnionNullString()

		r.PrioridadApiPlani = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CuentaTMS"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CuentaTMS); err != nil {
			return err
		}
	} else {
		r.CuentaTMS = NewUnionNullString()

		r.CuentaTMS = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ContratoTMS"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContratoTMS); err != nil {
			return err
		}
	} else {
		r.ContratoTMS = NewUnionNullString()

		r.ContratoTMS = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FacturaLegal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FacturaLegal); err != nil {
			return err
		}
	} else {
		r.FacturaLegal = NewUnionNullString()

		r.FacturaLegal = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FacturaInterna"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FacturaInterna); err != nil {
			return err
		}
	} else {
		r.FacturaInterna = NewUnionNullString()

		r.FacturaInterna = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TieneGestionCobranza"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TieneGestionCobranza); err != nil {
			return err
		}
	} else {
		r.TieneGestionCobranza = NewUnionNullString()

		r.TieneGestionCobranza = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ValorSeguro"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ValorSeguro); err != nil {
			return err
		}
	} else {
		r.ValorSeguro = NewUnionNullString()

		r.ValorSeguro = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["AdmiteCambioLoteDirigido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AdmiteCambioLoteDirigido); err != nil {
			return err
		}
	} else {
		r.AdmiteCambioLoteDirigido = NewUnionNullString()

		r.AdmiteCambioLoteDirigido = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NoAdmitePickingParcial"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NoAdmitePickingParcial); err != nil {
			return err
		}
	} else {
		r.NoAdmitePickingParcial = NewUnionNullString()

		r.NoAdmitePickingParcial = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ImprimeDocumentacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ImprimeDocumentacion); err != nil {
			return err
		}
	} else {
		r.ImprimeDocumentacion = NewUnionNullString()

		r.ImprimeDocumentacion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroCale"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroCale); err != nil {
			return err
		}
	} else {
		r.NumeroCale = NewUnionNullString()

		r.NumeroCale = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Cot"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Cot); err != nil {
			return err
		}
	} else {
		r.Cot = NewUnionNullString()

		r.Cot = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ComprobanteIngresosBrutos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ComprobanteIngresosBrutos); err != nil {
			return err
		}
	} else {
		r.ComprobanteIngresosBrutos = NewUnionNullString()

		r.ComprobanteIngresosBrutos = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ContratoServicioAlmacenes"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ContratoServicioAlmacenes); err != nil {
			return err
		}
	} else {
		r.ContratoServicioAlmacenes = NewUnionNullString()

		r.ContratoServicioAlmacenes = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Marketplace"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Marketplace); err != nil {
			return err
		}
	} else {
		r.Marketplace = NewUnionNullString()

		r.Marketplace = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoPedidoMatriz"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPedidoMatriz); err != nil {
			return err
		}
	} else {
		r.TipoPedidoMatriz = NewUnionNullString()

		r.TipoPedidoMatriz = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Contacto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contacto); err != nil {
			return err
		}
	} else {
		r.Contacto = NewUnionNullString()

		r.Contacto = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Destinario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Destinario); err != nil {
			return err
		}
	} else {
		r.Destinario = NewUnionNullString()

		r.Destinario = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioCalle"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioCalle); err != nil {
			return err
		}
	} else {
		r.DestinatarioCalle = NewUnionNullString()

		r.DestinatarioCalle = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinarioNumero"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinarioNumero); err != nil {
			return err
		}
	} else {
		r.DestinarioNumero = NewUnionNullString()

		r.DestinarioNumero = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioPiso"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioPiso); err != nil {
			return err
		}
	} else {
		r.DestinatarioPiso = NewUnionNullString()

		r.DestinatarioPiso = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioDepartamento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioDepartamento); err != nil {
			return err
		}
	} else {
		r.DestinatarioDepartamento = NewUnionNullString()

		r.DestinatarioDepartamento = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioGLNDNI"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioGLNDNI); err != nil {
			return err
		}
	} else {
		r.DestinatarioGLNDNI = NewUnionNullString()

		r.DestinatarioGLNDNI = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioCiudad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioCiudad); err != nil {
			return err
		}
	} else {
		r.DestinatarioCiudad = NewUnionNullString()

		r.DestinatarioCiudad = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioProvincia"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioProvincia); err != nil {
			return err
		}
	} else {
		r.DestinatarioProvincia = NewUnionNullString()

		r.DestinatarioProvincia = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioCodigoPostal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioCodigoPostal); err != nil {
			return err
		}
	} else {
		r.DestinatarioCodigoPostal = NewUnionNullString()

		r.DestinatarioCodigoPostal = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioTelefono"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioTelefono); err != nil {
			return err
		}
	} else {
		r.DestinatarioTelefono = NewUnionNullString()

		r.DestinatarioTelefono = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioEmail"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioEmail); err != nil {
			return err
		}
	} else {
		r.DestinatarioEmail = NewUnionNullString()

		r.DestinatarioEmail = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrdenCompra"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenCompra); err != nil {
			return err
		}
	} else {
		r.OrdenCompra = NewUnionNullString()

		r.OrdenCompra = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ClientePadre"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ClientePadre); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ClientePadre")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoEstado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoEstado); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoEstado")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoDescripcion); err != nil {
			return err
		}
	} else {
		r.CodigoDescripcion = NewUnionNullString()

		r.CodigoDescripcion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoPedidoCodigo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPedidoCodigo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TipoPedidoCodigo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoPedidoDescripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPedidoDescripcion); err != nil {
			return err
		}
	} else {
		r.TipoPedidoDescripcion = NewUnionNullString()

		r.TipoPedidoDescripcion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoGrilla"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoGrilla); err != nil {
			return err
		}
	} else {
		r.TipoGrilla = NewUnionNullString()

		r.TipoGrilla = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEnvioFacturar"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEnvioFacturar); err != nil {
			return err
		}
	} else {
		r.FechaEnvioFacturar = NewUnionNullLong()

		r.FechaEnvioFacturar = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaFacturacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaFacturacion); err != nil {
			return err
		}
	} else {
		r.FechaFacturacion = NewUnionNullLong()

		r.FechaFacturacion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PrecioValorFC"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PrecioValorFC); err != nil {
			return err
		}
	} else {
		r.PrecioValorFC = NewUnionNullString()

		r.PrecioValorFC = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroEnvio); err != nil {
			return err
		}
	} else {
		r.NumeroEnvio = NewUnionNullString()

		r.NumeroEnvio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NotasPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NotasPedido); err != nil {
			return err
		}
	} else {
		r.NotasPedido = NewUnionNullString()

		r.NotasPedido = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaCita"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaCita); err != nil {
			return err
		}
	} else {
		r.FechaCita = NewUnionNullLong()

		r.FechaCita = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEntrega"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEntrega); err != nil {
			return err
		}
	} else {
		r.FechaEntrega = NewUnionNullLong()

		r.FechaEntrega = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaExpedicionSolicitada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaExpedicionSolicitada); err != nil {
			return err
		}
	} else {
		r.FechaExpedicionSolicitada = NewUnionNullLong()

		r.FechaExpedicionSolicitada = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaExpedicionProgramada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaExpedicionProgramada); err != nil {
			return err
		}
	} else {
		r.FechaExpedicionProgramada = NewUnionNullLong()

		r.FechaExpedicionProgramada = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaExpedicionPrometida"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaExpedicionPrometida); err != nil {
			return err
		}
	} else {
		r.FechaExpedicionPrometida = NewUnionNullLong()

		r.FechaExpedicionPrometida = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEntregaPlanificada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEntregaPlanificada); err != nil {
			return err
		}
	} else {
		r.FechaEntregaPlanificada = NewUnionNullLong()

		r.FechaEntregaPlanificada = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEntregaProgramada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEntregaProgramada); err != nil {
			return err
		}
	} else {
		r.FechaEntregaProgramada = NewUnionNullLong()

		r.FechaEntregaProgramada = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["GrupoOrdenes"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.GrupoOrdenes); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for GrupoOrdenes")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FranjaHorario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FranjaHorario); err != nil {
			return err
		}
	} else {
		r.FranjaHorario = NewUnionNullString()

		r.FranjaHorario = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EstadoOTAcondi"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstadoOTAcondi); err != nil {
			return err
		}
	} else {
		r.EstadoOTAcondi = NewUnionNullString()

		r.EstadoOTAcondi = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EstadoOTTraz"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstadoOTTraz); err != nil {
			return err
		}
	} else {
		r.EstadoOTTraz = NewUnionNullString()

		r.EstadoOTTraz = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEvento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEvento); err != nil {
			return err
		}
	} else {
		r.FechaEvento = NewUnionNullLong()

		r.FechaEvento = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CreacionPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CreacionPedido); err != nil {
			return err
		}
	} else {
		r.CreacionPedido = NewUnionNullLong()

		r.CreacionPedido = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaPedido); err != nil {
			return err
		}
	} else {
		r.FechaPedido = NewUnionNullLong()

		r.FechaPedido = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["GlnOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.GlnOrigen); err != nil {
			return err
		}
	} else {
		r.GlnOrigen = NewUnionNullString()

		r.GlnOrigen = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CantidadTotal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CantidadTotal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CantidadTotal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CantidadExpedidaTotal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CantidadExpedidaTotal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CantidadExpedidaTotal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CantidadPickeadaTotal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CantidadPickeadaTotal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CantidadPickeadaTotal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["DestinatarioDomicilioAdicional"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DestinatarioDomicilioAdicional); err != nil {
			return err
		}
	} else {
		r.DestinatarioDomicilioAdicional = NewUnionNullString()

		r.DestinatarioDomicilioAdicional = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Mail"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Mail); err != nil {
			return err
		}
	} else {
		r.Mail = NewUnionNullString()

		r.Mail = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoIsoPais"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoIsoPais); err != nil {
			return err
		}
	} else {
		r.CodigoIsoPais = NewUnionNullString()

		r.CodigoIsoPais = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EstadoControlCalidad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EstadoControlCalidad); err != nil {
			return err
		}
	} else {
		r.EstadoControlCalidad = NewUnionNullString()

		r.EstadoControlCalidad = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DescripcionTipoPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DescripcionTipoPedido); err != nil {
			return err
		}
	} else {
		r.DescripcionTipoPedido = NewUnionNullString()

		r.DescripcionTipoPedido = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["LinkImpresionRemito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LinkImpresionRemito); err != nil {
			return err
		}
	} else {
		r.LinkImpresionRemito = NewUnionNullString()

		r.LinkImpresionRemito = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["LinkImpresionEtiquetaPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LinkImpresionEtiquetaPedido); err != nil {
			return err
		}
	} else {
		r.LinkImpresionEtiquetaPedido = NewUnionNullString()

		r.LinkImpresionEtiquetaPedido = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoANMAT"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoANMAT); err != nil {
			return err
		}
	} else {
		r.CodigoANMAT = NewUnionNullString()

		r.CodigoANMAT = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ErrorOtTraza"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ErrorOtTraza); err != nil {
			return err
		}
	} else {
		r.ErrorOtTraza = NewUnionNullString()

		r.ErrorOtTraza = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ErrorOtAcondi"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ErrorOtAcondi); err != nil {
			return err
		}
	} else {
		r.ErrorOtAcondi = NewUnionNullString()

		r.ErrorOtAcondi = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ErrorValidaciones"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ErrorValidaciones); err != nil {
			return err
		}
	} else {
		r.ErrorValidaciones = NewUnionNullString()

		r.ErrorValidaciones = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["PropietarioEcommerce"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PropietarioEcommerce); err != nil {
			return err
		}
	} else {
		r.PropietarioEcommerce = NewUnionNullString()

		r.PropietarioEcommerce = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoCliente); err != nil {
			return err
		}
	} else {
		r.CodigoCliente = NewUnionNullString()

		r.CodigoCliente = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NovedadesAcondi"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NovedadesAcondi); err != nil {
			return err
		}
	} else {
		r.NovedadesAcondi = NewUnionNullString()

		r.NovedadesAcondi = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroVale"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroVale); err != nil {
			return err
		}
	} else {
		r.NumeroVale = NewUnionNullString()

		r.NumeroVale = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoEmbalaje"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoEmbalaje); err != nil {
			return err
		}
	} else {
		r.CodigoEmbalaje = NewUnionNullString()

		r.CodigoEmbalaje = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroTaco"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroTaco); err != nil {
			return err
		}
	} else {
		r.NumeroTaco = NewUnionNullString()

		r.NumeroTaco = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["UrlQR"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UrlQR); err != nil {
			return err
		}
	} else {
		r.UrlQR = NewUnionNullString()

		r.UrlQR = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroOrdenOriginalEcommerce"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroOrdenOriginalEcommerce); err != nil {
			return err
		}
	} else {
		r.NumeroOrdenOriginalEcommerce = NewUnionNullString()

		r.NumeroOrdenOriginalEcommerce = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NotasEmbalaje"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NotasEmbalaje); err != nil {
			return err
		}
	} else {
		r.NotasEmbalaje = NewUnionNullString()

		r.NotasEmbalaje = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Propietario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Propietario); err != nil {
			return err
		}
	} else {
		r.Propietario = NewUnionNullString()

		r.Propietario = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["InformaANMAT"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.InformaANMAT); err != nil {
			return err
		}
	} else {
		r.InformaANMAT = NewUnionNullString()

		r.InformaANMAT = nil
	}
	return nil
}
