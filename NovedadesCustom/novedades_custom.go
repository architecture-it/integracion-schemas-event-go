// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     NovedadesCustom.avsc
 */
package NovedadesCustomEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type NovedadesCustom struct {
	NumeroEnvio *UnionNullString `json:"NumeroEnvio"`

	NumeroInterno *UnionNullString `json:"NumeroInterno"`

	Mensaje *UnionNullString `json:"Mensaje"`
}

const NovedadesCustomAvroCRC64Fingerprint = "Ev=r\xf4\xab\xefa"

func NewNovedadesCustom() NovedadesCustom {
	r := NovedadesCustom{}
	r.NumeroEnvio = nil
	r.NumeroInterno = nil
	r.Mensaje = nil
	return r
}

func DeserializeNovedadesCustom(r io.Reader) (NovedadesCustom, error) {
	t := NewNovedadesCustom()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeNovedadesCustomFromSchema(r io.Reader, schema string) (NovedadesCustom, error) {
	t := NewNovedadesCustom()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeNovedadesCustom(r NovedadesCustom, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.NumeroEnvio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroInterno, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Mensaje, w)
	if err != nil {
		return err
	}
	return err
}

func (r NovedadesCustom) Serialize(w io.Writer) error {
	return writeNovedadesCustom(r, w)
}

func (r NovedadesCustom) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"NumeroEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroInterno\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Mensaje\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.NovedadesCustom.Events.Record.NovedadesCustom\",\"type\":\"record\"}"
}

func (r NovedadesCustom) SchemaName() string {
	return "Andreani.NovedadesCustom.Events.Record.NovedadesCustom"
}

func (_ NovedadesCustom) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ NovedadesCustom) SetInt(v int32)       { panic("Unsupported operation") }
func (_ NovedadesCustom) SetLong(v int64)      { panic("Unsupported operation") }
func (_ NovedadesCustom) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ NovedadesCustom) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ NovedadesCustom) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ NovedadesCustom) SetString(v string)   { panic("Unsupported operation") }
func (_ NovedadesCustom) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *NovedadesCustom) Get(i int) types.Field {
	switch i {
	case 0:
		r.NumeroEnvio = NewUnionNullString()

		return r.NumeroEnvio
	case 1:
		r.NumeroInterno = NewUnionNullString()

		return r.NumeroInterno
	case 2:
		r.Mensaje = NewUnionNullString()

		return r.Mensaje
	}
	panic("Unknown field index")
}

func (r *NovedadesCustom) SetDefault(i int) {
	switch i {
	case 0:
		r.NumeroEnvio = nil
		return
	case 1:
		r.NumeroInterno = nil
		return
	case 2:
		r.Mensaje = nil
		return
	}
	panic("Unknown field index")
}

func (r *NovedadesCustom) NullField(i int) {
	switch i {
	case 0:
		r.NumeroEnvio = nil
		return
	case 1:
		r.NumeroInterno = nil
		return
	case 2:
		r.Mensaje = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ NovedadesCustom) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ NovedadesCustom) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ NovedadesCustom) HintSize(int)                     { panic("Unsupported operation") }
func (_ NovedadesCustom) Finalize()                        {}

func (_ NovedadesCustom) AvroCRC64Fingerprint() []byte {
	return []byte(NovedadesCustomAvroCRC64Fingerprint)
}

func (r NovedadesCustom) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["NumeroEnvio"], err = json.Marshal(r.NumeroEnvio)
	if err != nil {
		return nil, err
	}
	output["NumeroInterno"], err = json.Marshal(r.NumeroInterno)
	if err != nil {
		return nil, err
	}
	output["Mensaje"], err = json.Marshal(r.Mensaje)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *NovedadesCustom) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["NumeroEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroEnvio); err != nil {
			return err
		}
	} else {
		r.NumeroEnvio = NewUnionNullString()

		r.NumeroEnvio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroInterno"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroInterno); err != nil {
			return err
		}
	} else {
		r.NumeroInterno = NewUnionNullString()

		r.NumeroInterno = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Mensaje"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Mensaje); err != nil {
			return err
		}
	} else {
		r.Mensaje = NewUnionNullString()

		r.Mensaje = nil
	}
	return nil
}
