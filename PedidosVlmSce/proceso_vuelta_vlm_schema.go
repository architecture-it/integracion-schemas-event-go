// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ProcesoVueltaVLMSchema.avsc
 */
package PedidosVlmSceEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ProcesoVueltaVLMSchema struct {
	NovedadDePedidoDeVLMSolicitada NovedadDePedidoDeVLMSolicitada `json:"NovedadDePedidoDeVLMSolicitada"`
}

const ProcesoVueltaVLMSchemaAvroCRC64Fingerprint = "\x86\xd2\xf5\xd7\x05FV\x96"

func NewProcesoVueltaVLMSchema() ProcesoVueltaVLMSchema {
	r := ProcesoVueltaVLMSchema{}
	r.NovedadDePedidoDeVLMSolicitada = NewNovedadDePedidoDeVLMSolicitada()

	return r
}

func DeserializeProcesoVueltaVLMSchema(r io.Reader) (ProcesoVueltaVLMSchema, error) {
	t := NewProcesoVueltaVLMSchema()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeProcesoVueltaVLMSchemaFromSchema(r io.Reader, schema string) (ProcesoVueltaVLMSchema, error) {
	t := NewProcesoVueltaVLMSchema()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeProcesoVueltaVLMSchema(r ProcesoVueltaVLMSchema, w io.Writer) error {
	var err error
	err = writeNovedadDePedidoDeVLMSolicitada(r.NovedadDePedidoDeVLMSolicitada, w)
	if err != nil {
		return err
	}
	return err
}

func (r ProcesoVueltaVLMSchema) Serialize(w io.Writer) error {
	return writeProcesoVueltaVLMSchema(r, w)
}

func (r ProcesoVueltaVLMSchema) Schema() string {
	return "{\"fields\":[{\"name\":\"NovedadDePedidoDeVLMSolicitada\",\"type\":{\"fields\":[{\"name\":\"timestamp\",\"type\":\"string\"},{\"name\":\"remitente\",\"type\":\"string\"},{\"name\":\"destinatario\",\"type\":\"string\"},{\"name\":\"numeroDeOrden\",\"type\":\"string\"},{\"name\":\"vencimiento\",\"type\":\"string\"},{\"name\":\"novedadDePedidoDeVLM\",\"type\":{\"fields\":[{\"name\":\"idTarea\",\"type\":\"string\"},{\"name\":\"almacen\",\"type\":\"string\"},{\"name\":\"numeroContenedorInterno\",\"type\":\"string\"},{\"name\":\"identificadorDeCaja\",\"type\":\"string\"},{\"name\":\"unidades\",\"type\":\"int\"},{\"name\":\"esTareaNueva\",\"type\":\"boolean\"}],\"name\":\"NovedadDePedidoDeVLM\",\"type\":\"record\"}}],\"name\":\"NovedadDePedidoDeVLMSolicitada\",\"namespace\":\"Andreani.PedidosVlmSce.Events.ProcesoVuelta\",\"type\":\"record\"}}],\"name\":\"Andreani.PedidosVlmSce.Events.Record.ProcesoVueltaVLMSchema\",\"type\":\"record\"}"
}

func (r ProcesoVueltaVLMSchema) SchemaName() string {
	return "Andreani.PedidosVlmSce.Events.Record.ProcesoVueltaVLMSchema"
}

func (_ ProcesoVueltaVLMSchema) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) SetString(v string)   { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ProcesoVueltaVLMSchema) Get(i int) types.Field {
	switch i {
	case 0:
		r.NovedadDePedidoDeVLMSolicitada = NewNovedadDePedidoDeVLMSolicitada()

		w := types.Record{Target: &r.NovedadDePedidoDeVLMSolicitada}

		return w

	}
	panic("Unknown field index")
}

func (r *ProcesoVueltaVLMSchema) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *ProcesoVueltaVLMSchema) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ ProcesoVueltaVLMSchema) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) HintSize(int)                     { panic("Unsupported operation") }
func (_ ProcesoVueltaVLMSchema) Finalize()                        {}

func (_ ProcesoVueltaVLMSchema) AvroCRC64Fingerprint() []byte {
	return []byte(ProcesoVueltaVLMSchemaAvroCRC64Fingerprint)
}

func (r ProcesoVueltaVLMSchema) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["NovedadDePedidoDeVLMSolicitada"], err = json.Marshal(r.NovedadDePedidoDeVLMSolicitada)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ProcesoVueltaVLMSchema) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["NovedadDePedidoDeVLMSolicitada"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NovedadDePedidoDeVLMSolicitada); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NovedadDePedidoDeVLMSolicitada")
	}
	return nil
}
