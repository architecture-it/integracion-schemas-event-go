// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ListaDeBultos.avsc
 */
package AccionesUnificadaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ComponenteHijo struct {
	NumeroHijo *UnionNullString `json:"numeroHijo"`

	Referencias *UnionNullListaDeMetadatos `json:"referencias"`
}

const ComponenteHijoAvroCRC64Fingerprint = "h\x98\x1c\xce\xca\b6\xb8"

func NewComponenteHijo() ComponenteHijo {
	r := ComponenteHijo{}
	r.NumeroHijo = nil
	r.Referencias = nil
	return r
}

func DeserializeComponenteHijo(r io.Reader) (ComponenteHijo, error) {
	t := NewComponenteHijo()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeComponenteHijoFromSchema(r io.Reader, schema string) (ComponenteHijo, error) {
	t := NewComponenteHijo()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeComponenteHijo(r ComponenteHijo, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.NumeroHijo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullListaDeMetadatos(r.Referencias, w)
	if err != nil {
		return err
	}
	return err
}

func (r ComponenteHijo) Serialize(w io.Writer) error {
	return writeComponenteHijo(r, w)
}

func (r ComponenteHijo) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"numeroHijo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"referencias\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"lista\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDeMetadatos\",\"type\":\"record\"}]}],\"name\":\"Andreani.AccionesUnificada.Events.Common.ComponenteHijo\",\"type\":\"record\"}"
}

func (r ComponenteHijo) SchemaName() string {
	return "Andreani.AccionesUnificada.Events.Common.ComponenteHijo"
}

func (_ ComponenteHijo) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ComponenteHijo) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ComponenteHijo) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ComponenteHijo) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ComponenteHijo) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ComponenteHijo) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ComponenteHijo) SetString(v string)   { panic("Unsupported operation") }
func (_ ComponenteHijo) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ComponenteHijo) Get(i int) types.Field {
	switch i {
	case 0:
		r.NumeroHijo = NewUnionNullString()

		return r.NumeroHijo
	case 1:
		r.Referencias = NewUnionNullListaDeMetadatos()

		return r.Referencias
	}
	panic("Unknown field index")
}

func (r *ComponenteHijo) SetDefault(i int) {
	switch i {
	case 0:
		r.NumeroHijo = nil
		return
	case 1:
		r.Referencias = nil
		return
	}
	panic("Unknown field index")
}

func (r *ComponenteHijo) NullField(i int) {
	switch i {
	case 0:
		r.NumeroHijo = nil
		return
	case 1:
		r.Referencias = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ ComponenteHijo) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ComponenteHijo) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ComponenteHijo) HintSize(int)                     { panic("Unsupported operation") }
func (_ ComponenteHijo) Finalize()                        {}

func (_ ComponenteHijo) AvroCRC64Fingerprint() []byte {
	return []byte(ComponenteHijoAvroCRC64Fingerprint)
}

func (r ComponenteHijo) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["numeroHijo"], err = json.Marshal(r.NumeroHijo)
	if err != nil {
		return nil, err
	}
	output["referencias"], err = json.Marshal(r.Referencias)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ComponenteHijo) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["numeroHijo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroHijo); err != nil {
			return err
		}
	} else {
		r.NumeroHijo = NewUnionNullString()

		r.NumeroHijo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["referencias"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Referencias); err != nil {
			return err
		}
	} else {
		r.Referencias = NewUnionNullListaDeMetadatos()

		r.Referencias = nil
	}
	return nil
}
