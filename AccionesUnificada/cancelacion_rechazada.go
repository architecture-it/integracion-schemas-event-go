// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     CancelacionRechazada.avsc
 */
package AccionesUnificadaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CancelacionRechazada struct {
	NumeroAndreani string `json:"numeroAndreani"`

	Componentes *UnionNullArrayString `json:"componentes"`

	Razon string `json:"razon"`
}

const CancelacionRechazadaAvroCRC64Fingerprint = "#r\xfb\xdd∆ï\xa0\x11"

func NewCancelacionRechazada() CancelacionRechazada {
	r := CancelacionRechazada{}
	r.Componentes = nil
	return r
}

func DeserializeCancelacionRechazada(r io.Reader) (CancelacionRechazada, error) {
	t := NewCancelacionRechazada()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCancelacionRechazadaFromSchema(r io.Reader, schema string) (CancelacionRechazada, error) {
	t := NewCancelacionRechazada()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCancelacionRechazada(r CancelacionRechazada, w io.Writer) error {
	var err error
	err = vm.WriteString(r.NumeroAndreani, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayString(r.Componentes, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Razon, w)
	if err != nil {
		return err
	}
	return err
}

func (r CancelacionRechazada) Serialize(w io.Writer) error {
	return writeCancelacionRechazada(r, w)
}

func (r CancelacionRechazada) Schema() string {
	return "{\"fields\":[{\"name\":\"numeroAndreani\",\"type\":\"string\"},{\"default\":null,\"name\":\"componentes\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]},{\"name\":\"razon\",\"type\":\"string\"}],\"name\":\"Andreani.AccionesUnificada.Events.Record.CancelacionRechazada\",\"type\":\"record\"}"
}

func (r CancelacionRechazada) SchemaName() string {
	return "Andreani.AccionesUnificada.Events.Record.CancelacionRechazada"
}

func (_ CancelacionRechazada) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ CancelacionRechazada) SetInt(v int32)       { panic("Unsupported operation") }
func (_ CancelacionRechazada) SetLong(v int64)      { panic("Unsupported operation") }
func (_ CancelacionRechazada) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ CancelacionRechazada) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ CancelacionRechazada) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ CancelacionRechazada) SetString(v string)   { panic("Unsupported operation") }
func (_ CancelacionRechazada) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *CancelacionRechazada) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.NumeroAndreani}

		return w

	case 1:
		r.Componentes = NewUnionNullArrayString()

		return r.Componentes
	case 2:
		w := types.String{Target: &r.Razon}

		return w

	}
	panic("Unknown field index")
}

func (r *CancelacionRechazada) SetDefault(i int) {
	switch i {
	case 1:
		r.Componentes = nil
		return
	}
	panic("Unknown field index")
}

func (r *CancelacionRechazada) NullField(i int) {
	switch i {
	case 1:
		r.Componentes = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ CancelacionRechazada) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ CancelacionRechazada) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ CancelacionRechazada) HintSize(int)                     { panic("Unsupported operation") }
func (_ CancelacionRechazada) Finalize()                        {}

func (_ CancelacionRechazada) AvroCRC64Fingerprint() []byte {
	return []byte(CancelacionRechazadaAvroCRC64Fingerprint)
}

func (r CancelacionRechazada) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["numeroAndreani"], err = json.Marshal(r.NumeroAndreani)
	if err != nil {
		return nil, err
	}
	output["componentes"], err = json.Marshal(r.Componentes)
	if err != nil {
		return nil, err
	}
	output["razon"], err = json.Marshal(r.Razon)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *CancelacionRechazada) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["numeroAndreani"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroAndreani); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for numeroAndreani")
	}
	val = func() json.RawMessage {
		if v, ok := fields["componentes"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Componentes); err != nil {
			return err
		}
	} else {
		r.Componentes = NewUnionNullArrayString()

		r.Componentes = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["razon"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Razon); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for razon")
	}
	return nil
}
