// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     RescateDevolucionSolicitada.avsc
 */
package AccionesUnificadaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type RescateDevolucionSolicitada struct {
	MotivoDelRescateInterno *UnionNullString `json:"motivoDelRescateInterno"`

	Contrato *UnionNullString `json:"contrato"`

	NumeroDeSucursal *UnionNullString `json:"numeroDeSucursal"`

	NumeroAndreani *UnionNullString `json:"numeroAndreani"`

	CodigoCliente *UnionNullString `json:"codigoCliente"`

	TipoDeRescate *UnionNullString `json:"tipoDeRescate"`
}

const RescateDevolucionSolicitadaAvroCRC64Fingerprint = "\xe0By=\xb6\xd8\xf4\x9c"

func NewRescateDevolucionSolicitada() RescateDevolucionSolicitada {
	r := RescateDevolucionSolicitada{}
	r.MotivoDelRescateInterno = nil
	r.Contrato = nil
	r.NumeroDeSucursal = nil
	r.NumeroAndreani = nil
	r.CodigoCliente = nil
	r.TipoDeRescate = nil
	return r
}

func DeserializeRescateDevolucionSolicitada(r io.Reader) (RescateDevolucionSolicitada, error) {
	t := NewRescateDevolucionSolicitada()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeRescateDevolucionSolicitadaFromSchema(r io.Reader, schema string) (RescateDevolucionSolicitada, error) {
	t := NewRescateDevolucionSolicitada()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeRescateDevolucionSolicitada(r RescateDevolucionSolicitada, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.MotivoDelRescateInterno, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Contrato, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroDeSucursal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroAndreani, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TipoDeRescate, w)
	if err != nil {
		return err
	}
	return err
}

func (r RescateDevolucionSolicitada) Serialize(w io.Writer) error {
	return writeRescateDevolucionSolicitada(r, w)
}

func (r RescateDevolucionSolicitada) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"motivoDelRescateInterno\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"contrato\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numeroDeSucursal\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numeroAndreani\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigoCliente\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"tipoDeRescate\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.AccionesUnificada.Events.Record.RescateDevolucionSolicitada\",\"type\":\"record\"}"
}

func (r RescateDevolucionSolicitada) SchemaName() string {
	return "Andreani.AccionesUnificada.Events.Record.RescateDevolucionSolicitada"
}

func (_ RescateDevolucionSolicitada) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) SetInt(v int32)       { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) SetLong(v int64)      { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) SetString(v string)   { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *RescateDevolucionSolicitada) Get(i int) types.Field {
	switch i {
	case 0:
		r.MotivoDelRescateInterno = NewUnionNullString()

		return r.MotivoDelRescateInterno
	case 1:
		r.Contrato = NewUnionNullString()

		return r.Contrato
	case 2:
		r.NumeroDeSucursal = NewUnionNullString()

		return r.NumeroDeSucursal
	case 3:
		r.NumeroAndreani = NewUnionNullString()

		return r.NumeroAndreani
	case 4:
		r.CodigoCliente = NewUnionNullString()

		return r.CodigoCliente
	case 5:
		r.TipoDeRescate = NewUnionNullString()

		return r.TipoDeRescate
	}
	panic("Unknown field index")
}

func (r *RescateDevolucionSolicitada) SetDefault(i int) {
	switch i {
	case 0:
		r.MotivoDelRescateInterno = nil
		return
	case 1:
		r.Contrato = nil
		return
	case 2:
		r.NumeroDeSucursal = nil
		return
	case 3:
		r.NumeroAndreani = nil
		return
	case 4:
		r.CodigoCliente = nil
		return
	case 5:
		r.TipoDeRescate = nil
		return
	}
	panic("Unknown field index")
}

func (r *RescateDevolucionSolicitada) NullField(i int) {
	switch i {
	case 0:
		r.MotivoDelRescateInterno = nil
		return
	case 1:
		r.Contrato = nil
		return
	case 2:
		r.NumeroDeSucursal = nil
		return
	case 3:
		r.NumeroAndreani = nil
		return
	case 4:
		r.CodigoCliente = nil
		return
	case 5:
		r.TipoDeRescate = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ RescateDevolucionSolicitada) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ RescateDevolucionSolicitada) AppendArray() types.Field { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) HintSize(int)             { panic("Unsupported operation") }
func (_ RescateDevolucionSolicitada) Finalize()                {}

func (_ RescateDevolucionSolicitada) AvroCRC64Fingerprint() []byte {
	return []byte(RescateDevolucionSolicitadaAvroCRC64Fingerprint)
}

func (r RescateDevolucionSolicitada) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["motivoDelRescateInterno"], err = json.Marshal(r.MotivoDelRescateInterno)
	if err != nil {
		return nil, err
	}
	output["contrato"], err = json.Marshal(r.Contrato)
	if err != nil {
		return nil, err
	}
	output["numeroDeSucursal"], err = json.Marshal(r.NumeroDeSucursal)
	if err != nil {
		return nil, err
	}
	output["numeroAndreani"], err = json.Marshal(r.NumeroAndreani)
	if err != nil {
		return nil, err
	}
	output["codigoCliente"], err = json.Marshal(r.CodigoCliente)
	if err != nil {
		return nil, err
	}
	output["tipoDeRescate"], err = json.Marshal(r.TipoDeRescate)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *RescateDevolucionSolicitada) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["motivoDelRescateInterno"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MotivoDelRescateInterno); err != nil {
			return err
		}
	} else {
		r.MotivoDelRescateInterno = NewUnionNullString()

		r.MotivoDelRescateInterno = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["contrato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contrato); err != nil {
			return err
		}
	} else {
		r.Contrato = NewUnionNullString()

		r.Contrato = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["numeroDeSucursal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDeSucursal); err != nil {
			return err
		}
	} else {
		r.NumeroDeSucursal = NewUnionNullString()

		r.NumeroDeSucursal = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["numeroAndreani"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroAndreani); err != nil {
			return err
		}
	} else {
		r.NumeroAndreani = NewUnionNullString()

		r.NumeroAndreani = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["codigoCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoCliente); err != nil {
			return err
		}
	} else {
		r.CodigoCliente = NewUnionNullString()

		r.CodigoCliente = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["tipoDeRescate"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoDeRescate); err != nil {
			return err
		}
	} else {
		r.TipoDeRescate = NewUnionNullString()

		r.TipoDeRescate = nil
	}
	return nil
}
