// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     CambioDeDomicilioSolicitada.avsc
 */
package AccionesUnificadaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CambioDeDomicilioSolicitada struct {
	Contrato *UnionNullString `json:"contrato"`

	NumeroAndreani *UnionNullString `json:"numeroAndreani"`

	NumeroDeEnvio *UnionNullString `json:"numeroDeEnvio"`

	CodigoCliente *UnionNullString `json:"codigoCliente"`

	Destinatario Destinatario `json:"destinatario"`
}

const CambioDeDomicilioSolicitadaAvroCRC64Fingerprint = "\xe4p]\\{\xf1\xb4\x05"

func NewCambioDeDomicilioSolicitada() CambioDeDomicilioSolicitada {
	r := CambioDeDomicilioSolicitada{}
	r.Contrato = nil
	r.NumeroAndreani = nil
	r.NumeroDeEnvio = nil
	r.CodigoCliente = nil
	r.Destinatario = NewDestinatario()

	return r
}

func DeserializeCambioDeDomicilioSolicitada(r io.Reader) (CambioDeDomicilioSolicitada, error) {
	t := NewCambioDeDomicilioSolicitada()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeCambioDeDomicilioSolicitadaFromSchema(r io.Reader, schema string) (CambioDeDomicilioSolicitada, error) {
	t := NewCambioDeDomicilioSolicitada()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeCambioDeDomicilioSolicitada(r CambioDeDomicilioSolicitada, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.Contrato, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroAndreani, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroDeEnvio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoCliente, w)
	if err != nil {
		return err
	}
	err = writeDestinatario(r.Destinatario, w)
	if err != nil {
		return err
	}
	return err
}

func (r CambioDeDomicilioSolicitada) Serialize(w io.Writer) error {
	return writeCambioDeDomicilioSolicitada(r, w)
}

func (r CambioDeDomicilioSolicitada) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"contrato\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numeroAndreani\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numeroDeEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigoCliente\",\"type\":[\"null\",\"string\"]},{\"name\":\"destinatario\",\"type\":{\"fields\":[{\"name\":\"codigoPostal\",\"type\":\"string\"},{\"name\":\"direccion\",\"type\":\"string\"},{\"name\":\"numero\",\"type\":\"string\"},{\"default\":null,\"name\":\"piso\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"departamento\",\"type\":[\"null\",\"string\"]},{\"name\":\"localidad\",\"type\":\"string\"}],\"name\":\"Destinatario\",\"namespace\":\"Andreani.AccionesUnificada.Events.Common\",\"type\":\"record\"}}],\"name\":\"Andreani.AccionesUnificada.Events.Record.CambioDeDomicilioSolicitada\",\"type\":\"record\"}"
}

func (r CambioDeDomicilioSolicitada) SchemaName() string {
	return "Andreani.AccionesUnificada.Events.Record.CambioDeDomicilioSolicitada"
}

func (_ CambioDeDomicilioSolicitada) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) SetInt(v int32)       { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) SetLong(v int64)      { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) SetString(v string)   { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *CambioDeDomicilioSolicitada) Get(i int) types.Field {
	switch i {
	case 0:
		r.Contrato = NewUnionNullString()

		return r.Contrato
	case 1:
		r.NumeroAndreani = NewUnionNullString()

		return r.NumeroAndreani
	case 2:
		r.NumeroDeEnvio = NewUnionNullString()

		return r.NumeroDeEnvio
	case 3:
		r.CodigoCliente = NewUnionNullString()

		return r.CodigoCliente
	case 4:
		r.Destinatario = NewDestinatario()

		w := types.Record{Target: &r.Destinatario}

		return w

	}
	panic("Unknown field index")
}

func (r *CambioDeDomicilioSolicitada) SetDefault(i int) {
	switch i {
	case 0:
		r.Contrato = nil
		return
	case 1:
		r.NumeroAndreani = nil
		return
	case 2:
		r.NumeroDeEnvio = nil
		return
	case 3:
		r.CodigoCliente = nil
		return
	}
	panic("Unknown field index")
}

func (r *CambioDeDomicilioSolicitada) NullField(i int) {
	switch i {
	case 0:
		r.Contrato = nil
		return
	case 1:
		r.NumeroAndreani = nil
		return
	case 2:
		r.NumeroDeEnvio = nil
		return
	case 3:
		r.CodigoCliente = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ CambioDeDomicilioSolicitada) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ CambioDeDomicilioSolicitada) AppendArray() types.Field { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) HintSize(int)             { panic("Unsupported operation") }
func (_ CambioDeDomicilioSolicitada) Finalize()                {}

func (_ CambioDeDomicilioSolicitada) AvroCRC64Fingerprint() []byte {
	return []byte(CambioDeDomicilioSolicitadaAvroCRC64Fingerprint)
}

func (r CambioDeDomicilioSolicitada) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["contrato"], err = json.Marshal(r.Contrato)
	if err != nil {
		return nil, err
	}
	output["numeroAndreani"], err = json.Marshal(r.NumeroAndreani)
	if err != nil {
		return nil, err
	}
	output["numeroDeEnvio"], err = json.Marshal(r.NumeroDeEnvio)
	if err != nil {
		return nil, err
	}
	output["codigoCliente"], err = json.Marshal(r.CodigoCliente)
	if err != nil {
		return nil, err
	}
	output["destinatario"], err = json.Marshal(r.Destinatario)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *CambioDeDomicilioSolicitada) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["contrato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contrato); err != nil {
			return err
		}
	} else {
		r.Contrato = NewUnionNullString()

		r.Contrato = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["numeroAndreani"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroAndreani); err != nil {
			return err
		}
	} else {
		r.NumeroAndreani = NewUnionNullString()

		r.NumeroAndreani = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["numeroDeEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDeEnvio); err != nil {
			return err
		}
	} else {
		r.NumeroDeEnvio = NewUnionNullString()

		r.NumeroDeEnvio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["codigoCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoCliente); err != nil {
			return err
		}
	} else {
		r.CodigoCliente = NewUnionNullString()

		r.CodigoCliente = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["destinatario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Destinatario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for destinatario")
	}
	return nil
}
