// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ListInterface217.avsc
 */
package HCMInterface217Events

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Interface217Data struct {
	Legajo string `json:"Legajo"`

	Monto string `json:"Monto"`

	FechaDesde string `json:"FechaDesde"`

	PeriodoDto string `json:"PeriodoDto"`

	TipoVale string `json:"TipoVale"`

	CodigoMoneda string `json:"CodigoMoneda"`

	Revisado string `json:"Revisado"`

	Autorizado string `json:"Autorizado"`
}

const Interface217DataAvroCRC64Fingerprint = "5\xbdn\xaa\x13Kx\xbe"

func NewInterface217Data() Interface217Data {
	r := Interface217Data{}
	return r
}

func DeserializeInterface217Data(r io.Reader) (Interface217Data, error) {
	t := NewInterface217Data()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeInterface217DataFromSchema(r io.Reader, schema string) (Interface217Data, error) {
	t := NewInterface217Data()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeInterface217Data(r Interface217Data, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Legajo, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Monto, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.FechaDesde, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.PeriodoDto, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.TipoVale, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.CodigoMoneda, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Revisado, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Autorizado, w)
	if err != nil {
		return err
	}
	return err
}

func (r Interface217Data) Serialize(w io.Writer) error {
	return writeInterface217Data(r, w)
}

func (r Interface217Data) Schema() string {
	return "{\"fields\":[{\"name\":\"Legajo\",\"type\":\"string\"},{\"name\":\"Monto\",\"type\":\"string\"},{\"name\":\"FechaDesde\",\"type\":\"string\"},{\"name\":\"PeriodoDto\",\"type\":\"string\"},{\"name\":\"TipoVale\",\"type\":\"string\"},{\"name\":\"CodigoMoneda\",\"type\":\"string\"},{\"name\":\"Revisado\",\"type\":\"string\"},{\"name\":\"Autorizado\",\"type\":\"string\"}],\"name\":\"Andreani.HCMInterface217.Events.Record.Interface217Data\",\"type\":\"record\"}"
}

func (r Interface217Data) SchemaName() string {
	return "Andreani.HCMInterface217.Events.Record.Interface217Data"
}

func (_ Interface217Data) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Interface217Data) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Interface217Data) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Interface217Data) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Interface217Data) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Interface217Data) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Interface217Data) SetString(v string)   { panic("Unsupported operation") }
func (_ Interface217Data) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Interface217Data) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Legajo}

		return w

	case 1:
		w := types.String{Target: &r.Monto}

		return w

	case 2:
		w := types.String{Target: &r.FechaDesde}

		return w

	case 3:
		w := types.String{Target: &r.PeriodoDto}

		return w

	case 4:
		w := types.String{Target: &r.TipoVale}

		return w

	case 5:
		w := types.String{Target: &r.CodigoMoneda}

		return w

	case 6:
		w := types.String{Target: &r.Revisado}

		return w

	case 7:
		w := types.String{Target: &r.Autorizado}

		return w

	}
	panic("Unknown field index")
}

func (r *Interface217Data) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *Interface217Data) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ Interface217Data) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Interface217Data) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Interface217Data) HintSize(int)                     { panic("Unsupported operation") }
func (_ Interface217Data) Finalize()                        {}

func (_ Interface217Data) AvroCRC64Fingerprint() []byte {
	return []byte(Interface217DataAvroCRC64Fingerprint)
}

func (r Interface217Data) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Legajo"], err = json.Marshal(r.Legajo)
	if err != nil {
		return nil, err
	}
	output["Monto"], err = json.Marshal(r.Monto)
	if err != nil {
		return nil, err
	}
	output["FechaDesde"], err = json.Marshal(r.FechaDesde)
	if err != nil {
		return nil, err
	}
	output["PeriodoDto"], err = json.Marshal(r.PeriodoDto)
	if err != nil {
		return nil, err
	}
	output["TipoVale"], err = json.Marshal(r.TipoVale)
	if err != nil {
		return nil, err
	}
	output["CodigoMoneda"], err = json.Marshal(r.CodigoMoneda)
	if err != nil {
		return nil, err
	}
	output["Revisado"], err = json.Marshal(r.Revisado)
	if err != nil {
		return nil, err
	}
	output["Autorizado"], err = json.Marshal(r.Autorizado)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Interface217Data) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Legajo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Legajo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Legajo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Monto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Monto); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Monto")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaDesde"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaDesde); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaDesde")
	}
	val = func() json.RawMessage {
		if v, ok := fields["PeriodoDto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PeriodoDto); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for PeriodoDto")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoVale"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoVale); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TipoVale")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoMoneda"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoMoneda); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoMoneda")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Revisado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Revisado); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Revisado")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Autorizado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Autorizado); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Autorizado")
	}
	return nil
}
