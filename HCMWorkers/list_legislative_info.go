// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ListLegislativeInfo.avsc
 */
package HCMWorkersEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ListLegislativeInfo struct {
	LegislativeInfos []LegislativeInfoData `json:"legislativeInfos"`
}

const ListLegislativeInfoAvroCRC64Fingerprint = "\xec\x11\x99\x05I\x98{Z"

func NewListLegislativeInfo() ListLegislativeInfo {
	r := ListLegislativeInfo{}
	r.LegislativeInfos = make([]LegislativeInfoData, 0)

	return r
}

func DeserializeListLegislativeInfo(r io.Reader) (ListLegislativeInfo, error) {
	t := NewListLegislativeInfo()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeListLegislativeInfoFromSchema(r io.Reader, schema string) (ListLegislativeInfo, error) {
	t := NewListLegislativeInfo()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeListLegislativeInfo(r ListLegislativeInfo, w io.Writer) error {
	var err error
	err = writeArrayLegislativeInfoData(r.LegislativeInfos, w)
	if err != nil {
		return err
	}
	return err
}

func (r ListLegislativeInfo) Serialize(w io.Writer) error {
	return writeListLegislativeInfo(r, w)
}

func (r ListLegislativeInfo) Schema() string {
	return "{\"fields\":[{\"name\":\"legislativeInfos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"PersonLegislativeId\",\"type\":\"long\"},{\"name\":\"EffectiveStartDate\",\"type\":\"string\"},{\"default\":null,\"name\":\"EffectiveEndDate\",\"type\":[\"null\",\"string\"]},{\"name\":\"LegislationCode\",\"type\":\"string\"},{\"name\":\"Gender\",\"type\":\"string\"},{\"default\":null,\"name\":\"MaritalStatus\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"MaritalStatusChangeDate\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"HighestEducationLevel\",\"type\":[\"null\",\"string\"]},{\"name\":\"CreatedBy\",\"type\":\"string\"},{\"name\":\"CreationDate\",\"type\":\"string\"},{\"name\":\"LastUpdatedBy\",\"type\":\"string\"},{\"name\":\"LastUpdateDate\",\"type\":\"string\"},{\"name\":\"links\",\"type\":{\"items\":{\"fields\":[{\"name\":\"rel\",\"type\":\"string\"},{\"name\":\"href\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"kind\",\"type\":\"string\"},{\"default\":null,\"name\":\"properties\",\"type\":[\"null\",{\"fields\":[{\"name\":\"changeIndicator\",\"type\":\"string\"}],\"name\":\"PropertiesData\",\"type\":\"record\"}]}],\"name\":\"LinkData\",\"namespace\":\"Andreani.HCMWorkers.Events.Common\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"LegislativeInfoData\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Andreani.HCMWorkers.Events.Record.ListLegislativeInfo\",\"type\":\"record\"}"
}

func (r ListLegislativeInfo) SchemaName() string {
	return "Andreani.HCMWorkers.Events.Record.ListLegislativeInfo"
}

func (_ ListLegislativeInfo) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ListLegislativeInfo) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ListLegislativeInfo) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ListLegislativeInfo) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ListLegislativeInfo) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ListLegislativeInfo) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ListLegislativeInfo) SetString(v string)   { panic("Unsupported operation") }
func (_ ListLegislativeInfo) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ListLegislativeInfo) Get(i int) types.Field {
	switch i {
	case 0:
		r.LegislativeInfos = make([]LegislativeInfoData, 0)

		w := ArrayLegislativeInfoDataWrapper{Target: &r.LegislativeInfos}

		return w

	}
	panic("Unknown field index")
}

func (r *ListLegislativeInfo) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *ListLegislativeInfo) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ ListLegislativeInfo) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ListLegislativeInfo) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ListLegislativeInfo) HintSize(int)                     { panic("Unsupported operation") }
func (_ ListLegislativeInfo) Finalize()                        {}

func (_ ListLegislativeInfo) AvroCRC64Fingerprint() []byte {
	return []byte(ListLegislativeInfoAvroCRC64Fingerprint)
}

func (r ListLegislativeInfo) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["legislativeInfos"], err = json.Marshal(r.LegislativeInfos)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ListLegislativeInfo) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["legislativeInfos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LegislativeInfos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for legislativeInfos")
	}
	return nil
}
