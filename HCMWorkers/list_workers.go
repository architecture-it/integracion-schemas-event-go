// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ListWorkers.avsc
 */
package HCMWorkersEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ListWorkers struct {
	Workers []WorkerData `json:"workers"`
}

const ListWorkersAvroCRC64Fingerprint = "\xc8\xfbA8\xd1+\xe8R"

func NewListWorkers() ListWorkers {
	r := ListWorkers{}
	r.Workers = make([]WorkerData, 0)

	return r
}

func DeserializeListWorkers(r io.Reader) (ListWorkers, error) {
	t := NewListWorkers()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeListWorkersFromSchema(r io.Reader, schema string) (ListWorkers, error) {
	t := NewListWorkers()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeListWorkers(r ListWorkers, w io.Writer) error {
	var err error
	err = writeArrayWorkerData(r.Workers, w)
	if err != nil {
		return err
	}
	return err
}

func (r ListWorkers) Serialize(w io.Writer) error {
	return writeListWorkers(r, w)
}

func (r ListWorkers) Schema() string {
	return "{\"fields\":[{\"name\":\"workers\",\"type\":{\"items\":{\"fields\":[{\"name\":\"PersonId\",\"type\":\"long\"},{\"name\":\"PersonNumber\",\"type\":\"string\"},{\"default\":null,\"name\":\"CorrespondenceLanguage\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"BloodType\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DateOfBirth\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DateOfDeath\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"CountryOfBirth\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"RegionOfBirth\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"TownOfBirth\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ApplicantNumber\",\"type\":[\"null\",\"string\"]},{\"name\":\"CreatedBy\",\"type\":\"string\"},{\"name\":\"CreationDate\",\"type\":\"string\"},{\"name\":\"LastUpdatedBy\",\"type\":\"string\"},{\"name\":\"LastUpdateDate\",\"type\":\"string\"},{\"name\":\"links\",\"type\":{\"items\":{\"fields\":[{\"name\":\"rel\",\"type\":\"string\"},{\"name\":\"href\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"kind\",\"type\":\"string\"},{\"default\":null,\"name\":\"properties\",\"type\":[\"null\",{\"fields\":[{\"name\":\"changeIndicator\",\"type\":\"string\"}],\"name\":\"PropertiesData\",\"type\":\"record\"}]}],\"name\":\"LinkData\",\"namespace\":\"Andreani.HCMWorkers.Events.Common\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"WorkerData\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Andreani.HCMWorkers.Events.Record.ListWorkers\",\"type\":\"record\"}"
}

func (r ListWorkers) SchemaName() string {
	return "Andreani.HCMWorkers.Events.Record.ListWorkers"
}

func (_ ListWorkers) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ListWorkers) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ListWorkers) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ListWorkers) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ListWorkers) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ListWorkers) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ListWorkers) SetString(v string)   { panic("Unsupported operation") }
func (_ ListWorkers) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ListWorkers) Get(i int) types.Field {
	switch i {
	case 0:
		r.Workers = make([]WorkerData, 0)

		w := ArrayWorkerDataWrapper{Target: &r.Workers}

		return w

	}
	panic("Unknown field index")
}

func (r *ListWorkers) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *ListWorkers) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ ListWorkers) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ListWorkers) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ListWorkers) HintSize(int)                     { panic("Unsupported operation") }
func (_ ListWorkers) Finalize()                        {}

func (_ ListWorkers) AvroCRC64Fingerprint() []byte {
	return []byte(ListWorkersAvroCRC64Fingerprint)
}

func (r ListWorkers) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["workers"], err = json.Marshal(r.Workers)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ListWorkers) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["workers"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Workers); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for workers")
	}
	return nil
}
