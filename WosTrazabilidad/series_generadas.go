// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     SeriesGeneradas.avsc
 */
package WosTrazabilidadEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SeriesGeneradas struct {
	TareaSeriesGeneradas TareaConSeriesGeneradas `json:"TareaSeriesGeneradas"`
}

const SeriesGeneradasAvroCRC64Fingerprint = "NFG3I\xaf!\xf2"

func NewSeriesGeneradas() SeriesGeneradas {
	r := SeriesGeneradas{}
	r.TareaSeriesGeneradas = NewTareaConSeriesGeneradas()

	return r
}

func DeserializeSeriesGeneradas(r io.Reader) (SeriesGeneradas, error) {
	t := NewSeriesGeneradas()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeSeriesGeneradasFromSchema(r io.Reader, schema string) (SeriesGeneradas, error) {
	t := NewSeriesGeneradas()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeSeriesGeneradas(r SeriesGeneradas, w io.Writer) error {
	var err error
	err = writeTareaConSeriesGeneradas(r.TareaSeriesGeneradas, w)
	if err != nil {
		return err
	}
	return err
}

func (r SeriesGeneradas) Serialize(w io.Writer) error {
	return writeSeriesGeneradas(r, w)
}

func (r SeriesGeneradas) Schema() string {
	return "{\"fields\":[{\"name\":\"TareaSeriesGeneradas\",\"type\":{\"fields\":[{\"default\":null,\"name\":\"nroTarea\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"tipoDeTarea\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"instancia\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"almacen\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"sku\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteInterno\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteCajita\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"cantidad\",\"type\":[\"null\",\"int\"]},{\"default\":null,\"name\":\"gtin\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"loteFechaVencimiento\",\"type\":[\"null\",\"string\"]},{\"name\":\"Series\",\"type\":{\"items\":{\"fields\":[{\"name\":\"serie\",\"type\":\"string\"},{\"default\":null,\"name\":\"nroAgrupadora\",\"type\":[\"null\",\"string\"]}],\"name\":\"Series\",\"namespace\":\"Andreani.WosTrazabilidad.Events.AnmatCommon\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"TareaConSeriesGeneradas\",\"namespace\":\"Andreani.WosTrazabilidad.Events.WosTrazaTareaSeriesGeneradas\",\"type\":\"record\"}}],\"name\":\"Andreani.WosTrazabilidad.Events.Record.SeriesGeneradas\",\"type\":\"record\"}"
}

func (r SeriesGeneradas) SchemaName() string {
	return "Andreani.WosTrazabilidad.Events.Record.SeriesGeneradas"
}

func (_ SeriesGeneradas) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ SeriesGeneradas) SetInt(v int32)       { panic("Unsupported operation") }
func (_ SeriesGeneradas) SetLong(v int64)      { panic("Unsupported operation") }
func (_ SeriesGeneradas) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ SeriesGeneradas) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ SeriesGeneradas) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ SeriesGeneradas) SetString(v string)   { panic("Unsupported operation") }
func (_ SeriesGeneradas) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *SeriesGeneradas) Get(i int) types.Field {
	switch i {
	case 0:
		r.TareaSeriesGeneradas = NewTareaConSeriesGeneradas()

		w := types.Record{Target: &r.TareaSeriesGeneradas}

		return w

	}
	panic("Unknown field index")
}

func (r *SeriesGeneradas) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *SeriesGeneradas) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ SeriesGeneradas) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ SeriesGeneradas) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ SeriesGeneradas) HintSize(int)                     { panic("Unsupported operation") }
func (_ SeriesGeneradas) Finalize()                        {}

func (_ SeriesGeneradas) AvroCRC64Fingerprint() []byte {
	return []byte(SeriesGeneradasAvroCRC64Fingerprint)
}

func (r SeriesGeneradas) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["TareaSeriesGeneradas"], err = json.Marshal(r.TareaSeriesGeneradas)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *SeriesGeneradas) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["TareaSeriesGeneradas"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TareaSeriesGeneradas); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TareaSeriesGeneradas")
	}
	return nil
}
