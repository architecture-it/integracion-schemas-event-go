// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     WosTrazaAnmat.avsc
 */
package WosTrazabilidadEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type RespuestaAnmat struct {
	CodigoTransaccion *UnionNullString `json:"codigoTransaccion"`

	Resultado *UnionNullBool `json:"resultado"`

	Errores *UnionNullArrayString `json:"errores"`
}

const RespuestaAnmatAvroCRC64Fingerprint = "\x89x1\xc3-\x7f\xe3\xc0"

func NewRespuestaAnmat() RespuestaAnmat {
	r := RespuestaAnmat{}
	r.CodigoTransaccion = nil
	r.Resultado = nil
	r.Errores = nil
	return r
}

func DeserializeRespuestaAnmat(r io.Reader) (RespuestaAnmat, error) {
	t := NewRespuestaAnmat()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeRespuestaAnmatFromSchema(r io.Reader, schema string) (RespuestaAnmat, error) {
	t := NewRespuestaAnmat()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeRespuestaAnmat(r RespuestaAnmat, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.CodigoTransaccion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullBool(r.Resultado, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayString(r.Errores, w)
	if err != nil {
		return err
	}
	return err
}

func (r RespuestaAnmat) Serialize(w io.Writer) error {
	return writeRespuestaAnmat(r, w)
}

func (r RespuestaAnmat) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"codigoTransaccion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"resultado\",\"type\":[\"null\",\"boolean\"]},{\"default\":null,\"name\":\"errores\",\"type\":[\"null\",{\"items\":\"string\",\"type\":\"array\"}]}],\"name\":\"Andreani.WosTrazabilidad.Events.AnmatCommon.RespuestaAnmat\",\"type\":\"record\"}"
}

func (r RespuestaAnmat) SchemaName() string {
	return "Andreani.WosTrazabilidad.Events.AnmatCommon.RespuestaAnmat"
}

func (_ RespuestaAnmat) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ RespuestaAnmat) SetInt(v int32)       { panic("Unsupported operation") }
func (_ RespuestaAnmat) SetLong(v int64)      { panic("Unsupported operation") }
func (_ RespuestaAnmat) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ RespuestaAnmat) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ RespuestaAnmat) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ RespuestaAnmat) SetString(v string)   { panic("Unsupported operation") }
func (_ RespuestaAnmat) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *RespuestaAnmat) Get(i int) types.Field {
	switch i {
	case 0:
		r.CodigoTransaccion = NewUnionNullString()

		return r.CodigoTransaccion
	case 1:
		r.Resultado = NewUnionNullBool()

		return r.Resultado
	case 2:
		r.Errores = NewUnionNullArrayString()

		return r.Errores
	}
	panic("Unknown field index")
}

func (r *RespuestaAnmat) SetDefault(i int) {
	switch i {
	case 0:
		r.CodigoTransaccion = nil
		return
	case 1:
		r.Resultado = nil
		return
	case 2:
		r.Errores = nil
		return
	}
	panic("Unknown field index")
}

func (r *RespuestaAnmat) NullField(i int) {
	switch i {
	case 0:
		r.CodigoTransaccion = nil
		return
	case 1:
		r.Resultado = nil
		return
	case 2:
		r.Errores = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ RespuestaAnmat) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ RespuestaAnmat) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ RespuestaAnmat) HintSize(int)                     { panic("Unsupported operation") }
func (_ RespuestaAnmat) Finalize()                        {}

func (_ RespuestaAnmat) AvroCRC64Fingerprint() []byte {
	return []byte(RespuestaAnmatAvroCRC64Fingerprint)
}

func (r RespuestaAnmat) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["codigoTransaccion"], err = json.Marshal(r.CodigoTransaccion)
	if err != nil {
		return nil, err
	}
	output["resultado"], err = json.Marshal(r.Resultado)
	if err != nil {
		return nil, err
	}
	output["errores"], err = json.Marshal(r.Errores)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *RespuestaAnmat) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["codigoTransaccion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoTransaccion); err != nil {
			return err
		}
	} else {
		r.CodigoTransaccion = NewUnionNullString()

		r.CodigoTransaccion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["resultado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Resultado); err != nil {
			return err
		}
	} else {
		r.Resultado = NewUnionNullBool()

		r.Resultado = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["errores"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Errores); err != nil {
			return err
		}
	} else {
		r.Errores = NewUnionNullArrayString()

		r.Errores = nil
	}
	return nil
}
