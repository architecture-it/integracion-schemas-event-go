// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     TransactionEvent.avsc
 */
package AltaOrdenEnvioEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Componentes struct {
	NumeroAgrupador *UnionNullString `json:"numeroAgrupador"`

	ComponentesHijos *UnionNullArrayComponenteHijo `json:"componentesHijos"`
}

const ComponentesAvroCRC64Fingerprint = "{\xe3\f\x9c9\xc4\x13u"

func NewComponentes() Componentes {
	r := Componentes{}
	r.NumeroAgrupador = nil
	r.ComponentesHijos = nil
	return r
}

func DeserializeComponentes(r io.Reader) (Componentes, error) {
	t := NewComponentes()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeComponentesFromSchema(r io.Reader, schema string) (Componentes, error) {
	t := NewComponentes()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeComponentes(r Componentes, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.NumeroAgrupador, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayComponenteHijo(r.ComponentesHijos, w)
	if err != nil {
		return err
	}
	return err
}

func (r Componentes) Serialize(w io.Writer) error {
	return writeComponentes(r, w)
}

func (r Componentes) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"numeroAgrupador\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"componentesHijos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"default\":null,\"name\":\"numeroHijo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"referencias\",\"type\":[\"null\",{\"fields\":[{\"name\":\"metadatos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDePropiedades\",\"type\":\"record\"}]}],\"name\":\"ComponenteHijo\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"Andreani.AltaOrdenEnvio.Events.Common.Componentes\",\"type\":\"record\"}"
}

func (r Componentes) SchemaName() string {
	return "Andreani.AltaOrdenEnvio.Events.Common.Componentes"
}

func (_ Componentes) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Componentes) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Componentes) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Componentes) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Componentes) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Componentes) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Componentes) SetString(v string)   { panic("Unsupported operation") }
func (_ Componentes) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Componentes) Get(i int) types.Field {
	switch i {
	case 0:
		r.NumeroAgrupador = NewUnionNullString()

		return r.NumeroAgrupador
	case 1:
		r.ComponentesHijos = NewUnionNullArrayComponenteHijo()

		return r.ComponentesHijos
	}
	panic("Unknown field index")
}

func (r *Componentes) SetDefault(i int) {
	switch i {
	case 0:
		r.NumeroAgrupador = nil
		return
	case 1:
		r.ComponentesHijos = nil
		return
	}
	panic("Unknown field index")
}

func (r *Componentes) NullField(i int) {
	switch i {
	case 0:
		r.NumeroAgrupador = nil
		return
	case 1:
		r.ComponentesHijos = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Componentes) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Componentes) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Componentes) HintSize(int)                     { panic("Unsupported operation") }
func (_ Componentes) Finalize()                        {}

func (_ Componentes) AvroCRC64Fingerprint() []byte {
	return []byte(ComponentesAvroCRC64Fingerprint)
}

func (r Componentes) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["numeroAgrupador"], err = json.Marshal(r.NumeroAgrupador)
	if err != nil {
		return nil, err
	}
	output["componentesHijos"], err = json.Marshal(r.ComponentesHijos)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Componentes) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["numeroAgrupador"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroAgrupador); err != nil {
			return err
		}
	} else {
		r.NumeroAgrupador = NewUnionNullString()

		r.NumeroAgrupador = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["componentesHijos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ComponentesHijos); err != nil {
			return err
		}
	} else {
		r.ComponentesHijos = NewUnionNullArrayComponenteHijo()

		r.ComponentesHijos = nil
	}
	return nil
}
