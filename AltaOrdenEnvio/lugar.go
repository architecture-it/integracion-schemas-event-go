// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     LugarDeRetirOEntrega.avsc
 */
package AltaOrdenEnvioEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Lugar struct {
	Postal *UnionNullDireccionPostal `json:"postal"`

	Sucursal *UnionNullSucursal `json:"sucursal"`

	Coordenadas *UnionNullGeoCoordenada `json:"coordenadas"`
}

const LugarAvroCRC64Fingerprint = "\x9d\xbbZ\x9eI\an\x88"

func NewLugar() Lugar {
	r := Lugar{}
	return r
}

func DeserializeLugar(r io.Reader) (Lugar, error) {
	t := NewLugar()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeLugarFromSchema(r io.Reader, schema string) (Lugar, error) {
	t := NewLugar()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeLugar(r Lugar, w io.Writer) error {
	var err error
	err = writeUnionNullDireccionPostal(r.Postal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullSucursal(r.Sucursal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullGeoCoordenada(r.Coordenadas, w)
	if err != nil {
		return err
	}
	return err
}

func (r Lugar) Serialize(w io.Writer) error {
	return writeLugar(r, w)
}

func (r Lugar) Schema() string {
	return "{\"fields\":[{\"name\":\"postal\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"localidad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"pais\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigoPostal\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"componentesDeDireccion\",\"type\":[\"null\",{\"fields\":[{\"name\":\"metadatos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDePropiedades\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"casillaDeCorreo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"calle\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numero\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"piso\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"departamento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"region\",\"type\":[\"null\",\"string\"]}],\"name\":\"DireccionPostal\",\"type\":\"record\"}]},{\"name\":\"sucursal\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"ID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"nomenclatura\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"descripcion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"direccion\",\"type\":[\"null\",\"Andreani.AltaOrdenEnvio.Events.Common.DireccionPostal\"]},{\"default\":null,\"name\":\"datosAdicionales\",\"type\":[\"null\",\"Andreani.AltaOrdenEnvio.Events.Common.ListaDePropiedades\"]},{\"default\":null,\"name\":\"listaDeTelefonos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"listaDeTelefonos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"tipo\",\"type\":\"string\"},{\"name\":\"numero\",\"type\":\"string\"}],\"name\":\"Telefono\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDeTelefonos\",\"type\":\"record\"}]}],\"name\":\"Sucursal\",\"type\":\"record\"}]},{\"name\":\"coordenadas\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"latitud\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"longitud\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"elevacion\",\"type\":[\"null\",\"double\"]}],\"name\":\"GeoCoordenada\",\"type\":\"record\"}]}],\"name\":\"Andreani.AltaOrdenEnvio.Events.Common.Lugar\",\"type\":\"record\"}"
}

func (r Lugar) SchemaName() string {
	return "Andreani.AltaOrdenEnvio.Events.Common.Lugar"
}

func (_ Lugar) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Lugar) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Lugar) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Lugar) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Lugar) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Lugar) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Lugar) SetString(v string)   { panic("Unsupported operation") }
func (_ Lugar) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Lugar) Get(i int) types.Field {
	switch i {
	case 0:
		r.Postal = NewUnionNullDireccionPostal()

		return r.Postal
	case 1:
		r.Sucursal = NewUnionNullSucursal()

		return r.Sucursal
	case 2:
		r.Coordenadas = NewUnionNullGeoCoordenada()

		return r.Coordenadas
	}
	panic("Unknown field index")
}

func (r *Lugar) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *Lugar) NullField(i int) {
	switch i {
	case 0:
		r.Postal = nil
		return
	case 1:
		r.Sucursal = nil
		return
	case 2:
		r.Coordenadas = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Lugar) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Lugar) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Lugar) HintSize(int)                     { panic("Unsupported operation") }
func (_ Lugar) Finalize()                        {}

func (_ Lugar) AvroCRC64Fingerprint() []byte {
	return []byte(LugarAvroCRC64Fingerprint)
}

func (r Lugar) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["postal"], err = json.Marshal(r.Postal)
	if err != nil {
		return nil, err
	}
	output["sucursal"], err = json.Marshal(r.Sucursal)
	if err != nil {
		return nil, err
	}
	output["coordenadas"], err = json.Marshal(r.Coordenadas)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Lugar) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["postal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Postal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for postal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sucursal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sucursal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sucursal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["coordenadas"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Coordenadas); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for coordenadas")
	}
	return nil
}
