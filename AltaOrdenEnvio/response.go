// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     TransactionEvent.avsc
 */
package AltaOrdenEnvioEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Response struct {
	Estado *UnionNullString `json:"estado"`

	Motivo *UnionNullString `json:"motivo"`

	Tipo *UnionNullString `json:"tipo"`

	SucursalDeDistribucion *UnionNullSucursalResponse `json:"sucursalDeDistribucion"`

	SucursalDeImposicion *UnionNullSucursalResponse `json:"sucursalDeImposicion"`

	SucursalDeRendicion *UnionNullSucursalResponse `json:"sucursalDeRendicion"`

	SucursalAbastecedora *UnionNullSucursalResponse `json:"sucursalAbastecedora"`

	FechaCreacion *UnionNullString `json:"fechaCreacion"`

	ZonaDeReparto *UnionNullString `json:"zonaDeReparto"`

	NumeroDePermisionaria *UnionNullString `json:"numeroDePermisionaria"`

	DescripcionServicio *UnionNullString `json:"descripcionServicio"`

	EtiquetaRemito *UnionNullString `json:"etiquetaRemito"`

	Bultos *UnionNullArrayBultoResponse `json:"Bultos"`

	FechaEstimadaDeEntrega *UnionNullString `json:"FechaEstimadaDeEntrega"`

	HuellaDeCarbono *UnionNullString `json:"huellaDeCarbono"`

	GastoEnergetico *UnionNullString `json:"gastoEnergetico"`

	AgrupadorDeBultos *UnionNullString `json:"agrupadorDeBultos"`

	EtiquetasPorAgrupador *UnionNullString `json:"etiquetasPorAgrupador"`

	EtiquetasDocumentoDeCambio *UnionNullString `json:"etiquetasDocumentoDeCambio"`
}

const ResponseAvroCRC64Fingerprint = "\xf6e\xaa\xab\x17\xa2\x80\x0e"

func NewResponse() Response {
	r := Response{}
	r.Estado = nil
	r.Motivo = nil
	r.Tipo = nil
	r.SucursalDeDistribucion = nil
	r.SucursalDeImposicion = nil
	r.SucursalDeRendicion = nil
	r.SucursalAbastecedora = nil
	r.FechaCreacion = nil
	r.ZonaDeReparto = nil
	r.NumeroDePermisionaria = nil
	r.DescripcionServicio = nil
	r.EtiquetaRemito = nil
	r.FechaEstimadaDeEntrega = nil
	r.HuellaDeCarbono = nil
	r.GastoEnergetico = nil
	r.AgrupadorDeBultos = nil
	r.EtiquetasPorAgrupador = nil
	r.EtiquetasDocumentoDeCambio = nil
	return r
}

func DeserializeResponse(r io.Reader) (Response, error) {
	t := NewResponse()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeResponseFromSchema(r io.Reader, schema string) (Response, error) {
	t := NewResponse()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeResponse(r Response, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.Estado, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Motivo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Tipo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullSucursalResponse(r.SucursalDeDistribucion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullSucursalResponse(r.SucursalDeImposicion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullSucursalResponse(r.SucursalDeRendicion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullSucursalResponse(r.SucursalAbastecedora, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaCreacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ZonaDeReparto, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroDePermisionaria, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DescripcionServicio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EtiquetaRemito, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayBultoResponse(r.Bultos, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaEstimadaDeEntrega, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.HuellaDeCarbono, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.GastoEnergetico, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AgrupadorDeBultos, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EtiquetasPorAgrupador, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EtiquetasDocumentoDeCambio, w)
	if err != nil {
		return err
	}
	return err
}

func (r Response) Serialize(w io.Writer) error {
	return writeResponse(r, w)
}

func (r Response) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"estado\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"motivo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"tipo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"sucursalDeDistribucion\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"ID\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"nomenclatura\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"descripcion\",\"type\":[\"null\",\"string\"]}],\"name\":\"SucursalResponse\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"sucursalDeImposicion\",\"type\":[\"null\",\"Andreani.AltaOrdenEnvio.Events.Common.SucursalResponse\"]},{\"default\":null,\"name\":\"sucursalDeRendicion\",\"type\":[\"null\",\"Andreani.AltaOrdenEnvio.Events.Common.SucursalResponse\"]},{\"default\":null,\"name\":\"sucursalAbastecedora\",\"type\":[\"null\",\"Andreani.AltaOrdenEnvio.Events.Common.SucursalResponse\"]},{\"default\":null,\"name\":\"fechaCreacion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"zonaDeReparto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numeroDePermisionaria\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"descripcionServicio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"etiquetaRemito\",\"type\":[\"null\",\"string\"]},{\"name\":\"Bultos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"NumeroDeBulto\",\"type\":\"string\"},{\"name\":\"NumeroDeEnvio\",\"type\":\"string\"},{\"name\":\"Totalizador\",\"type\":\"string\"},{\"default\":null,\"name\":\"Linking\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"BultoResponse\",\"type\":\"record\"},\"type\":\"array\"}]},{\"default\":null,\"name\":\"FechaEstimadaDeEntrega\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"huellaDeCarbono\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"gastoEnergetico\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"agrupadorDeBultos\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"etiquetasPorAgrupador\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"etiquetasDocumentoDeCambio\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.AltaOrdenEnvio.Events.Common.Response\",\"type\":\"record\"}"
}

func (r Response) SchemaName() string {
	return "Andreani.AltaOrdenEnvio.Events.Common.Response"
}

func (_ Response) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ Response) SetInt(v int32)       { panic("Unsupported operation") }
func (_ Response) SetLong(v int64)      { panic("Unsupported operation") }
func (_ Response) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ Response) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ Response) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ Response) SetString(v string)   { panic("Unsupported operation") }
func (_ Response) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *Response) Get(i int) types.Field {
	switch i {
	case 0:
		r.Estado = NewUnionNullString()

		return r.Estado
	case 1:
		r.Motivo = NewUnionNullString()

		return r.Motivo
	case 2:
		r.Tipo = NewUnionNullString()

		return r.Tipo
	case 3:
		r.SucursalDeDistribucion = NewUnionNullSucursalResponse()

		return r.SucursalDeDistribucion
	case 4:
		r.SucursalDeImposicion = NewUnionNullSucursalResponse()

		return r.SucursalDeImposicion
	case 5:
		r.SucursalDeRendicion = NewUnionNullSucursalResponse()

		return r.SucursalDeRendicion
	case 6:
		r.SucursalAbastecedora = NewUnionNullSucursalResponse()

		return r.SucursalAbastecedora
	case 7:
		r.FechaCreacion = NewUnionNullString()

		return r.FechaCreacion
	case 8:
		r.ZonaDeReparto = NewUnionNullString()

		return r.ZonaDeReparto
	case 9:
		r.NumeroDePermisionaria = NewUnionNullString()

		return r.NumeroDePermisionaria
	case 10:
		r.DescripcionServicio = NewUnionNullString()

		return r.DescripcionServicio
	case 11:
		r.EtiquetaRemito = NewUnionNullString()

		return r.EtiquetaRemito
	case 12:
		r.Bultos = NewUnionNullArrayBultoResponse()

		return r.Bultos
	case 13:
		r.FechaEstimadaDeEntrega = NewUnionNullString()

		return r.FechaEstimadaDeEntrega
	case 14:
		r.HuellaDeCarbono = NewUnionNullString()

		return r.HuellaDeCarbono
	case 15:
		r.GastoEnergetico = NewUnionNullString()

		return r.GastoEnergetico
	case 16:
		r.AgrupadorDeBultos = NewUnionNullString()

		return r.AgrupadorDeBultos
	case 17:
		r.EtiquetasPorAgrupador = NewUnionNullString()

		return r.EtiquetasPorAgrupador
	case 18:
		r.EtiquetasDocumentoDeCambio = NewUnionNullString()

		return r.EtiquetasDocumentoDeCambio
	}
	panic("Unknown field index")
}

func (r *Response) SetDefault(i int) {
	switch i {
	case 0:
		r.Estado = nil
		return
	case 1:
		r.Motivo = nil
		return
	case 2:
		r.Tipo = nil
		return
	case 3:
		r.SucursalDeDistribucion = nil
		return
	case 4:
		r.SucursalDeImposicion = nil
		return
	case 5:
		r.SucursalDeRendicion = nil
		return
	case 6:
		r.SucursalAbastecedora = nil
		return
	case 7:
		r.FechaCreacion = nil
		return
	case 8:
		r.ZonaDeReparto = nil
		return
	case 9:
		r.NumeroDePermisionaria = nil
		return
	case 10:
		r.DescripcionServicio = nil
		return
	case 11:
		r.EtiquetaRemito = nil
		return
	case 13:
		r.FechaEstimadaDeEntrega = nil
		return
	case 14:
		r.HuellaDeCarbono = nil
		return
	case 15:
		r.GastoEnergetico = nil
		return
	case 16:
		r.AgrupadorDeBultos = nil
		return
	case 17:
		r.EtiquetasPorAgrupador = nil
		return
	case 18:
		r.EtiquetasDocumentoDeCambio = nil
		return
	}
	panic("Unknown field index")
}

func (r *Response) NullField(i int) {
	switch i {
	case 0:
		r.Estado = nil
		return
	case 1:
		r.Motivo = nil
		return
	case 2:
		r.Tipo = nil
		return
	case 3:
		r.SucursalDeDistribucion = nil
		return
	case 4:
		r.SucursalDeImposicion = nil
		return
	case 5:
		r.SucursalDeRendicion = nil
		return
	case 6:
		r.SucursalAbastecedora = nil
		return
	case 7:
		r.FechaCreacion = nil
		return
	case 8:
		r.ZonaDeReparto = nil
		return
	case 9:
		r.NumeroDePermisionaria = nil
		return
	case 10:
		r.DescripcionServicio = nil
		return
	case 11:
		r.EtiquetaRemito = nil
		return
	case 12:
		r.Bultos = nil
		return
	case 13:
		r.FechaEstimadaDeEntrega = nil
		return
	case 14:
		r.HuellaDeCarbono = nil
		return
	case 15:
		r.GastoEnergetico = nil
		return
	case 16:
		r.AgrupadorDeBultos = nil
		return
	case 17:
		r.EtiquetasPorAgrupador = nil
		return
	case 18:
		r.EtiquetasDocumentoDeCambio = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ Response) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ Response) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ Response) HintSize(int)                     { panic("Unsupported operation") }
func (_ Response) Finalize()                        {}

func (_ Response) AvroCRC64Fingerprint() []byte {
	return []byte(ResponseAvroCRC64Fingerprint)
}

func (r Response) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["estado"], err = json.Marshal(r.Estado)
	if err != nil {
		return nil, err
	}
	output["motivo"], err = json.Marshal(r.Motivo)
	if err != nil {
		return nil, err
	}
	output["tipo"], err = json.Marshal(r.Tipo)
	if err != nil {
		return nil, err
	}
	output["sucursalDeDistribucion"], err = json.Marshal(r.SucursalDeDistribucion)
	if err != nil {
		return nil, err
	}
	output["sucursalDeImposicion"], err = json.Marshal(r.SucursalDeImposicion)
	if err != nil {
		return nil, err
	}
	output["sucursalDeRendicion"], err = json.Marshal(r.SucursalDeRendicion)
	if err != nil {
		return nil, err
	}
	output["sucursalAbastecedora"], err = json.Marshal(r.SucursalAbastecedora)
	if err != nil {
		return nil, err
	}
	output["fechaCreacion"], err = json.Marshal(r.FechaCreacion)
	if err != nil {
		return nil, err
	}
	output["zonaDeReparto"], err = json.Marshal(r.ZonaDeReparto)
	if err != nil {
		return nil, err
	}
	output["numeroDePermisionaria"], err = json.Marshal(r.NumeroDePermisionaria)
	if err != nil {
		return nil, err
	}
	output["descripcionServicio"], err = json.Marshal(r.DescripcionServicio)
	if err != nil {
		return nil, err
	}
	output["etiquetaRemito"], err = json.Marshal(r.EtiquetaRemito)
	if err != nil {
		return nil, err
	}
	output["Bultos"], err = json.Marshal(r.Bultos)
	if err != nil {
		return nil, err
	}
	output["FechaEstimadaDeEntrega"], err = json.Marshal(r.FechaEstimadaDeEntrega)
	if err != nil {
		return nil, err
	}
	output["huellaDeCarbono"], err = json.Marshal(r.HuellaDeCarbono)
	if err != nil {
		return nil, err
	}
	output["gastoEnergetico"], err = json.Marshal(r.GastoEnergetico)
	if err != nil {
		return nil, err
	}
	output["agrupadorDeBultos"], err = json.Marshal(r.AgrupadorDeBultos)
	if err != nil {
		return nil, err
	}
	output["etiquetasPorAgrupador"], err = json.Marshal(r.EtiquetasPorAgrupador)
	if err != nil {
		return nil, err
	}
	output["etiquetasDocumentoDeCambio"], err = json.Marshal(r.EtiquetasDocumentoDeCambio)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *Response) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["estado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Estado); err != nil {
			return err
		}
	} else {
		r.Estado = NewUnionNullString()

		r.Estado = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["motivo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Motivo); err != nil {
			return err
		}
	} else {
		r.Motivo = NewUnionNullString()

		r.Motivo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["tipo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Tipo); err != nil {
			return err
		}
	} else {
		r.Tipo = NewUnionNullString()

		r.Tipo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["sucursalDeDistribucion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDeDistribucion); err != nil {
			return err
		}
	} else {
		r.SucursalDeDistribucion = NewUnionNullSucursalResponse()

		r.SucursalDeDistribucion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["sucursalDeImposicion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDeImposicion); err != nil {
			return err
		}
	} else {
		r.SucursalDeImposicion = NewUnionNullSucursalResponse()

		r.SucursalDeImposicion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["sucursalDeRendicion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDeRendicion); err != nil {
			return err
		}
	} else {
		r.SucursalDeRendicion = NewUnionNullSucursalResponse()

		r.SucursalDeRendicion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["sucursalAbastecedora"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalAbastecedora); err != nil {
			return err
		}
	} else {
		r.SucursalAbastecedora = NewUnionNullSucursalResponse()

		r.SucursalAbastecedora = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["fechaCreacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaCreacion); err != nil {
			return err
		}
	} else {
		r.FechaCreacion = NewUnionNullString()

		r.FechaCreacion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["zonaDeReparto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ZonaDeReparto); err != nil {
			return err
		}
	} else {
		r.ZonaDeReparto = NewUnionNullString()

		r.ZonaDeReparto = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["numeroDePermisionaria"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDePermisionaria); err != nil {
			return err
		}
	} else {
		r.NumeroDePermisionaria = NewUnionNullString()

		r.NumeroDePermisionaria = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["descripcionServicio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DescripcionServicio); err != nil {
			return err
		}
	} else {
		r.DescripcionServicio = NewUnionNullString()

		r.DescripcionServicio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["etiquetaRemito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EtiquetaRemito); err != nil {
			return err
		}
	} else {
		r.EtiquetaRemito = NewUnionNullString()

		r.EtiquetaRemito = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Bultos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Bultos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Bultos")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEstimadaDeEntrega"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEstimadaDeEntrega); err != nil {
			return err
		}
	} else {
		r.FechaEstimadaDeEntrega = NewUnionNullString()

		r.FechaEstimadaDeEntrega = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["huellaDeCarbono"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.HuellaDeCarbono); err != nil {
			return err
		}
	} else {
		r.HuellaDeCarbono = NewUnionNullString()

		r.HuellaDeCarbono = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["gastoEnergetico"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.GastoEnergetico); err != nil {
			return err
		}
	} else {
		r.GastoEnergetico = NewUnionNullString()

		r.GastoEnergetico = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["agrupadorDeBultos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AgrupadorDeBultos); err != nil {
			return err
		}
	} else {
		r.AgrupadorDeBultos = NewUnionNullString()

		r.AgrupadorDeBultos = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["etiquetasPorAgrupador"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EtiquetasPorAgrupador); err != nil {
			return err
		}
	} else {
		r.EtiquetasPorAgrupador = NewUnionNullString()

		r.EtiquetasPorAgrupador = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["etiquetasDocumentoDeCambio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EtiquetasDocumentoDeCambio); err != nil {
			return err
		}
	} else {
		r.EtiquetasDocumentoDeCambio = NewUnionNullString()

		r.EtiquetasDocumentoDeCambio = nil
	}
	return nil
}
