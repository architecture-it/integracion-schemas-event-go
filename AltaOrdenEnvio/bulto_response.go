// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     TransactionEvent.avsc
 */
package AltaOrdenEnvioEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type BultoResponse struct {
	NumeroDeBulto string `json:"NumeroDeBulto"`

	NumeroDeEnvio string `json:"NumeroDeEnvio"`

	Totalizador string `json:"Totalizador"`

	Linking *UnionNullArrayMetadato `json:"Linking"`
}

const BultoResponseAvroCRC64Fingerprint = "\xfc4\xd0\xc4\x04\xbdCm"

func NewBultoResponse() BultoResponse {
	r := BultoResponse{}
	r.Linking = nil
	return r
}

func DeserializeBultoResponse(r io.Reader) (BultoResponse, error) {
	t := NewBultoResponse()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeBultoResponseFromSchema(r io.Reader, schema string) (BultoResponse, error) {
	t := NewBultoResponse()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeBultoResponse(r BultoResponse, w io.Writer) error {
	var err error
	err = vm.WriteString(r.NumeroDeBulto, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.NumeroDeEnvio, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Totalizador, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayMetadato(r.Linking, w)
	if err != nil {
		return err
	}
	return err
}

func (r BultoResponse) Serialize(w io.Writer) error {
	return writeBultoResponse(r, w)
}

func (r BultoResponse) Schema() string {
	return "{\"fields\":[{\"name\":\"NumeroDeBulto\",\"type\":\"string\"},{\"name\":\"NumeroDeEnvio\",\"type\":\"string\"},{\"name\":\"Totalizador\",\"type\":\"string\"},{\"default\":null,\"name\":\"Linking\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"Andreani.AltaOrdenEnvio.Events.Common.BultoResponse\",\"type\":\"record\"}"
}

func (r BultoResponse) SchemaName() string {
	return "Andreani.AltaOrdenEnvio.Events.Common.BultoResponse"
}

func (_ BultoResponse) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ BultoResponse) SetInt(v int32)       { panic("Unsupported operation") }
func (_ BultoResponse) SetLong(v int64)      { panic("Unsupported operation") }
func (_ BultoResponse) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ BultoResponse) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ BultoResponse) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ BultoResponse) SetString(v string)   { panic("Unsupported operation") }
func (_ BultoResponse) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *BultoResponse) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.NumeroDeBulto}

		return w

	case 1:
		w := types.String{Target: &r.NumeroDeEnvio}

		return w

	case 2:
		w := types.String{Target: &r.Totalizador}

		return w

	case 3:
		r.Linking = NewUnionNullArrayMetadato()

		return r.Linking
	}
	panic("Unknown field index")
}

func (r *BultoResponse) SetDefault(i int) {
	switch i {
	case 3:
		r.Linking = nil
		return
	}
	panic("Unknown field index")
}

func (r *BultoResponse) NullField(i int) {
	switch i {
	case 3:
		r.Linking = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ BultoResponse) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ BultoResponse) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ BultoResponse) HintSize(int)                     { panic("Unsupported operation") }
func (_ BultoResponse) Finalize()                        {}

func (_ BultoResponse) AvroCRC64Fingerprint() []byte {
	return []byte(BultoResponseAvroCRC64Fingerprint)
}

func (r BultoResponse) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["NumeroDeBulto"], err = json.Marshal(r.NumeroDeBulto)
	if err != nil {
		return nil, err
	}
	output["NumeroDeEnvio"], err = json.Marshal(r.NumeroDeEnvio)
	if err != nil {
		return nil, err
	}
	output["Totalizador"], err = json.Marshal(r.Totalizador)
	if err != nil {
		return nil, err
	}
	output["Linking"], err = json.Marshal(r.Linking)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *BultoResponse) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["NumeroDeBulto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDeBulto); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroDeBulto")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroDeEnvio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDeEnvio); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroDeEnvio")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Totalizador"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Totalizador); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Totalizador")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Linking"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Linking); err != nil {
			return err
		}
	} else {
		r.Linking = NewUnionNullArrayMetadato()

		r.Linking = nil
	}
	return nil
}
