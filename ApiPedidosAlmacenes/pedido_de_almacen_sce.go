// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     PedidoDeAlmacenSCE.avsc
 */
package ApiPedidosAlmacenesEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type PedidoDeAlmacenSCE struct {
	Destinatario Destinatario `json:"destinatario"`

	Propietario string `json:"Propietario"`

	NumeroPedido string `json:"NumeroPedido"`

	TipoPedido string `json:"TipoPedido"`

	PrioridadPreparacion *UnionNullString `json:"PrioridadPreparacion"`

	FechaPedido *UnionNullString `json:"FechaPedido"`

	FechaEntrega *UnionNullString `json:"FechaEntrega"`

	Remito *UnionNullString `json:"Remito"`

	ReferenciaCliente *UnionNullString `json:"ReferenciaCliente"`

	CodigoTransportista *UnionNullString `json:"CodigoTransportista"`

	Notas *UnionNullListaDePropiedades `json:"Notas"`

	CamposLibres *UnionNullListaDePropiedades `json:"CamposLibres"`

	SocioComercial *UnionNullString `json:"SocioComercial"`

	ModoTransporte *UnionNullString `json:"ModoTransporte"`

	Direccion Direccion `json:"direccion"`

	DetallePedido ListaDeDetalleDePedido `json:"detallePedido"`

	OtrosDatos *UnionNullListaDePropiedades `json:"OtrosDatos"`

	ZonaConsumo *UnionNullString `json:"ZonaConsumo"`

	FacturaLegal *UnionNullString `json:"FacturaLegal"`

	FacturaInterna *UnionNullString `json:"FacturaInterna"`

	TieneGestionCobranza *UnionNullString `json:"TieneGestionCobranza"`

	ValorSeguro *UnionNullString `json:"ValorSeguro"`

	OrdenDeCompra *UnionNullString `json:"OrdenDeCompra"`

	ClientePadre *UnionNullString `json:"ClientePadre"`

	AcondicionamientoSecundario *UnionNullString `json:"AcondicionamientoSecundario"`

	ImprimeDocumentacion bool `json:"ImprimeDocumentacion"`

	DetalleDeOrdenDeCompra *UnionNullDetalleDeOrdenDeCompra `json:"detalleDeOrdenDeCompra"`
}

const PedidoDeAlmacenSCEAvroCRC64Fingerprint = "ß“O\xb9\t\xc1o\xf1"

func NewPedidoDeAlmacenSCE() PedidoDeAlmacenSCE {
	r := PedidoDeAlmacenSCE{}
	r.Destinatario = NewDestinatario()

	r.Direccion = NewDireccion()

	r.DetallePedido = NewListaDeDetalleDePedido()

	return r
}

func DeserializePedidoDeAlmacenSCE(r io.Reader) (PedidoDeAlmacenSCE, error) {
	t := NewPedidoDeAlmacenSCE()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializePedidoDeAlmacenSCEFromSchema(r io.Reader, schema string) (PedidoDeAlmacenSCE, error) {
	t := NewPedidoDeAlmacenSCE()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writePedidoDeAlmacenSCE(r PedidoDeAlmacenSCE, w io.Writer) error {
	var err error
	err = writeDestinatario(r.Destinatario, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Propietario, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.NumeroPedido, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.TipoPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.PrioridadPreparacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaPedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaEntrega, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Remito, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ReferenciaCliente, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoTransportista, w)
	if err != nil {
		return err
	}
	err = writeUnionNullListaDePropiedades(r.Notas, w)
	if err != nil {
		return err
	}
	err = writeUnionNullListaDePropiedades(r.CamposLibres, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.SocioComercial, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ModoTransporte, w)
	if err != nil {
		return err
	}
	err = writeDireccion(r.Direccion, w)
	if err != nil {
		return err
	}
	err = writeListaDeDetalleDePedido(r.DetallePedido, w)
	if err != nil {
		return err
	}
	err = writeUnionNullListaDePropiedades(r.OtrosDatos, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ZonaConsumo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FacturaLegal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FacturaInterna, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.TieneGestionCobranza, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ValorSeguro, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.OrdenDeCompra, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ClientePadre, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.AcondicionamientoSecundario, w)
	if err != nil {
		return err
	}
	err = vm.WriteBool(r.ImprimeDocumentacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDetalleDeOrdenDeCompra(r.DetalleDeOrdenDeCompra, w)
	if err != nil {
		return err
	}
	return err
}

func (r PedidoDeAlmacenSCE) Serialize(w io.Writer) error {
	return writePedidoDeAlmacenSCE(r, w)
}

func (r PedidoDeAlmacenSCE) Schema() string {
	return "{\"fields\":[{\"name\":\"destinatario\",\"type\":{\"fields\":[{\"name\":\"datosPersonales\",\"type\":{\"fields\":[{\"name\":\"NumeroDeDocumento\",\"type\":[\"null\",\"string\"]},{\"name\":\"NombreCompleto\",\"type\":[\"null\",\"string\"]},{\"name\":\"IdInternoDelCliente\",\"type\":[\"null\",\"string\"]},{\"name\":\"EMail\",\"type\":[\"null\",\"string\"]},{\"name\":\"Telefonos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"listaDeTelefonos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"Tipo\",\"type\":[\"null\",\"string\"]},{\"name\":\"Numero\",\"type\":\"string\"}],\"name\":\"Telefono\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"ListaDeTelefonos\",\"type\":\"record\"}]},{\"name\":\"Agrupador\",\"type\":[\"null\",\"string\"]},{\"name\":\"TipoDeDocumento\",\"type\":[\"null\",\"string\"]}],\"name\":\"DatosPersonales\",\"type\":\"record\"}},{\"name\":\"OtrosDatos\",\"type\":[\"null\",{\"fields\":[{\"name\":\"metadatos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Meta\",\"type\":\"string\"},{\"name\":\"Contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"ListaDePropiedades\",\"type\":\"record\"}]},{\"name\":\"Contacto\",\"type\":[\"null\",\"string\"]}],\"name\":\"Destinatario\",\"type\":\"record\"}},{\"name\":\"Propietario\",\"type\":\"string\"},{\"name\":\"NumeroPedido\",\"type\":\"string\"},{\"name\":\"TipoPedido\",\"type\":\"string\"},{\"name\":\"PrioridadPreparacion\",\"type\":[\"null\",\"string\"]},{\"name\":\"FechaPedido\",\"type\":[\"null\",\"string\"]},{\"name\":\"FechaEntrega\",\"type\":[\"null\",\"string\"]},{\"name\":\"Remito\",\"type\":[\"null\",\"string\"]},{\"name\":\"ReferenciaCliente\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoTransportista\",\"type\":[\"null\",\"string\"]},{\"name\":\"Notas\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]},{\"name\":\"CamposLibres\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]},{\"name\":\"SocioComercial\",\"type\":[\"null\",\"string\"]},{\"name\":\"ModoTransporte\",\"type\":[\"null\",\"string\"]},{\"name\":\"direccion\",\"type\":{\"fields\":[{\"name\":\"AbreviaturaProvincia\",\"type\":[\"null\",\"string\"]},{\"name\":\"Calle\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoDeDireccion\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoCiudad\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoPostal\",\"type\":[\"null\",\"string\"]},{\"name\":\"CombreProvincia\",\"type\":[\"null\",\"string\"]},{\"name\":\"Numero\",\"type\":[\"null\",\"string\"]},{\"name\":\"telefono\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoISOProvincia\",\"type\":[\"null\",\"string\"]},{\"name\":\"CodigoISOPais\",\"type\":[\"null\",\"string\"]},{\"name\":\"Localidad\",\"type\":[\"null\",\"string\"]},{\"name\":\"ComponentesDeDireccion\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]}],\"name\":\"Direccion\",\"type\":\"record\"}},{\"name\":\"detallePedido\",\"type\":{\"fields\":[{\"name\":\"detallePedido\",\"type\":{\"items\":{\"fields\":[{\"name\":\"articulo\",\"type\":{\"fields\":[{\"name\":\"Codigo\",\"type\":\"string\"},{\"name\":\"Propietario\",\"type\":\"string\"},{\"name\":\"Lote\",\"type\":[\"null\",{\"fields\":[{\"name\":\"Codigo\",\"type\":\"string\"},{\"name\":\"LoteDeFabricante\",\"type\":[\"null\",\"string\"]},{\"name\":\"LoteSecundario\",\"type\":[\"null\",\"string\"]},{\"name\":\"FechaDeVencimiento\",\"type\":\"int\"},{\"name\":\"OtrosDatos\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]}],\"name\":\"LoteArticulo\",\"type\":\"record\"}]},{\"name\":\"OtrosDatos\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]}],\"name\":\"Articulo\",\"type\":\"record\"}},{\"name\":\"NumeroPedido\",\"type\":\"string\"},{\"name\":\"UnidadMedida\",\"type\":\"string\"},{\"name\":\"LineaExterna\",\"type\":[\"null\",\"string\"]},{\"name\":\"Unidades\",\"type\":\"float\"},{\"name\":\"OtrosDatos\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]}],\"name\":\"DetallePedido\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"ListaDeDetalleDePedido\",\"type\":\"record\"}},{\"name\":\"OtrosDatos\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]},{\"name\":\"ZonaConsumo\",\"type\":[\"null\",\"string\"]},{\"name\":\"FacturaLegal\",\"type\":[\"null\",\"string\"]},{\"name\":\"FacturaInterna\",\"type\":[\"null\",\"string\"]},{\"name\":\"TieneGestionCobranza\",\"type\":[\"null\",\"string\"]},{\"name\":\"ValorSeguro\",\"type\":[\"null\",\"string\"]},{\"name\":\"OrdenDeCompra\",\"type\":[\"null\",\"string\"]},{\"name\":\"ClientePadre\",\"type\":[\"null\",\"string\"]},{\"name\":\"AcondicionamientoSecundario\",\"type\":[\"null\",\"string\"]},{\"name\":\"ImprimeDocumentacion\",\"type\":\"boolean\"},{\"name\":\"detalleDeOrdenDeCompra\",\"type\":[\"null\",{\"fields\":[{\"name\":\"NumeroDeLineaDeCliente\",\"type\":\"string\"},{\"name\":\"OrdenDeCompraDeCliente\",\"type\":\"string\"},{\"name\":\"NotasDeLinea\",\"type\":[\"null\",\"string\"]},{\"name\":\"NumeroDeLinea\",\"type\":\"string\"},{\"name\":\"CantidadPedida\",\"type\":\"double\"},{\"name\":\"articulo\",\"type\":\"Andreani.WapAltaDePedidoSolicitada.Events.Record.Articulo\"},{\"name\":\"ValorDeclarado\",\"type\":[\"null\",\"string\"]},{\"name\":\"UOM\",\"type\":[\"null\",\"string\"]},{\"name\":\"CamposLibres\",\"type\":[\"null\",\"Andreani.WapAltaDePedidoSolicitada.Events.Record.ListaDePropiedades\"]},{\"name\":\"FechaOrdenDeCompra\",\"type\":[\"null\",\"string\"]},{\"name\":\"TipoMaterial\",\"type\":[\"null\",\"string\"]}],\"name\":\"DetalleDeOrdenDeCompra\",\"type\":\"record\"}]}],\"name\":\"Andreani.WapAltaDePedidoSolicitada.Events.Record.PedidoDeAlmacenSCE\",\"type\":\"record\"}"
}

func (r PedidoDeAlmacenSCE) SchemaName() string {
	return "Andreani.WapAltaDePedidoSolicitada.Events.Record.PedidoDeAlmacenSCE"
}

func (_ PedidoDeAlmacenSCE) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) SetInt(v int32)       { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) SetLong(v int64)      { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) SetString(v string)   { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *PedidoDeAlmacenSCE) Get(i int) types.Field {
	switch i {
	case 0:
		r.Destinatario = NewDestinatario()

		w := types.Record{Target: &r.Destinatario}

		return w

	case 1:
		w := types.String{Target: &r.Propietario}

		return w

	case 2:
		w := types.String{Target: &r.NumeroPedido}

		return w

	case 3:
		w := types.String{Target: &r.TipoPedido}

		return w

	case 4:
		r.PrioridadPreparacion = NewUnionNullString()

		return r.PrioridadPreparacion
	case 5:
		r.FechaPedido = NewUnionNullString()

		return r.FechaPedido
	case 6:
		r.FechaEntrega = NewUnionNullString()

		return r.FechaEntrega
	case 7:
		r.Remito = NewUnionNullString()

		return r.Remito
	case 8:
		r.ReferenciaCliente = NewUnionNullString()

		return r.ReferenciaCliente
	case 9:
		r.CodigoTransportista = NewUnionNullString()

		return r.CodigoTransportista
	case 10:
		r.Notas = NewUnionNullListaDePropiedades()

		return r.Notas
	case 11:
		r.CamposLibres = NewUnionNullListaDePropiedades()

		return r.CamposLibres
	case 12:
		r.SocioComercial = NewUnionNullString()

		return r.SocioComercial
	case 13:
		r.ModoTransporte = NewUnionNullString()

		return r.ModoTransporte
	case 14:
		r.Direccion = NewDireccion()

		w := types.Record{Target: &r.Direccion}

		return w

	case 15:
		r.DetallePedido = NewListaDeDetalleDePedido()

		w := types.Record{Target: &r.DetallePedido}

		return w

	case 16:
		r.OtrosDatos = NewUnionNullListaDePropiedades()

		return r.OtrosDatos
	case 17:
		r.ZonaConsumo = NewUnionNullString()

		return r.ZonaConsumo
	case 18:
		r.FacturaLegal = NewUnionNullString()

		return r.FacturaLegal
	case 19:
		r.FacturaInterna = NewUnionNullString()

		return r.FacturaInterna
	case 20:
		r.TieneGestionCobranza = NewUnionNullString()

		return r.TieneGestionCobranza
	case 21:
		r.ValorSeguro = NewUnionNullString()

		return r.ValorSeguro
	case 22:
		r.OrdenDeCompra = NewUnionNullString()

		return r.OrdenDeCompra
	case 23:
		r.ClientePadre = NewUnionNullString()

		return r.ClientePadre
	case 24:
		r.AcondicionamientoSecundario = NewUnionNullString()

		return r.AcondicionamientoSecundario
	case 25:
		w := types.Boolean{Target: &r.ImprimeDocumentacion}

		return w

	case 26:
		r.DetalleDeOrdenDeCompra = NewUnionNullDetalleDeOrdenDeCompra()

		return r.DetalleDeOrdenDeCompra
	}
	panic("Unknown field index")
}

func (r *PedidoDeAlmacenSCE) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *PedidoDeAlmacenSCE) NullField(i int) {
	switch i {
	case 4:
		r.PrioridadPreparacion = nil
		return
	case 5:
		r.FechaPedido = nil
		return
	case 6:
		r.FechaEntrega = nil
		return
	case 7:
		r.Remito = nil
		return
	case 8:
		r.ReferenciaCliente = nil
		return
	case 9:
		r.CodigoTransportista = nil
		return
	case 10:
		r.Notas = nil
		return
	case 11:
		r.CamposLibres = nil
		return
	case 12:
		r.SocioComercial = nil
		return
	case 13:
		r.ModoTransporte = nil
		return
	case 16:
		r.OtrosDatos = nil
		return
	case 17:
		r.ZonaConsumo = nil
		return
	case 18:
		r.FacturaLegal = nil
		return
	case 19:
		r.FacturaInterna = nil
		return
	case 20:
		r.TieneGestionCobranza = nil
		return
	case 21:
		r.ValorSeguro = nil
		return
	case 22:
		r.OrdenDeCompra = nil
		return
	case 23:
		r.ClientePadre = nil
		return
	case 24:
		r.AcondicionamientoSecundario = nil
		return
	case 26:
		r.DetalleDeOrdenDeCompra = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ PedidoDeAlmacenSCE) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) HintSize(int)                     { panic("Unsupported operation") }
func (_ PedidoDeAlmacenSCE) Finalize()                        {}

func (_ PedidoDeAlmacenSCE) AvroCRC64Fingerprint() []byte {
	return []byte(PedidoDeAlmacenSCEAvroCRC64Fingerprint)
}

func (r PedidoDeAlmacenSCE) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["destinatario"], err = json.Marshal(r.Destinatario)
	if err != nil {
		return nil, err
	}
	output["Propietario"], err = json.Marshal(r.Propietario)
	if err != nil {
		return nil, err
	}
	output["NumeroPedido"], err = json.Marshal(r.NumeroPedido)
	if err != nil {
		return nil, err
	}
	output["TipoPedido"], err = json.Marshal(r.TipoPedido)
	if err != nil {
		return nil, err
	}
	output["PrioridadPreparacion"], err = json.Marshal(r.PrioridadPreparacion)
	if err != nil {
		return nil, err
	}
	output["FechaPedido"], err = json.Marshal(r.FechaPedido)
	if err != nil {
		return nil, err
	}
	output["FechaEntrega"], err = json.Marshal(r.FechaEntrega)
	if err != nil {
		return nil, err
	}
	output["Remito"], err = json.Marshal(r.Remito)
	if err != nil {
		return nil, err
	}
	output["ReferenciaCliente"], err = json.Marshal(r.ReferenciaCliente)
	if err != nil {
		return nil, err
	}
	output["CodigoTransportista"], err = json.Marshal(r.CodigoTransportista)
	if err != nil {
		return nil, err
	}
	output["Notas"], err = json.Marshal(r.Notas)
	if err != nil {
		return nil, err
	}
	output["CamposLibres"], err = json.Marshal(r.CamposLibres)
	if err != nil {
		return nil, err
	}
	output["SocioComercial"], err = json.Marshal(r.SocioComercial)
	if err != nil {
		return nil, err
	}
	output["ModoTransporte"], err = json.Marshal(r.ModoTransporte)
	if err != nil {
		return nil, err
	}
	output["direccion"], err = json.Marshal(r.Direccion)
	if err != nil {
		return nil, err
	}
	output["detallePedido"], err = json.Marshal(r.DetallePedido)
	if err != nil {
		return nil, err
	}
	output["OtrosDatos"], err = json.Marshal(r.OtrosDatos)
	if err != nil {
		return nil, err
	}
	output["ZonaConsumo"], err = json.Marshal(r.ZonaConsumo)
	if err != nil {
		return nil, err
	}
	output["FacturaLegal"], err = json.Marshal(r.FacturaLegal)
	if err != nil {
		return nil, err
	}
	output["FacturaInterna"], err = json.Marshal(r.FacturaInterna)
	if err != nil {
		return nil, err
	}
	output["TieneGestionCobranza"], err = json.Marshal(r.TieneGestionCobranza)
	if err != nil {
		return nil, err
	}
	output["ValorSeguro"], err = json.Marshal(r.ValorSeguro)
	if err != nil {
		return nil, err
	}
	output["OrdenDeCompra"], err = json.Marshal(r.OrdenDeCompra)
	if err != nil {
		return nil, err
	}
	output["ClientePadre"], err = json.Marshal(r.ClientePadre)
	if err != nil {
		return nil, err
	}
	output["AcondicionamientoSecundario"], err = json.Marshal(r.AcondicionamientoSecundario)
	if err != nil {
		return nil, err
	}
	output["ImprimeDocumentacion"], err = json.Marshal(r.ImprimeDocumentacion)
	if err != nil {
		return nil, err
	}
	output["detalleDeOrdenDeCompra"], err = json.Marshal(r.DetalleDeOrdenDeCompra)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *PedidoDeAlmacenSCE) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["destinatario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Destinatario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for destinatario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Propietario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Propietario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Propietario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroPedido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroPedido")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TipoPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPedido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TipoPedido")
	}
	val = func() json.RawMessage {
		if v, ok := fields["PrioridadPreparacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PrioridadPreparacion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for PrioridadPreparacion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaPedido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaPedido")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaEntrega"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaEntrega); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FechaEntrega")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Remito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Remito); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Remito")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ReferenciaCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReferenciaCliente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ReferenciaCliente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CodigoTransportista"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoTransportista); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CodigoTransportista")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Notas"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Notas); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Notas")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CamposLibres"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CamposLibres); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CamposLibres")
	}
	val = func() json.RawMessage {
		if v, ok := fields["SocioComercial"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SocioComercial); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SocioComercial")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ModoTransporte"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ModoTransporte); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ModoTransporte")
	}
	val = func() json.RawMessage {
		if v, ok := fields["direccion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Direccion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for direccion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["detallePedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DetallePedido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for detallePedido")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OtrosDatos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OtrosDatos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OtrosDatos")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ZonaConsumo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ZonaConsumo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ZonaConsumo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FacturaLegal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FacturaLegal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FacturaLegal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FacturaInterna"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FacturaInterna); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FacturaInterna")
	}
	val = func() json.RawMessage {
		if v, ok := fields["TieneGestionCobranza"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TieneGestionCobranza); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TieneGestionCobranza")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ValorSeguro"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ValorSeguro); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ValorSeguro")
	}
	val = func() json.RawMessage {
		if v, ok := fields["OrdenDeCompra"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.OrdenDeCompra); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for OrdenDeCompra")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ClientePadre"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ClientePadre); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ClientePadre")
	}
	val = func() json.RawMessage {
		if v, ok := fields["AcondicionamientoSecundario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AcondicionamientoSecundario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for AcondicionamientoSecundario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ImprimeDocumentacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ImprimeDocumentacion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ImprimeDocumentacion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["detalleDeOrdenDeCompra"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DetalleDeOrdenDeCompra); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for detalleDeOrdenDeCompra")
	}
	return nil
}
