// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     SolicitudEliminacionArticulo.avsc
 */
package WarehouseArticuloEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type SolicitudEliminacionArticulo struct {
	TransaccionId int32 `json:"TransaccionId"`

	BusinessType string `json:"BusinessType"`

	Topic string `json:"Topic"`
}

const SolicitudEliminacionArticuloAvroCRC64Fingerprint = "HlB\xa3\xa2Õ½\x12"

func NewSolicitudEliminacionArticulo() SolicitudEliminacionArticulo {
	r := SolicitudEliminacionArticulo{}
	r.Topic = "Almacen/Solicitudes/SolicitudEliminacionArticulo"
	return r
}

func DeserializeSolicitudEliminacionArticulo(r io.Reader) (SolicitudEliminacionArticulo, error) {
	t := NewSolicitudEliminacionArticulo()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeSolicitudEliminacionArticuloFromSchema(r io.Reader, schema string) (SolicitudEliminacionArticulo, error) {
	t := NewSolicitudEliminacionArticulo()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeSolicitudEliminacionArticulo(r SolicitudEliminacionArticulo, w io.Writer) error {
	var err error
	err = vm.WriteInt(r.TransaccionId, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.BusinessType, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Topic, w)
	if err != nil {
		return err
	}
	return err
}

func (r SolicitudEliminacionArticulo) Serialize(w io.Writer) error {
	return writeSolicitudEliminacionArticulo(r, w)
}

func (r SolicitudEliminacionArticulo) Schema() string {
	return "{\"fields\":[{\"name\":\"TransaccionId\",\"type\":\"int\"},{\"name\":\"BusinessType\",\"type\":\"string\"},{\"default\":\"Almacen/Solicitudes/SolicitudEliminacionArticulo\",\"name\":\"Topic\",\"type\":\"string\"}],\"name\":\"Andreani.WarehouseArticulo.Events.Record.SolicitudEliminacionArticulo\",\"type\":\"record\"}"
}

func (r SolicitudEliminacionArticulo) SchemaName() string {
	return "Andreani.WarehouseArticulo.Events.Record.SolicitudEliminacionArticulo"
}

func (_ SolicitudEliminacionArticulo) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) SetInt(v int32)       { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) SetLong(v int64)      { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) SetString(v string)   { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *SolicitudEliminacionArticulo) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.Int{Target: &r.TransaccionId}

		return w

	case 1:
		w := types.String{Target: &r.BusinessType}

		return w

	case 2:
		w := types.String{Target: &r.Topic}

		return w

	}
	panic("Unknown field index")
}

func (r *SolicitudEliminacionArticulo) SetDefault(i int) {
	switch i {
	case 2:
		r.Topic = "Almacen/Solicitudes/SolicitudEliminacionArticulo"
		return
	}
	panic("Unknown field index")
}

func (r *SolicitudEliminacionArticulo) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ SolicitudEliminacionArticulo) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ SolicitudEliminacionArticulo) AppendArray() types.Field { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) HintSize(int)             { panic("Unsupported operation") }
func (_ SolicitudEliminacionArticulo) Finalize()                {}

func (_ SolicitudEliminacionArticulo) AvroCRC64Fingerprint() []byte {
	return []byte(SolicitudEliminacionArticuloAvroCRC64Fingerprint)
}

func (r SolicitudEliminacionArticulo) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["TransaccionId"], err = json.Marshal(r.TransaccionId)
	if err != nil {
		return nil, err
	}
	output["BusinessType"], err = json.Marshal(r.BusinessType)
	if err != nil {
		return nil, err
	}
	output["Topic"], err = json.Marshal(r.Topic)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *SolicitudEliminacionArticulo) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["TransaccionId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TransaccionId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for TransaccionId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["BusinessType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.BusinessType); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for BusinessType")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Topic"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Topic); err != nil {
			return err
		}
	} else {
		r.Topic = "Almacen/Solicitudes/SolicitudEliminacionArticulo"
	}
	return nil
}
