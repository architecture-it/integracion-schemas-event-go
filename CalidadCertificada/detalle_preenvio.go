// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     DetallePreenvio.avsc
 */
package CalidadCertificadaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type DetallePreenvio struct {
	Contrato string `json:"Contrato"`

	IdBulto string `json:"IdBulto"`

	NumeroRemito string `json:"NumeroRemito"`

	Interno string `json:"Interno"`

	Almacen string `json:"Almacen"`

	Instancia string `json:"Instancia"`

	FinPedido bool `json:"FinPedido"`

	ValorACobrar float32 `json:"ValorACobrar"`

	Origen Direccion `json:"Origen"`

	Destino Direccion `json:"Destino"`

	Remitente Persona `json:"Remitente"`

	Destinatario []Persona `json:"Destinatario"`

	Bultos []Bulto `json:"Bultos"`
}

const DetallePreenvioAvroCRC64Fingerprint = "\xae\xf6V\x02\x99Ýº\x84"

func NewDetallePreenvio() DetallePreenvio {
	r := DetallePreenvio{}
	r.Origen = NewDireccion()

	r.Destino = NewDireccion()

	r.Remitente = NewPersona()

	r.Destinatario = make([]Persona, 0)

	r.Bultos = make([]Bulto, 0)

	return r
}

func DeserializeDetallePreenvio(r io.Reader) (DetallePreenvio, error) {
	t := NewDetallePreenvio()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeDetallePreenvioFromSchema(r io.Reader, schema string) (DetallePreenvio, error) {
	t := NewDetallePreenvio()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeDetallePreenvio(r DetallePreenvio, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Contrato, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.IdBulto, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.NumeroRemito, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Interno, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Almacen, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Instancia, w)
	if err != nil {
		return err
	}
	err = vm.WriteBool(r.FinPedido, w)
	if err != nil {
		return err
	}
	err = vm.WriteFloat(r.ValorACobrar, w)
	if err != nil {
		return err
	}
	err = writeDireccion(r.Origen, w)
	if err != nil {
		return err
	}
	err = writeDireccion(r.Destino, w)
	if err != nil {
		return err
	}
	err = writePersona(r.Remitente, w)
	if err != nil {
		return err
	}
	err = writeArrayPersona(r.Destinatario, w)
	if err != nil {
		return err
	}
	err = writeArrayBulto(r.Bultos, w)
	if err != nil {
		return err
	}
	return err
}

func (r DetallePreenvio) Serialize(w io.Writer) error {
	return writeDetallePreenvio(r, w)
}

func (r DetallePreenvio) Schema() string {
	return "{\"fields\":[{\"name\":\"Contrato\",\"type\":\"string\"},{\"name\":\"IdBulto\",\"type\":\"string\"},{\"name\":\"NumeroRemito\",\"type\":\"string\"},{\"name\":\"Interno\",\"type\":\"string\"},{\"name\":\"Almacen\",\"type\":\"string\"},{\"name\":\"Instancia\",\"type\":\"string\"},{\"name\":\"FinPedido\",\"type\":\"boolean\"},{\"name\":\"ValorACobrar\",\"type\":\"float\"},{\"name\":\"Origen\",\"type\":{\"fields\":[{\"name\":\"Postal\",\"type\":{\"fields\":[{\"name\":\"CodigoPostal\",\"type\":\"string\"},{\"name\":\"Calle\",\"type\":\"string\"},{\"name\":\"Numero\",\"type\":\"string\"},{\"name\":\"Localidad\",\"type\":\"string\"},{\"name\":\"Region\",\"type\":\"string\"},{\"name\":\"Pais\",\"type\":\"string\"},{\"name\":\"ComponentesDeDireccion\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Meta\",\"type\":\"string\"},{\"name\":\"Contenido\",\"type\":\"string\"}],\"name\":\"ComponenteDeDireccion\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Postal\",\"type\":\"record\"}}],\"name\":\"Direccion\",\"type\":\"record\"}},{\"name\":\"Destino\",\"type\":\"Andreani.CalidadCertificada.Events.Record.Direccion\"},{\"name\":\"Remitente\",\"type\":{\"fields\":[{\"name\":\"NombreCompleto\",\"type\":\"string\"},{\"name\":\"Email\",\"type\":\"string\"},{\"name\":\"DocumentoTipo\",\"type\":\"string\"},{\"name\":\"DocumentoNumero\",\"type\":\"string\"},{\"name\":\"Telefonos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Tipo\",\"type\":\"int\"},{\"name\":\"Numero\",\"type\":\"string\"}],\"name\":\"Telefono\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Persona\",\"type\":\"record\"}},{\"name\":\"Destinatario\",\"type\":{\"items\":\"Andreani.CalidadCertificada.Events.Record.Persona\",\"type\":\"array\"}},{\"name\":\"Bultos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Kilos\",\"type\":\"float\"},{\"name\":\"LargoCm\",\"type\":\"float\"},{\"name\":\"AltoCm\",\"type\":\"float\"},{\"name\":\"AnchoCm\",\"type\":\"float\"},{\"name\":\"VolumenCm\",\"type\":\"float\"},{\"name\":\"MontoValorSeguro\",\"type\":\"float\"},{\"name\":\"ValorDeclaradoConImpuestos\",\"type\":\"float\"},{\"name\":\"MontoGestionCobranza\",\"type\":\"float\"},{\"name\":\"Referencias\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Meta\",\"type\":\"string\"},{\"name\":\"Contenido\",\"type\":\"string\"}],\"name\":\"Referencia\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Bulto\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"Andreani.CalidadCertificada.Events.Record.DetallePreenvio\",\"type\":\"record\"}"
}

func (r DetallePreenvio) SchemaName() string {
	return "Andreani.CalidadCertificada.Events.Record.DetallePreenvio"
}

func (_ DetallePreenvio) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ DetallePreenvio) SetInt(v int32)       { panic("Unsupported operation") }
func (_ DetallePreenvio) SetLong(v int64)      { panic("Unsupported operation") }
func (_ DetallePreenvio) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ DetallePreenvio) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ DetallePreenvio) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ DetallePreenvio) SetString(v string)   { panic("Unsupported operation") }
func (_ DetallePreenvio) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *DetallePreenvio) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Contrato}

		return w

	case 1:
		w := types.String{Target: &r.IdBulto}

		return w

	case 2:
		w := types.String{Target: &r.NumeroRemito}

		return w

	case 3:
		w := types.String{Target: &r.Interno}

		return w

	case 4:
		w := types.String{Target: &r.Almacen}

		return w

	case 5:
		w := types.String{Target: &r.Instancia}

		return w

	case 6:
		w := types.Boolean{Target: &r.FinPedido}

		return w

	case 7:
		w := types.Float{Target: &r.ValorACobrar}

		return w

	case 8:
		r.Origen = NewDireccion()

		w := types.Record{Target: &r.Origen}

		return w

	case 9:
		r.Destino = NewDireccion()

		w := types.Record{Target: &r.Destino}

		return w

	case 10:
		r.Remitente = NewPersona()

		w := types.Record{Target: &r.Remitente}

		return w

	case 11:
		r.Destinatario = make([]Persona, 0)

		w := ArrayPersonaWrapper{Target: &r.Destinatario}

		return w

	case 12:
		r.Bultos = make([]Bulto, 0)

		w := ArrayBultoWrapper{Target: &r.Bultos}

		return w

	}
	panic("Unknown field index")
}

func (r *DetallePreenvio) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *DetallePreenvio) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ DetallePreenvio) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ DetallePreenvio) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ DetallePreenvio) HintSize(int)                     { panic("Unsupported operation") }
func (_ DetallePreenvio) Finalize()                        {}

func (_ DetallePreenvio) AvroCRC64Fingerprint() []byte {
	return []byte(DetallePreenvioAvroCRC64Fingerprint)
}

func (r DetallePreenvio) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Contrato"], err = json.Marshal(r.Contrato)
	if err != nil {
		return nil, err
	}
	output["IdBulto"], err = json.Marshal(r.IdBulto)
	if err != nil {
		return nil, err
	}
	output["NumeroRemito"], err = json.Marshal(r.NumeroRemito)
	if err != nil {
		return nil, err
	}
	output["Interno"], err = json.Marshal(r.Interno)
	if err != nil {
		return nil, err
	}
	output["Almacen"], err = json.Marshal(r.Almacen)
	if err != nil {
		return nil, err
	}
	output["Instancia"], err = json.Marshal(r.Instancia)
	if err != nil {
		return nil, err
	}
	output["FinPedido"], err = json.Marshal(r.FinPedido)
	if err != nil {
		return nil, err
	}
	output["ValorACobrar"], err = json.Marshal(r.ValorACobrar)
	if err != nil {
		return nil, err
	}
	output["Origen"], err = json.Marshal(r.Origen)
	if err != nil {
		return nil, err
	}
	output["Destino"], err = json.Marshal(r.Destino)
	if err != nil {
		return nil, err
	}
	output["Remitente"], err = json.Marshal(r.Remitente)
	if err != nil {
		return nil, err
	}
	output["Destinatario"], err = json.Marshal(r.Destinatario)
	if err != nil {
		return nil, err
	}
	output["Bultos"], err = json.Marshal(r.Bultos)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *DetallePreenvio) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Contrato"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Contrato); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Contrato")
	}
	val = func() json.RawMessage {
		if v, ok := fields["IdBulto"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.IdBulto); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for IdBulto")
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroRemito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroRemito); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for NumeroRemito")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Interno"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Interno); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Interno")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Almacen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Almacen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Almacen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Instancia"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Instancia); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Instancia")
	}
	val = func() json.RawMessage {
		if v, ok := fields["FinPedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FinPedido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for FinPedido")
	}
	val = func() json.RawMessage {
		if v, ok := fields["ValorACobrar"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ValorACobrar); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for ValorACobrar")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Origen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Origen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Origen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Destino"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Destino); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Destino")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Remitente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Remitente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Remitente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Destinatario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Destinatario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Destinatario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Bultos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Bultos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Bultos")
	}
	return nil
}
