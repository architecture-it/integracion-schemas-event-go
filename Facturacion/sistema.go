// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     Sistema.avsc
 */
package FacturacionEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type Sistema int32

const (
	SistemaSistema1710 Sistema = 0
	SistemaSistema1720 Sistema = 1
	SistemaSistema1760 Sistema = 2
	SistemaSistema1771 Sistema = 3
)

func (e Sistema) String() string {
	switch e {
	case SistemaSistema1710:
		return "Sistema1710"
	case SistemaSistema1720:
		return "Sistema1720"
	case SistemaSistema1760:
		return "Sistema1760"
	case SistemaSistema1771:
		return "Sistema1771"
	}
	return "unknown"
}

func writeSistema(r Sistema, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewSistemaValue(raw string) (r Sistema, err error) {
	switch raw {
	case "Sistema1710":
		return SistemaSistema1710, nil
	case "Sistema1720":
		return SistemaSistema1720, nil
	case "Sistema1760":
		return SistemaSistema1760, nil
	case "Sistema1771":
		return SistemaSistema1771, nil
	}

	return -1, fmt.Errorf("invalid value for Sistema: '%s'", raw)

}

func (b Sistema) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *Sistema) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewSistemaValue(stringVal)
	*b = val
	return err
}

type SistemaWrapper struct {
	Target *Sistema
}

func (b SistemaWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b SistemaWrapper) SetInt(v int32) {
	*(b.Target) = Sistema(v)
}

func (b SistemaWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b SistemaWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b SistemaWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b SistemaWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b SistemaWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b SistemaWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b SistemaWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b SistemaWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b SistemaWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b SistemaWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b SistemaWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b SistemaWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b SistemaWrapper) Finalize() {}
