// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     PedidoEmpaquetar.avsc
 */
package EmpaquetadoEvents

import (
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

func writeArrayArticuloContenedorPreparacion(r []ArticuloContenedorPreparacion, w io.Writer) error {
	err := vm.WriteLong(int64(len(r)), w)
	if err != nil || len(r) == 0 {
		return err
	}
	for _, e := range r {
		err = writeArticuloContenedorPreparacion(e, w)
		if err != nil {
			return err
		}
	}
	return vm.WriteLong(0, w)
}

type ArrayArticuloContenedorPreparacionWrapper struct {
	Target *[]ArticuloContenedorPreparacion
}

func (_ ArrayArticuloContenedorPreparacionWrapper) SetBoolean(v bool) { panic("Unsupported operation") }
func (_ ArrayArticuloContenedorPreparacionWrapper) SetInt(v int32)    { panic("Unsupported operation") }
func (_ ArrayArticuloContenedorPreparacionWrapper) SetLong(v int64)   { panic("Unsupported operation") }
func (_ ArrayArticuloContenedorPreparacionWrapper) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ ArrayArticuloContenedorPreparacionWrapper) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ ArrayArticuloContenedorPreparacionWrapper) SetBytes(v []byte) { panic("Unsupported operation") }
func (_ ArrayArticuloContenedorPreparacionWrapper) SetString(v string) {
	panic("Unsupported operation")
}
func (_ ArrayArticuloContenedorPreparacionWrapper) SetUnionElem(v int64) {
	panic("Unsupported operation")
}
func (_ ArrayArticuloContenedorPreparacionWrapper) Get(i int) types.Field {
	panic("Unsupported operation")
}
func (_ ArrayArticuloContenedorPreparacionWrapper) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ ArrayArticuloContenedorPreparacionWrapper) Finalize()        {}
func (_ ArrayArticuloContenedorPreparacionWrapper) SetDefault(i int) { panic("Unsupported operation") }
func (r ArrayArticuloContenedorPreparacionWrapper) HintSize(s int) {
	if len(*r.Target) == 0 {
		*r.Target = make([]ArticuloContenedorPreparacion, 0, s)
	}
}
func (r ArrayArticuloContenedorPreparacionWrapper) NullField(i int) {
	panic("Unsupported operation")
}

func (r ArrayArticuloContenedorPreparacionWrapper) AppendArray() types.Field {
	var v ArticuloContenedorPreparacion
	v = NewArticuloContenedorPreparacion()

	*r.Target = append(*r.Target, v)
	return &types.Record{Target: &(*r.Target)[len(*r.Target)-1]}
}
