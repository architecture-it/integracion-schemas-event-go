// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     VtexSucursalesOnboardingEvent.avsc
 */
package VtexEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type VtexSucursalesOnboardingEvent struct {
	User UserInfo `json:"User"`
}

const VtexSucursalesOnboardingEventAvroCRC64Fingerprint = "\a\x8fD\xafP\xa6\xdfZ"

func NewVtexSucursalesOnboardingEvent() VtexSucursalesOnboardingEvent {
	r := VtexSucursalesOnboardingEvent{}
	r.User = NewUserInfo()

	return r
}

func DeserializeVtexSucursalesOnboardingEvent(r io.Reader) (VtexSucursalesOnboardingEvent, error) {
	t := NewVtexSucursalesOnboardingEvent()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeVtexSucursalesOnboardingEventFromSchema(r io.Reader, schema string) (VtexSucursalesOnboardingEvent, error) {
	t := NewVtexSucursalesOnboardingEvent()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeVtexSucursalesOnboardingEvent(r VtexSucursalesOnboardingEvent, w io.Writer) error {
	var err error
	err = writeUserInfo(r.User, w)
	if err != nil {
		return err
	}
	return err
}

func (r VtexSucursalesOnboardingEvent) Serialize(w io.Writer) error {
	return writeVtexSucursalesOnboardingEvent(r, w)
}

func (r VtexSucursalesOnboardingEvent) Schema() string {
	return "{\"fields\":[{\"name\":\"User\",\"type\":{\"fields\":[{\"name\":\"Email\",\"type\":\"string\"},{\"name\":\"VtexURL\",\"type\":\"string\"},{\"name\":\"VtexAppKey\",\"type\":\"string\"},{\"name\":\"VtexAppToken\",\"type\":\"string\"},{\"name\":\"Usuario_login\",\"type\":\"long\"},{\"name\":\"Aol_id\",\"type\":\"long\"},{\"name\":\"Hostname\",\"type\":\"string\"},{\"name\":\"Contratos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"Nombre\",\"type\":\"string\"},{\"default\":null,\"name\":\"Numero\",\"type\":[\"null\",\"string\"]},{\"name\":\"Descripcion\",\"type\":\"string\"},{\"name\":\"TipoDeEnvio\",\"type\":\"string\"},{\"name\":\"ModoDeEntrega\",\"type\":\"string\"},{\"default\":false,\"name\":\"AdmitePuntosHop\",\"type\":\"boolean\"}],\"name\":\"Contrato\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"UserInfo\",\"namespace\":\"Andreani.Vtex.Events.Record.VtexSucursalesOnboarding\",\"type\":\"record\"}}],\"name\":\"Andreani.Vtex.Events.Record.VtexSucursalesOnboardingEvent\",\"type\":\"record\"}"
}

func (r VtexSucursalesOnboardingEvent) SchemaName() string {
	return "Andreani.Vtex.Events.Record.VtexSucursalesOnboardingEvent"
}

func (_ VtexSucursalesOnboardingEvent) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) SetInt(v int32)       { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) SetLong(v int64)      { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) SetString(v string)   { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *VtexSucursalesOnboardingEvent) Get(i int) types.Field {
	switch i {
	case 0:
		r.User = NewUserInfo()

		w := types.Record{Target: &r.User}

		return w

	}
	panic("Unknown field index")
}

func (r *VtexSucursalesOnboardingEvent) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *VtexSucursalesOnboardingEvent) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ VtexSucursalesOnboardingEvent) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ VtexSucursalesOnboardingEvent) AppendArray() types.Field { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) HintSize(int)             { panic("Unsupported operation") }
func (_ VtexSucursalesOnboardingEvent) Finalize()                {}

func (_ VtexSucursalesOnboardingEvent) AvroCRC64Fingerprint() []byte {
	return []byte(VtexSucursalesOnboardingEventAvroCRC64Fingerprint)
}

func (r VtexSucursalesOnboardingEvent) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["User"], err = json.Marshal(r.User)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *VtexSucursalesOnboardingEvent) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["User"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.User); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for User")
	}
	return nil
}
