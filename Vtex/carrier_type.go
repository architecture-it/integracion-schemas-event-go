// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     VtexSucursalesUpdateEvent.avsc
 */
package VtexEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type CarrierType int32

const (
	CarrierTypeAndreaniSucursal CarrierType = 0
	CarrierTypeAndreaniBigger   CarrierType = 1
)

func (e CarrierType) String() string {
	switch e {
	case CarrierTypeAndreaniSucursal:
		return "AndreaniSucursal"
	case CarrierTypeAndreaniBigger:
		return "AndreaniBigger"
	}
	return "unknown"
}

func writeCarrierType(r CarrierType, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewCarrierTypeValue(raw string) (r CarrierType, err error) {
	switch raw {
	case "AndreaniSucursal":
		return CarrierTypeAndreaniSucursal, nil
	case "AndreaniBigger":
		return CarrierTypeAndreaniBigger, nil
	}

	return -1, fmt.Errorf("invalid value for CarrierType: '%s'", raw)

}

func (b CarrierType) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *CarrierType) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewCarrierTypeValue(stringVal)
	*b = val
	return err
}

type CarrierTypeWrapper struct {
	Target *CarrierType
}

func (b CarrierTypeWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b CarrierTypeWrapper) SetInt(v int32) {
	*(b.Target) = CarrierType(v)
}

func (b CarrierTypeWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b CarrierTypeWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b CarrierTypeWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b CarrierTypeWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b CarrierTypeWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b CarrierTypeWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b CarrierTypeWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b CarrierTypeWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b CarrierTypeWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b CarrierTypeWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b CarrierTypeWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b CarrierTypeWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b CarrierTypeWrapper) Finalize() {}
