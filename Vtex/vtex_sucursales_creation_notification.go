// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     VtexSucursalesCreationNotification.avsc
 */
package VtexEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type VtexSucursalesCreationNotification struct {
	SucursalesIds []int32 `json:"SucursalesIds"`

	User UserInfo `json:"User"`

	CarrierType CarrierType `json:"CarrierType"`
}

const VtexSucursalesCreationNotificationAvroCRC64Fingerprint = "|#\xa5\xfel\x88\xeb\xe3"

func NewVtexSucursalesCreationNotification() VtexSucursalesCreationNotification {
	r := VtexSucursalesCreationNotification{}
	r.SucursalesIds = make([]int32, 0)

	r.User = NewUserInfo()

	return r
}

func DeserializeVtexSucursalesCreationNotification(r io.Reader) (VtexSucursalesCreationNotification, error) {
	t := NewVtexSucursalesCreationNotification()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeVtexSucursalesCreationNotificationFromSchema(r io.Reader, schema string) (VtexSucursalesCreationNotification, error) {
	t := NewVtexSucursalesCreationNotification()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeVtexSucursalesCreationNotification(r VtexSucursalesCreationNotification, w io.Writer) error {
	var err error
	err = writeArrayInt(r.SucursalesIds, w)
	if err != nil {
		return err
	}
	err = writeUserInfo(r.User, w)
	if err != nil {
		return err
	}
	err = writeCarrierType(r.CarrierType, w)
	if err != nil {
		return err
	}
	return err
}

func (r VtexSucursalesCreationNotification) Serialize(w io.Writer) error {
	return writeVtexSucursalesCreationNotification(r, w)
}

func (r VtexSucursalesCreationNotification) Schema() string {
	return "{\"fields\":[{\"name\":\"SucursalesIds\",\"type\":{\"items\":\"int\",\"type\":\"array\"}},{\"name\":\"User\",\"type\":{\"fields\":[{\"name\":\"Email\",\"type\":\"string\"},{\"name\":\"VtexURL\",\"type\":\"string\"},{\"name\":\"VtexAppKey\",\"type\":\"string\"},{\"name\":\"VtexAppToken\",\"type\":\"string\"},{\"name\":\"Usuario_login\",\"type\":\"long\"},{\"name\":\"Aol_id\",\"type\":\"long\"},{\"name\":\"Hostname\",\"type\":\"string\"},{\"name\":\"Contratos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"Id\",\"type\":\"string\"},{\"name\":\"Nombre\",\"type\":\"string\"},{\"name\":\"Descripcion\",\"type\":\"string\"},{\"name\":\"TipoDeEnvio\",\"type\":\"string\"},{\"name\":\"ModoDeEntrega\",\"type\":\"string\"}],\"name\":\"Contrato\",\"type\":\"record\"},\"type\":\"array\"}}],\"name\":\"UserInfo\",\"namespace\":\"Andreani.Vtex.Events.Record.VtexSucursalesOnboarding\",\"type\":\"record\"}},{\"name\":\"CarrierType\",\"type\":{\"name\":\"CarrierType\",\"namespace\":\"Andreani.Vtex.Events.Record.VtexSucursalesCreationNotification\",\"symbols\":[\"AndreaniSucursal\",\"AndreaniBigger\"],\"type\":\"enum\"}}],\"name\":\"Andreani.Vtex.Events.Record.VtexSucursalesCreationNotification\",\"type\":\"record\"}"
}

func (r VtexSucursalesCreationNotification) SchemaName() string {
	return "Andreani.Vtex.Events.Record.VtexSucursalesCreationNotification"
}

func (_ VtexSucursalesCreationNotification) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) SetInt(v int32)       { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) SetLong(v int64)      { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) SetString(v string)   { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *VtexSucursalesCreationNotification) Get(i int) types.Field {
	switch i {
	case 0:
		r.SucursalesIds = make([]int32, 0)

		w := ArrayIntWrapper{Target: &r.SucursalesIds}

		return w

	case 1:
		r.User = NewUserInfo()

		w := types.Record{Target: &r.User}

		return w

	case 2:
		w := CarrierTypeWrapper{Target: &r.CarrierType}

		return w

	}
	panic("Unknown field index")
}

func (r *VtexSucursalesCreationNotification) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *VtexSucursalesCreationNotification) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ VtexSucursalesCreationNotification) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ VtexSucursalesCreationNotification) AppendArray() types.Field { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) HintSize(int)             { panic("Unsupported operation") }
func (_ VtexSucursalesCreationNotification) Finalize()                {}

func (_ VtexSucursalesCreationNotification) AvroCRC64Fingerprint() []byte {
	return []byte(VtexSucursalesCreationNotificationAvroCRC64Fingerprint)
}

func (r VtexSucursalesCreationNotification) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["SucursalesIds"], err = json.Marshal(r.SucursalesIds)
	if err != nil {
		return nil, err
	}
	output["User"], err = json.Marshal(r.User)
	if err != nil {
		return nil, err
	}
	output["CarrierType"], err = json.Marshal(r.CarrierType)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *VtexSucursalesCreationNotification) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["SucursalesIds"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalesIds); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for SucursalesIds")
	}
	val = func() json.RawMessage {
		if v, ok := fields["User"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.User); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for User")
	}
	val = func() json.RawMessage {
		if v, ok := fields["CarrierType"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CarrierType); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for CarrierType")
	}
	return nil
}
