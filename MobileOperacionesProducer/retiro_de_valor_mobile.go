// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     RetiroDeValorMobile.avsc
 */
package MobileOperacionesProducerEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type RetiroDeValorMobile struct {
	GrupoId string `json:"grupoId"`

	Pagos []Pago `json:"pagos"`

	FechaGeneracion string `json:"fechaGeneracion"`

	Envios []string `json:"envios"`
}

const RetiroDeValorMobileAvroCRC64Fingerprint = "\xe6Pe\xfc\xa5P\x98\x9f"

func NewRetiroDeValorMobile() RetiroDeValorMobile {
	r := RetiroDeValorMobile{}
	r.Pagos = make([]Pago, 0)

	r.Envios = make([]string, 0)

	return r
}

func DeserializeRetiroDeValorMobile(r io.Reader) (RetiroDeValorMobile, error) {
	t := NewRetiroDeValorMobile()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeRetiroDeValorMobileFromSchema(r io.Reader, schema string) (RetiroDeValorMobile, error) {
	t := NewRetiroDeValorMobile()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeRetiroDeValorMobile(r RetiroDeValorMobile, w io.Writer) error {
	var err error
	err = vm.WriteString(r.GrupoId, w)
	if err != nil {
		return err
	}
	err = writeArrayPago(r.Pagos, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.FechaGeneracion, w)
	if err != nil {
		return err
	}
	err = writeArrayString(r.Envios, w)
	if err != nil {
		return err
	}
	return err
}

func (r RetiroDeValorMobile) Serialize(w io.Writer) error {
	return writeRetiroDeValorMobile(r, w)
}

func (r RetiroDeValorMobile) Schema() string {
	return "{\"fields\":[{\"name\":\"grupoId\",\"type\":\"string\"},{\"name\":\"pagos\",\"type\":{\"items\":{\"fields\":[{\"name\":\"tipoPago\",\"type\":\"string\"},{\"name\":\"importeCobrado\",\"type\":\"double\"},{\"name\":\"comprobante\",\"type\":\"string\"},{\"name\":\"detalles\",\"type\":[\"null\",{\"fields\":[{\"name\":\"bancoEmisor\",\"type\":[\"null\",\"string\"]},{\"name\":\"fechaDePago\",\"type\":[\"null\",\"string\"]},{\"name\":\"numeroDeCheque\",\"type\":[\"null\",\"string\"]},{\"name\":\"numeroDeRetencion\",\"type\":[\"null\",\"string\"]},{\"name\":\"numeroNotaCredito\",\"type\":[\"null\",\"string\"]},{\"name\":\"notas\",\"type\":[\"null\",\"string\"]}],\"name\":\"DetallePago\",\"type\":\"record\"}]}],\"name\":\"Pago\",\"type\":\"record\"},\"type\":\"array\"}},{\"name\":\"fechaGeneracion\",\"type\":\"string\"},{\"name\":\"envios\",\"type\":{\"items\":\"string\",\"type\":\"array\"}}],\"name\":\"Andreani.MobileOperacionesProducer.Events.Record.RetiroDeValorMobile\",\"type\":\"record\"}"
}

func (r RetiroDeValorMobile) SchemaName() string {
	return "Andreani.MobileOperacionesProducer.Events.Record.RetiroDeValorMobile"
}

func (_ RetiroDeValorMobile) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) SetInt(v int32)       { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) SetLong(v int64)      { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) SetString(v string)   { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *RetiroDeValorMobile) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.GrupoId}

		return w

	case 1:
		r.Pagos = make([]Pago, 0)

		w := ArrayPagoWrapper{Target: &r.Pagos}

		return w

	case 2:
		w := types.String{Target: &r.FechaGeneracion}

		return w

	case 3:
		r.Envios = make([]string, 0)

		w := ArrayStringWrapper{Target: &r.Envios}

		return w

	}
	panic("Unknown field index")
}

func (r *RetiroDeValorMobile) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *RetiroDeValorMobile) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ RetiroDeValorMobile) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) HintSize(int)                     { panic("Unsupported operation") }
func (_ RetiroDeValorMobile) Finalize()                        {}

func (_ RetiroDeValorMobile) AvroCRC64Fingerprint() []byte {
	return []byte(RetiroDeValorMobileAvroCRC64Fingerprint)
}

func (r RetiroDeValorMobile) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["grupoId"], err = json.Marshal(r.GrupoId)
	if err != nil {
		return nil, err
	}
	output["pagos"], err = json.Marshal(r.Pagos)
	if err != nil {
		return nil, err
	}
	output["fechaGeneracion"], err = json.Marshal(r.FechaGeneracion)
	if err != nil {
		return nil, err
	}
	output["envios"], err = json.Marshal(r.Envios)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *RetiroDeValorMobile) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["grupoId"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.GrupoId); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for grupoId")
	}
	val = func() json.RawMessage {
		if v, ok := fields["pagos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Pagos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for pagos")
	}
	val = func() json.RawMessage {
		if v, ok := fields["fechaGeneracion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaGeneracion); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for fechaGeneracion")
	}
	val = func() json.RawMessage {
		if v, ok := fields["envios"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Envios); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for envios")
	}
	return nil
}
