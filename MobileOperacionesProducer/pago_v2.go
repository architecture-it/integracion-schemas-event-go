// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     PagoV2.avsc
 */
package MobileOperacionesProducerEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type PagoV2 struct {
	TipoPago string `json:"tipoPago"`

	MontoCobrado string `json:"montoCobrado"`

	Comprobante string `json:"comprobante"`

	Detalles *UnionNullDetallePagoV2 `json:"detalles"`
}

const PagoV2AvroCRC64Fingerprint = "\t\x8f\x9b\x9b\x01\x06C\x81"

func NewPagoV2() PagoV2 {
	r := PagoV2{}
	return r
}

func DeserializePagoV2(r io.Reader) (PagoV2, error) {
	t := NewPagoV2()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializePagoV2FromSchema(r io.Reader, schema string) (PagoV2, error) {
	t := NewPagoV2()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writePagoV2(r PagoV2, w io.Writer) error {
	var err error
	err = vm.WriteString(r.TipoPago, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.MontoCobrado, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Comprobante, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDetallePagoV2(r.Detalles, w)
	if err != nil {
		return err
	}
	return err
}

func (r PagoV2) Serialize(w io.Writer) error {
	return writePagoV2(r, w)
}

func (r PagoV2) Schema() string {
	return "{\"fields\":[{\"name\":\"tipoPago\",\"type\":\"string\"},{\"name\":\"montoCobrado\",\"type\":\"string\"},{\"name\":\"comprobante\",\"type\":\"string\"},{\"name\":\"detalles\",\"type\":[\"null\",{\"fields\":[{\"name\":\"bancoEmisor\",\"type\":[\"null\",\"string\"]},{\"name\":\"fechaDeEmision\",\"type\":[\"null\",\"string\"]},{\"name\":\"fechaDeVencimiento\",\"type\":[\"null\",\"string\"]},{\"name\":\"numeroDeCheque\",\"type\":[\"null\",\"string\"]},{\"name\":\"numeroDeRetencion\",\"type\":[\"null\",\"string\"]},{\"name\":\"numeroNotaCredito\",\"type\":[\"null\",\"string\"]},{\"name\":\"notas\",\"type\":[\"null\",\"string\"]}],\"name\":\"DetallePagoV2\",\"type\":\"record\"}]}],\"name\":\"Andreani.MobileOperacionesProducer.Events.Record.PagoV2\",\"type\":\"record\"}"
}

func (r PagoV2) SchemaName() string {
	return "Andreani.MobileOperacionesProducer.Events.Record.PagoV2"
}

func (_ PagoV2) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ PagoV2) SetInt(v int32)       { panic("Unsupported operation") }
func (_ PagoV2) SetLong(v int64)      { panic("Unsupported operation") }
func (_ PagoV2) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ PagoV2) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ PagoV2) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ PagoV2) SetString(v string)   { panic("Unsupported operation") }
func (_ PagoV2) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *PagoV2) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.TipoPago}

		return w

	case 1:
		w := types.String{Target: &r.MontoCobrado}

		return w

	case 2:
		w := types.String{Target: &r.Comprobante}

		return w

	case 3:
		r.Detalles = NewUnionNullDetallePagoV2()

		return r.Detalles
	}
	panic("Unknown field index")
}

func (r *PagoV2) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *PagoV2) NullField(i int) {
	switch i {
	case 3:
		r.Detalles = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ PagoV2) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ PagoV2) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ PagoV2) HintSize(int)                     { panic("Unsupported operation") }
func (_ PagoV2) Finalize()                        {}

func (_ PagoV2) AvroCRC64Fingerprint() []byte {
	return []byte(PagoV2AvroCRC64Fingerprint)
}

func (r PagoV2) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["tipoPago"], err = json.Marshal(r.TipoPago)
	if err != nil {
		return nil, err
	}
	output["montoCobrado"], err = json.Marshal(r.MontoCobrado)
	if err != nil {
		return nil, err
	}
	output["comprobante"], err = json.Marshal(r.Comprobante)
	if err != nil {
		return nil, err
	}
	output["detalles"], err = json.Marshal(r.Detalles)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *PagoV2) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["tipoPago"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoPago); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for tipoPago")
	}
	val = func() json.RawMessage {
		if v, ok := fields["montoCobrado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.MontoCobrado); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for montoCobrado")
	}
	val = func() json.RawMessage {
		if v, ok := fields["comprobante"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Comprobante); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for comprobante")
	}
	val = func() json.RawMessage {
		if v, ok := fields["detalles"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Detalles); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for detalles")
	}
	return nil
}
