// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     GestionCobranzaV2.avsc
 */
package TrazasEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type GestionCobranzaV2 struct {
	Traza Traza `json:"traza"`

	Importe float64 `json:"importe"`

	Canal string `json:"canal"`

	Donde DatosSucursal `json:"donde"`

	ComponentesDeCobro []ComponenteDeCobro `json:"componentesDeCobro"`

	ReferenciaDeCliente *UnionNullString `json:"referenciaDeCliente"`
}

const GestionCobranzaV2AvroCRC64Fingerprint = "\xa66W\xf9\xa0 c\x00"

func NewGestionCobranzaV2() GestionCobranzaV2 {
	r := GestionCobranzaV2{}
	r.Traza = NewTraza()

	r.Donde = NewDatosSucursal()

	r.ComponentesDeCobro = make([]ComponenteDeCobro, 0)

	r.ReferenciaDeCliente = nil
	return r
}

func DeserializeGestionCobranzaV2(r io.Reader) (GestionCobranzaV2, error) {
	t := NewGestionCobranzaV2()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeGestionCobranzaV2FromSchema(r io.Reader, schema string) (GestionCobranzaV2, error) {
	t := NewGestionCobranzaV2()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeGestionCobranzaV2(r GestionCobranzaV2, w io.Writer) error {
	var err error
	err = writeTraza(r.Traza, w)
	if err != nil {
		return err
	}
	err = vm.WriteDouble(r.Importe, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Canal, w)
	if err != nil {
		return err
	}
	err = writeDatosSucursal(r.Donde, w)
	if err != nil {
		return err
	}
	err = writeArrayComponenteDeCobro(r.ComponentesDeCobro, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.ReferenciaDeCliente, w)
	if err != nil {
		return err
	}
	return err
}

func (r GestionCobranzaV2) Serialize(w io.Writer) error {
	return writeGestionCobranzaV2(r, w)
}

func (r GestionCobranzaV2) Schema() string {
	return "{\"fields\":[{\"name\":\"traza\",\"type\":{\"fields\":[{\"name\":\"codigoDeEnvio\",\"type\":\"string\"},{\"default\":null,\"name\":\"nombre\",\"type\":[\"null\",\"string\"]},{\"name\":\"cuando\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"codigoDeContratoInterno\",\"type\":\"string\"},{\"default\":null,\"name\":\"codigoDeContrato\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoDelEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"cicloDelEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"operador\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoDeLaRendicion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"comentario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"sucursalAsociadaAlEvento\",\"type\":[\"null\",{\"fields\":[{\"name\":\"codigo\",\"type\":\"string\"},{\"default\":null,\"name\":\"nombre\",\"type\":[\"null\",\"string\"]},{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"DatosSucursal\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"type\":\"record\"}]}],\"name\":\"Traza\",\"namespace\":\"Integracion.Esquemas\",\"type\":\"record\"}},{\"name\":\"importe\",\"type\":\"double\"},{\"name\":\"canal\",\"type\":\"string\"},{\"name\":\"donde\",\"type\":\"Integracion.Esquemas.Referencias.DatosSucursal\"},{\"name\":\"componentesDeCobro\",\"type\":{\"items\":{\"fields\":[{\"name\":\"forma\",\"type\":{\"name\":\"FormaDeCobroV2\",\"symbols\":[\"chequeDeTerceros\",\"boletaDeDepositoEnCtaCliente\",\"ajusteDeSaldo\",\"retencionesImpositivas\",\"chequeNominativo\",\"descuentoFinanciero\",\"notaCredito\",\"efectivo\",\"planillaRendicionExcCasa\",\"enviadoEnPManualAnteriormente\",\"ajusteImporteAnterior\",\"notaCreditoPami\",\"notaCreditoAConfirmarDevolucion\",\"enviaDiferenciaEnProximaLiquidacion\",\"pagoEfectivoCobrado\",\"pagoEfectivoChequePropio\",\"descuentoDevolucionMercaderia\",\"comprobanteTransferenciaACliente\",\"impuestoAlCheque\",\"saldoAFavor\",\"agregaPagoOtraFactura\",\"enviadoEnLiquidacionAnterior\",\"cartaCompromisoExcCasa\",\"visaDebitoCredito\",\"autorizacionAdjunta\",\"reciboOficialAndreani\",\"descuentoNotaAdjunta\",\"pagoFacilComprobante\",\"chequeElectronico\",\"mercadoPago\",\"ajustePorPendiente\",\"cbu\",\"cajaUnificadaExcCasa\"],\"type\":\"enum\"}},{\"default\":null,\"name\":\"banco\",\"type\":[\"null\",{\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"descripcion\",\"type\":\"string\"}],\"name\":\"Banco\",\"type\":\"record\"}]},{\"name\":\"monto\",\"type\":\"double\"},{\"default\":null,\"name\":\"numeroDocumento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"fecha\",\"type\":[\"null\",\"string\"]}],\"name\":\"ComponenteDeCobro\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"type\":\"record\"},\"type\":\"array\"}},{\"default\":null,\"name\":\"referenciaDeCliente\",\"type\":[\"null\",\"string\"]}],\"name\":\"Integracion.Esquemas.Trazas.GestionCobranzaV2\",\"type\":\"record\"}"
}

func (r GestionCobranzaV2) SchemaName() string {
	return "Integracion.Esquemas.Trazas.GestionCobranzaV2"
}

func (_ GestionCobranzaV2) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ GestionCobranzaV2) SetInt(v int32)       { panic("Unsupported operation") }
func (_ GestionCobranzaV2) SetLong(v int64)      { panic("Unsupported operation") }
func (_ GestionCobranzaV2) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ GestionCobranzaV2) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ GestionCobranzaV2) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ GestionCobranzaV2) SetString(v string)   { panic("Unsupported operation") }
func (_ GestionCobranzaV2) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *GestionCobranzaV2) Get(i int) types.Field {
	switch i {
	case 0:
		r.Traza = NewTraza()

		w := types.Record{Target: &r.Traza}

		return w

	case 1:
		w := types.Double{Target: &r.Importe}

		return w

	case 2:
		w := types.String{Target: &r.Canal}

		return w

	case 3:
		r.Donde = NewDatosSucursal()

		w := types.Record{Target: &r.Donde}

		return w

	case 4:
		r.ComponentesDeCobro = make([]ComponenteDeCobro, 0)

		w := ArrayComponenteDeCobroWrapper{Target: &r.ComponentesDeCobro}

		return w

	case 5:
		r.ReferenciaDeCliente = NewUnionNullString()

		return r.ReferenciaDeCliente
	}
	panic("Unknown field index")
}

func (r *GestionCobranzaV2) SetDefault(i int) {
	switch i {
	case 5:
		r.ReferenciaDeCliente = nil
		return
	}
	panic("Unknown field index")
}

func (r *GestionCobranzaV2) NullField(i int) {
	switch i {
	case 5:
		r.ReferenciaDeCliente = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ GestionCobranzaV2) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ GestionCobranzaV2) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ GestionCobranzaV2) HintSize(int)                     { panic("Unsupported operation") }
func (_ GestionCobranzaV2) Finalize()                        {}

func (_ GestionCobranzaV2) AvroCRC64Fingerprint() []byte {
	return []byte(GestionCobranzaV2AvroCRC64Fingerprint)
}

func (r GestionCobranzaV2) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["traza"], err = json.Marshal(r.Traza)
	if err != nil {
		return nil, err
	}
	output["importe"], err = json.Marshal(r.Importe)
	if err != nil {
		return nil, err
	}
	output["canal"], err = json.Marshal(r.Canal)
	if err != nil {
		return nil, err
	}
	output["donde"], err = json.Marshal(r.Donde)
	if err != nil {
		return nil, err
	}
	output["componentesDeCobro"], err = json.Marshal(r.ComponentesDeCobro)
	if err != nil {
		return nil, err
	}
	output["referenciaDeCliente"], err = json.Marshal(r.ReferenciaDeCliente)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *GestionCobranzaV2) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["traza"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Traza); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for traza")
	}
	val = func() json.RawMessage {
		if v, ok := fields["importe"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Importe); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for importe")
	}
	val = func() json.RawMessage {
		if v, ok := fields["canal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Canal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for canal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["donde"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Donde); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for donde")
	}
	val = func() json.RawMessage {
		if v, ok := fields["componentesDeCobro"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ComponentesDeCobro); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for componentesDeCobro")
	}
	val = func() json.RawMessage {
		if v, ok := fields["referenciaDeCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReferenciaDeCliente); err != nil {
			return err
		}
	} else {
		r.ReferenciaDeCliente = NewUnionNullString()

		r.ReferenciaDeCliente = nil
	}
	return nil
}
