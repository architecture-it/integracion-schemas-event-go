// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     AsignacionACaja.avsc
 */
package TrazasEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type AsignacionACaja struct {
	Traza Traza `json:"traza"`

	Caja string `json:"caja"`

	Fajo string `json:"fajo"`

	SucursalActual DatosSucursal `json:"sucursalActual"`

	Operador *UnionNullString `json:"operador"`

	FechaVencimiento *UnionNullString `json:"fechaVencimiento"`

	UltimoDiaDeCustodia *UnionNullString `json:"ultimoDiaDeCustodia"`
}

const AsignacionACajaAvroCRC64Fingerprint = "A[\xcf\xf8X\xf1\xfcf"

func NewAsignacionACaja() AsignacionACaja {
	r := AsignacionACaja{}
	r.Traza = NewTraza()

	r.SucursalActual = NewDatosSucursal()

	r.Operador = nil
	r.FechaVencimiento = nil
	r.UltimoDiaDeCustodia = nil
	return r
}

func DeserializeAsignacionACaja(r io.Reader) (AsignacionACaja, error) {
	t := NewAsignacionACaja()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeAsignacionACajaFromSchema(r io.Reader, schema string) (AsignacionACaja, error) {
	t := NewAsignacionACaja()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeAsignacionACaja(r AsignacionACaja, w io.Writer) error {
	var err error
	err = writeTraza(r.Traza, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Caja, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Fajo, w)
	if err != nil {
		return err
	}
	err = writeDatosSucursal(r.SucursalActual, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Operador, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaVencimiento, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.UltimoDiaDeCustodia, w)
	if err != nil {
		return err
	}
	return err
}

func (r AsignacionACaja) Serialize(w io.Writer) error {
	return writeAsignacionACaja(r, w)
}

func (r AsignacionACaja) Schema() string {
	return "{\"fields\":[{\"name\":\"traza\",\"type\":{\"fields\":[{\"name\":\"codigoDeEnvio\",\"type\":\"string\"},{\"default\":null,\"name\":\"nombre\",\"type\":[\"null\",\"string\"]},{\"name\":\"cuando\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"codigoDeContratoInterno\",\"type\":\"string\"},{\"default\":null,\"name\":\"codigoDeContrato\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoDelEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"cicloDelEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"operador\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoDeLaRendicion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"comentario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"sucursalAsociadaAlEvento\",\"type\":[\"null\",{\"fields\":[{\"name\":\"codigo\",\"type\":\"string\"},{\"default\":null,\"name\":\"nombre\",\"type\":[\"null\",\"string\"]},{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"DatosSucursal\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"type\":\"record\"}]}],\"name\":\"Traza\",\"namespace\":\"Integracion.Esquemas\",\"type\":\"record\"}},{\"name\":\"caja\",\"type\":\"string\"},{\"name\":\"fajo\",\"type\":\"string\"},{\"name\":\"sucursalActual\",\"type\":\"Integracion.Esquemas.Referencias.DatosSucursal\"},{\"default\":null,\"name\":\"operador\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"fechaVencimiento\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"ultimoDiaDeCustodia\",\"type\":[\"null\",\"string\"]}],\"name\":\"Integracion.Esquemas.Trazas.AsignacionACaja\",\"type\":\"record\"}"
}

func (r AsignacionACaja) SchemaName() string {
	return "Integracion.Esquemas.Trazas.AsignacionACaja"
}

func (_ AsignacionACaja) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ AsignacionACaja) SetInt(v int32)       { panic("Unsupported operation") }
func (_ AsignacionACaja) SetLong(v int64)      { panic("Unsupported operation") }
func (_ AsignacionACaja) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ AsignacionACaja) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ AsignacionACaja) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ AsignacionACaja) SetString(v string)   { panic("Unsupported operation") }
func (_ AsignacionACaja) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *AsignacionACaja) Get(i int) types.Field {
	switch i {
	case 0:
		r.Traza = NewTraza()

		w := types.Record{Target: &r.Traza}

		return w

	case 1:
		w := types.String{Target: &r.Caja}

		return w

	case 2:
		w := types.String{Target: &r.Fajo}

		return w

	case 3:
		r.SucursalActual = NewDatosSucursal()

		w := types.Record{Target: &r.SucursalActual}

		return w

	case 4:
		r.Operador = NewUnionNullString()

		return r.Operador
	case 5:
		r.FechaVencimiento = NewUnionNullString()

		return r.FechaVencimiento
	case 6:
		r.UltimoDiaDeCustodia = NewUnionNullString()

		return r.UltimoDiaDeCustodia
	}
	panic("Unknown field index")
}

func (r *AsignacionACaja) SetDefault(i int) {
	switch i {
	case 4:
		r.Operador = nil
		return
	case 5:
		r.FechaVencimiento = nil
		return
	case 6:
		r.UltimoDiaDeCustodia = nil
		return
	}
	panic("Unknown field index")
}

func (r *AsignacionACaja) NullField(i int) {
	switch i {
	case 4:
		r.Operador = nil
		return
	case 5:
		r.FechaVencimiento = nil
		return
	case 6:
		r.UltimoDiaDeCustodia = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ AsignacionACaja) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ AsignacionACaja) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ AsignacionACaja) HintSize(int)                     { panic("Unsupported operation") }
func (_ AsignacionACaja) Finalize()                        {}

func (_ AsignacionACaja) AvroCRC64Fingerprint() []byte {
	return []byte(AsignacionACajaAvroCRC64Fingerprint)
}

func (r AsignacionACaja) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["traza"], err = json.Marshal(r.Traza)
	if err != nil {
		return nil, err
	}
	output["caja"], err = json.Marshal(r.Caja)
	if err != nil {
		return nil, err
	}
	output["fajo"], err = json.Marshal(r.Fajo)
	if err != nil {
		return nil, err
	}
	output["sucursalActual"], err = json.Marshal(r.SucursalActual)
	if err != nil {
		return nil, err
	}
	output["operador"], err = json.Marshal(r.Operador)
	if err != nil {
		return nil, err
	}
	output["fechaVencimiento"], err = json.Marshal(r.FechaVencimiento)
	if err != nil {
		return nil, err
	}
	output["ultimoDiaDeCustodia"], err = json.Marshal(r.UltimoDiaDeCustodia)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *AsignacionACaja) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["traza"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Traza); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for traza")
	}
	val = func() json.RawMessage {
		if v, ok := fields["caja"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Caja); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for caja")
	}
	val = func() json.RawMessage {
		if v, ok := fields["fajo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Fajo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for fajo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sucursalActual"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalActual); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sucursalActual")
	}
	val = func() json.RawMessage {
		if v, ok := fields["operador"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Operador); err != nil {
			return err
		}
	} else {
		r.Operador = NewUnionNullString()

		r.Operador = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["fechaVencimiento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaVencimiento); err != nil {
			return err
		}
	} else {
		r.FechaVencimiento = NewUnionNullString()

		r.FechaVencimiento = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["ultimoDiaDeCustodia"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.UltimoDiaDeCustodia); err != nil {
			return err
		}
	} else {
		r.UltimoDiaDeCustodia = NewUnionNullString()

		r.UltimoDiaDeCustodia = nil
	}
	return nil
}
