// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     Visita.avsc
 */
package TrazasEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type LugarDeRetiroEntrega struct {
	DatosSucursal *UnionNullDatosSucursal `json:"datosSucursal"`

	Domicilio *UnionNullDireccion `json:"domicilio"`

	CodigoPostal *UnionNullString `json:"codigoPostal"`

	Descripcion *UnionNullString `json:"descripcion"`

	Localidad *UnionNullString `json:"localidad"`

	EsLocal *UnionNullString `json:"esLocal"`

	Pais *UnionNullString `json:"pais"`

	Region *UnionNullString `json:"region"`
}

const LugarDeRetiroEntregaAvroCRC64Fingerprint = "M=8)ÙŸe\xe4"

func NewLugarDeRetiroEntrega() LugarDeRetiroEntrega {
	r := LugarDeRetiroEntrega{}
	r.DatosSucursal = nil
	r.Domicilio = nil
	r.CodigoPostal = nil
	r.Descripcion = nil
	r.Localidad = nil
	r.EsLocal = nil
	r.Pais = nil
	r.Region = nil
	return r
}

func DeserializeLugarDeRetiroEntrega(r io.Reader) (LugarDeRetiroEntrega, error) {
	t := NewLugarDeRetiroEntrega()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeLugarDeRetiroEntregaFromSchema(r io.Reader, schema string) (LugarDeRetiroEntrega, error) {
	t := NewLugarDeRetiroEntrega()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeLugarDeRetiroEntrega(r LugarDeRetiroEntrega, w io.Writer) error {
	var err error
	err = writeUnionNullDatosSucursal(r.DatosSucursal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDireccion(r.Domicilio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.CodigoPostal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Descripcion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Localidad, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EsLocal, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Pais, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Region, w)
	if err != nil {
		return err
	}
	return err
}

func (r LugarDeRetiroEntrega) Serialize(w io.Writer) error {
	return writeLugarDeRetiroEntrega(r, w)
}

func (r LugarDeRetiroEntrega) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"datosSucursal\",\"type\":[\"null\",{\"fields\":[{\"name\":\"codigo\",\"type\":\"string\"},{\"default\":null,\"name\":\"nombre\",\"type\":[\"null\",\"string\"]},{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"DatosSucursal\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"domicilio\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"abreviaturaProvincia\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"calle\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigoDeDireccion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigoCiudad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"codigoPostal\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"nombreProvincia\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"numero\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"telefono\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"doc\":\"segun ISO -3166-2 (https://es.wikipedia.org/wiki/ISO_3166-2:AR)\",\"name\":\"codigoISOProvincia\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"doc\":\"segun ISO 3166-1 alpha-2 (https://es.wikipedia.org/wiki/ISO_3166-1#Tabla_de_c.C3.B3digos_alfa-2_asignados_o_reservados)\",\"name\":\"codigoISOPais\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"localidad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"componentesDeDireccion\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"string\"}]},{\"default\":null,\"name\":\"coordenadas\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"latitud\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"longitud\",\"type\":[\"null\",\"double\"]},{\"default\":null,\"name\":\"altura\",\"type\":[\"null\",\"double\"]}],\"name\":\"GeoReferencia\",\"type\":\"record\"}]}],\"name\":\"Direccion\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"codigoPostal\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"descripcion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"localidad\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"esLocal\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"pais\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"region\",\"type\":[\"null\",\"string\"]}],\"name\":\"Integracion.Esquemas.Referencias.LugarDeRetiroEntrega\",\"type\":\"record\"}"
}

func (r LugarDeRetiroEntrega) SchemaName() string {
	return "Integracion.Esquemas.Referencias.LugarDeRetiroEntrega"
}

func (_ LugarDeRetiroEntrega) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) SetInt(v int32)       { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) SetLong(v int64)      { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) SetString(v string)   { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *LugarDeRetiroEntrega) Get(i int) types.Field {
	switch i {
	case 0:
		r.DatosSucursal = NewUnionNullDatosSucursal()

		return r.DatosSucursal
	case 1:
		r.Domicilio = NewUnionNullDireccion()

		return r.Domicilio
	case 2:
		r.CodigoPostal = NewUnionNullString()

		return r.CodigoPostal
	case 3:
		r.Descripcion = NewUnionNullString()

		return r.Descripcion
	case 4:
		r.Localidad = NewUnionNullString()

		return r.Localidad
	case 5:
		r.EsLocal = NewUnionNullString()

		return r.EsLocal
	case 6:
		r.Pais = NewUnionNullString()

		return r.Pais
	case 7:
		r.Region = NewUnionNullString()

		return r.Region
	}
	panic("Unknown field index")
}

func (r *LugarDeRetiroEntrega) SetDefault(i int) {
	switch i {
	case 0:
		r.DatosSucursal = nil
		return
	case 1:
		r.Domicilio = nil
		return
	case 2:
		r.CodigoPostal = nil
		return
	case 3:
		r.Descripcion = nil
		return
	case 4:
		r.Localidad = nil
		return
	case 5:
		r.EsLocal = nil
		return
	case 6:
		r.Pais = nil
		return
	case 7:
		r.Region = nil
		return
	}
	panic("Unknown field index")
}

func (r *LugarDeRetiroEntrega) NullField(i int) {
	switch i {
	case 0:
		r.DatosSucursal = nil
		return
	case 1:
		r.Domicilio = nil
		return
	case 2:
		r.CodigoPostal = nil
		return
	case 3:
		r.Descripcion = nil
		return
	case 4:
		r.Localidad = nil
		return
	case 5:
		r.EsLocal = nil
		return
	case 6:
		r.Pais = nil
		return
	case 7:
		r.Region = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ LugarDeRetiroEntrega) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) HintSize(int)                     { panic("Unsupported operation") }
func (_ LugarDeRetiroEntrega) Finalize()                        {}

func (_ LugarDeRetiroEntrega) AvroCRC64Fingerprint() []byte {
	return []byte(LugarDeRetiroEntregaAvroCRC64Fingerprint)
}

func (r LugarDeRetiroEntrega) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["datosSucursal"], err = json.Marshal(r.DatosSucursal)
	if err != nil {
		return nil, err
	}
	output["domicilio"], err = json.Marshal(r.Domicilio)
	if err != nil {
		return nil, err
	}
	output["codigoPostal"], err = json.Marshal(r.CodigoPostal)
	if err != nil {
		return nil, err
	}
	output["descripcion"], err = json.Marshal(r.Descripcion)
	if err != nil {
		return nil, err
	}
	output["localidad"], err = json.Marshal(r.Localidad)
	if err != nil {
		return nil, err
	}
	output["esLocal"], err = json.Marshal(r.EsLocal)
	if err != nil {
		return nil, err
	}
	output["pais"], err = json.Marshal(r.Pais)
	if err != nil {
		return nil, err
	}
	output["region"], err = json.Marshal(r.Region)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *LugarDeRetiroEntrega) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["datosSucursal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DatosSucursal); err != nil {
			return err
		}
	} else {
		r.DatosSucursal = NewUnionNullDatosSucursal()

		r.DatosSucursal = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["domicilio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Domicilio); err != nil {
			return err
		}
	} else {
		r.Domicilio = NewUnionNullDireccion()

		r.Domicilio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["codigoPostal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoPostal); err != nil {
			return err
		}
	} else {
		r.CodigoPostal = NewUnionNullString()

		r.CodigoPostal = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["descripcion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Descripcion); err != nil {
			return err
		}
	} else {
		r.Descripcion = NewUnionNullString()

		r.Descripcion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["localidad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Localidad); err != nil {
			return err
		}
	} else {
		r.Localidad = NewUnionNullString()

		r.Localidad = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["esLocal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EsLocal); err != nil {
			return err
		}
	} else {
		r.EsLocal = NewUnionNullString()

		r.EsLocal = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["pais"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Pais); err != nil {
			return err
		}
	} else {
		r.Pais = NewUnionNullString()

		r.Pais = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["region"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Region); err != nil {
			return err
		}
	} else {
		r.Region = NewUnionNullString()

		r.Region = nil
	}
	return nil
}
