// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     BultoNovedadConEnvioEnCourier.avsc
 */
package TrazasEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type BultoNovedadConEnvioEnCourier struct {
	Traza TrazaDeBulto `json:"traza"`

	QueNovedad string `json:"queNovedad"`

	Courier string `json:"courier"`

	Resultado *UnionNullString `json:"resultado"`

	DatosAdicionales *UnionNullArrayMetadato `json:"datosAdicionales"`
}

const BultoNovedadConEnvioEnCourierAvroCRC64Fingerprint = "f\x99\xaf\x9c\xa7\xd4/\x8d"

func NewBultoNovedadConEnvioEnCourier() BultoNovedadConEnvioEnCourier {
	r := BultoNovedadConEnvioEnCourier{}
	r.Traza = NewTrazaDeBulto()

	r.Resultado = nil
	r.DatosAdicionales = nil
	return r
}

func DeserializeBultoNovedadConEnvioEnCourier(r io.Reader) (BultoNovedadConEnvioEnCourier, error) {
	t := NewBultoNovedadConEnvioEnCourier()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeBultoNovedadConEnvioEnCourierFromSchema(r io.Reader, schema string) (BultoNovedadConEnvioEnCourier, error) {
	t := NewBultoNovedadConEnvioEnCourier()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeBultoNovedadConEnvioEnCourier(r BultoNovedadConEnvioEnCourier, w io.Writer) error {
	var err error
	err = writeTrazaDeBulto(r.Traza, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.QueNovedad, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Courier, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Resultado, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayMetadato(r.DatosAdicionales, w)
	if err != nil {
		return err
	}
	return err
}

func (r BultoNovedadConEnvioEnCourier) Serialize(w io.Writer) error {
	return writeBultoNovedadConEnvioEnCourier(r, w)
}

func (r BultoNovedadConEnvioEnCourier) Schema() string {
	return "{\"fields\":[{\"name\":\"traza\",\"type\":{\"fields\":[{\"name\":\"codigoDeEnvio\",\"type\":\"string\"},{\"name\":\"numeroDeBulto\",\"type\":\"string\"},{\"default\":null,\"name\":\"nombre\",\"type\":[\"null\",\"string\"]},{\"name\":\"cuando\",\"type\":{\"logicalType\":\"timestamp-millis\",\"type\":\"long\"}},{\"name\":\"codigoDeContratoInterno\",\"type\":\"string\"},{\"default\":null,\"name\":\"codigoDeContrato\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoDelEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"cicloDelEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"operador\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"estadoDeLaRendicion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"comentario\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"sucursalAsociadaAlEvento\",\"type\":[\"null\",{\"fields\":[{\"name\":\"codigo\",\"type\":\"string\"},{\"default\":null,\"name\":\"nombre\",\"type\":[\"null\",\"string\"]},{\"name\":\"id\",\"type\":\"string\"}],\"name\":\"DatosSucursal\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"tipoDeBulto\",\"type\":[\"null\",{\"name\":\"TipoDeBulto\",\"symbols\":[\"Paquete\",\"Contenedor\"],\"type\":\"enum\"}]}],\"name\":\"TrazaDeBulto\",\"namespace\":\"Integracion.Esquemas.Bulto.Referencias\",\"type\":\"record\"}},{\"name\":\"queNovedad\",\"type\":\"string\"},{\"name\":\"courier\",\"type\":\"string\"},{\"default\":null,\"name\":\"resultado\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"datosAdicionales\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"name\":\"meta\",\"type\":\"string\"},{\"name\":\"contenido\",\"type\":\"string\"}],\"name\":\"Metadato\",\"namespace\":\"Integracion.Esquemas.Referencias\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"Integracion.Esquemas.Bulto.Trazas.BultoNovedadConEnvioEnCourier\",\"type\":\"record\"}"
}

func (r BultoNovedadConEnvioEnCourier) SchemaName() string {
	return "Integracion.Esquemas.Bulto.Trazas.BultoNovedadConEnvioEnCourier"
}

func (_ BultoNovedadConEnvioEnCourier) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) SetInt(v int32)       { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) SetLong(v int64)      { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) SetString(v string)   { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *BultoNovedadConEnvioEnCourier) Get(i int) types.Field {
	switch i {
	case 0:
		r.Traza = NewTrazaDeBulto()

		w := types.Record{Target: &r.Traza}

		return w

	case 1:
		w := types.String{Target: &r.QueNovedad}

		return w

	case 2:
		w := types.String{Target: &r.Courier}

		return w

	case 3:
		r.Resultado = NewUnionNullString()

		return r.Resultado
	case 4:
		r.DatosAdicionales = NewUnionNullArrayMetadato()

		return r.DatosAdicionales
	}
	panic("Unknown field index")
}

func (r *BultoNovedadConEnvioEnCourier) SetDefault(i int) {
	switch i {
	case 3:
		r.Resultado = nil
		return
	case 4:
		r.DatosAdicionales = nil
		return
	}
	panic("Unknown field index")
}

func (r *BultoNovedadConEnvioEnCourier) NullField(i int) {
	switch i {
	case 3:
		r.Resultado = nil
		return
	case 4:
		r.DatosAdicionales = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ BultoNovedadConEnvioEnCourier) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ BultoNovedadConEnvioEnCourier) AppendArray() types.Field { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) HintSize(int)             { panic("Unsupported operation") }
func (_ BultoNovedadConEnvioEnCourier) Finalize()                {}

func (_ BultoNovedadConEnvioEnCourier) AvroCRC64Fingerprint() []byte {
	return []byte(BultoNovedadConEnvioEnCourierAvroCRC64Fingerprint)
}

func (r BultoNovedadConEnvioEnCourier) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["traza"], err = json.Marshal(r.Traza)
	if err != nil {
		return nil, err
	}
	output["queNovedad"], err = json.Marshal(r.QueNovedad)
	if err != nil {
		return nil, err
	}
	output["courier"], err = json.Marshal(r.Courier)
	if err != nil {
		return nil, err
	}
	output["resultado"], err = json.Marshal(r.Resultado)
	if err != nil {
		return nil, err
	}
	output["datosAdicionales"], err = json.Marshal(r.DatosAdicionales)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *BultoNovedadConEnvioEnCourier) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["traza"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Traza); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for traza")
	}
	val = func() json.RawMessage {
		if v, ok := fields["queNovedad"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.QueNovedad); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for queNovedad")
	}
	val = func() json.RawMessage {
		if v, ok := fields["courier"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Courier); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for courier")
	}
	val = func() json.RawMessage {
		if v, ok := fields["resultado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Resultado); err != nil {
			return err
		}
	} else {
		r.Resultado = NewUnionNullString()

		r.Resultado = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["datosAdicionales"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DatosAdicionales); err != nil {
			return err
		}
	} else {
		r.DatosAdicionales = NewUnionNullArrayMetadato()

		r.DatosAdicionales = nil
	}
	return nil
}
