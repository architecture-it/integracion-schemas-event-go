// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     HdrDms.avsc
 */
package IntegracionHdrDmsEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type HdrDms struct {
	Action string `json:"Action"`

	Request *UnionNullRequest `json:"Request"`
}

const HdrDmsAvroCRC64Fingerprint = "UbN{S2\xf1\x9b"

func NewHdrDms() HdrDms {
	r := HdrDms{}
	r.Request = nil
	return r
}

func DeserializeHdrDms(r io.Reader) (HdrDms, error) {
	t := NewHdrDms()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeHdrDmsFromSchema(r io.Reader, schema string) (HdrDms, error) {
	t := NewHdrDms()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeHdrDms(r HdrDms, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Action, w)
	if err != nil {
		return err
	}
	err = writeUnionNullRequest(r.Request, w)
	if err != nil {
		return err
	}
	return err
}

func (r HdrDms) Serialize(w io.Writer) error {
	return writeHdrDms(r, w)
}

func (r HdrDms) Schema() string {
	return "{\"fields\":[{\"name\":\"Action\",\"type\":\"string\"},{\"default\":null,\"name\":\"Request\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"SheetRouteId\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SheetRoute\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Shipment\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Motive\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"SubMotive\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Observation\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Fecha\",\"type\":[\"null\",\"string\"]}],\"name\":\"Request\",\"type\":\"record\"}]}],\"name\":\"Andreani.IntegracionHdrDms.Events.Common.HdrDms\",\"type\":\"record\"}"
}

func (r HdrDms) SchemaName() string {
	return "Andreani.IntegracionHdrDms.Events.Common.HdrDms"
}

func (_ HdrDms) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ HdrDms) SetInt(v int32)       { panic("Unsupported operation") }
func (_ HdrDms) SetLong(v int64)      { panic("Unsupported operation") }
func (_ HdrDms) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ HdrDms) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ HdrDms) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ HdrDms) SetString(v string)   { panic("Unsupported operation") }
func (_ HdrDms) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *HdrDms) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Action}

		return w

	case 1:
		r.Request = NewUnionNullRequest()

		return r.Request
	}
	panic("Unknown field index")
}

func (r *HdrDms) SetDefault(i int) {
	switch i {
	case 1:
		r.Request = nil
		return
	}
	panic("Unknown field index")
}

func (r *HdrDms) NullField(i int) {
	switch i {
	case 1:
		r.Request = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ HdrDms) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ HdrDms) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ HdrDms) HintSize(int)                     { panic("Unsupported operation") }
func (_ HdrDms) Finalize()                        {}

func (_ HdrDms) AvroCRC64Fingerprint() []byte {
	return []byte(HdrDmsAvroCRC64Fingerprint)
}

func (r HdrDms) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Action"], err = json.Marshal(r.Action)
	if err != nil {
		return nil, err
	}
	output["Request"], err = json.Marshal(r.Request)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *HdrDms) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Action"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Action); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for Action")
	}
	val = func() json.RawMessage {
		if v, ok := fields["Request"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Request); err != nil {
			return err
		}
	} else {
		r.Request = NewUnionNullRequest()

		r.Request = nil
	}
	return nil
}
