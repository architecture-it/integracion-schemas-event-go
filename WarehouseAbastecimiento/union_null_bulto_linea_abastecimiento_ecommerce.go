// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     LineaAbastecimientoEcommerce.avsc
 */
package WarehouseAbastecimientoEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullBultoLineaAbastecimientoEcommerceTypeEnum int

const (
	UnionNullBultoLineaAbastecimientoEcommerceTypeEnumBultoLineaAbastecimientoEcommerce UnionNullBultoLineaAbastecimientoEcommerceTypeEnum = 1
)

type UnionNullBultoLineaAbastecimientoEcommerce struct {
	Null                              *types.NullVal
	BultoLineaAbastecimientoEcommerce BultoLineaAbastecimientoEcommerce
	UnionType                         UnionNullBultoLineaAbastecimientoEcommerceTypeEnum
}

func writeUnionNullBultoLineaAbastecimientoEcommerce(r *UnionNullBultoLineaAbastecimientoEcommerce, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullBultoLineaAbastecimientoEcommerceTypeEnumBultoLineaAbastecimientoEcommerce:
		return writeBultoLineaAbastecimientoEcommerce(r.BultoLineaAbastecimientoEcommerce, w)
	}
	return fmt.Errorf("invalid value for *UnionNullBultoLineaAbastecimientoEcommerce")
}

func NewUnionNullBultoLineaAbastecimientoEcommerce() *UnionNullBultoLineaAbastecimientoEcommerce {
	return &UnionNullBultoLineaAbastecimientoEcommerce{}
}

func (r *UnionNullBultoLineaAbastecimientoEcommerce) Serialize(w io.Writer) error {
	return writeUnionNullBultoLineaAbastecimientoEcommerce(r, w)
}

func DeserializeUnionNullBultoLineaAbastecimientoEcommerce(r io.Reader) (*UnionNullBultoLineaAbastecimientoEcommerce, error) {
	t := NewUnionNullBultoLineaAbastecimientoEcommerce()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullBultoLineaAbastecimientoEcommerceFromSchema(r io.Reader, schema string) (*UnionNullBultoLineaAbastecimientoEcommerce, error) {
	t := NewUnionNullBultoLineaAbastecimientoEcommerce()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullBultoLineaAbastecimientoEcommerce) Schema() string {
	return "[\"null\",{\"fields\":[{\"name\":\"Cantidad\",\"type\":\"int\"},{\"name\":\"CodigoExterno\",\"type\":\"string\"},{\"name\":\"BultoId\",\"type\":\"string\"}],\"name\":\"BultoLineaAbastecimientoEcommerce\",\"type\":\"record\"}]"
}

func (_ *UnionNullBultoLineaAbastecimientoEcommerce) SetBoolean(v bool) {
	panic("Unsupported operation")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) SetInt(v int32) { panic("Unsupported operation") }
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) SetBytes(v []byte) {
	panic("Unsupported operation")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) SetString(v string) {
	panic("Unsupported operation")
}

func (r *UnionNullBultoLineaAbastecimientoEcommerce) SetLong(v int64) {

	r.UnionType = (UnionNullBultoLineaAbastecimientoEcommerceTypeEnum)(v)
}

func (r *UnionNullBultoLineaAbastecimientoEcommerce) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		r.BultoLineaAbastecimientoEcommerce = NewBultoLineaAbastecimientoEcommerce()
		return &types.Record{Target: (&r.BultoLineaAbastecimientoEcommerce)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) NullField(i int) { panic("Unsupported operation") }
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) HintSize(i int)  { panic("Unsupported operation") }
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) SetDefault(i int) {
	panic("Unsupported operation")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullBultoLineaAbastecimientoEcommerce) Finalize() {}

func (r *UnionNullBultoLineaAbastecimientoEcommerce) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullBultoLineaAbastecimientoEcommerceTypeEnumBultoLineaAbastecimientoEcommerce:
		return json.Marshal(map[string]interface{}{"Andreani.WarehouseAbastecimiento.Events.Record.BultoLineaAbastecimientoEcommerce": r.BultoLineaAbastecimientoEcommerce})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullBultoLineaAbastecimientoEcommerce")
}

func (r *UnionNullBultoLineaAbastecimientoEcommerce) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["Andreani.WarehouseAbastecimiento.Events.Record.BultoLineaAbastecimientoEcommerce"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.BultoLineaAbastecimientoEcommerce)
	}
	return fmt.Errorf("invalid value for *UnionNullBultoLineaAbastecimientoEcommerce")
}
