// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     JiraWebhookEventGeneric.avsc
 */
package appnameEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type JiraWebhookEventGeneric struct {
	Timestamp *UnionNullLong `json:"timestamp"`

	WebhookEvent *UnionNullString `json:"webhookEvent"`

	RawJson *UnionNullString `json:"rawJson"`
}

const JiraWebhookEventGenericAvroCRC64Fingerprint = "\x86\x9a[>\xc3>q\xc7"

func NewJiraWebhookEventGeneric() JiraWebhookEventGeneric {
	r := JiraWebhookEventGeneric{}
	r.Timestamp = nil
	r.WebhookEvent = nil
	r.RawJson = nil
	return r
}

func DeserializeJiraWebhookEventGeneric(r io.Reader) (JiraWebhookEventGeneric, error) {
	t := NewJiraWebhookEventGeneric()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeJiraWebhookEventGenericFromSchema(r io.Reader, schema string) (JiraWebhookEventGeneric, error) {
	t := NewJiraWebhookEventGeneric()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeJiraWebhookEventGeneric(r JiraWebhookEventGeneric, w io.Writer) error {
	var err error
	err = writeUnionNullLong(r.Timestamp, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.WebhookEvent, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RawJson, w)
	if err != nil {
		return err
	}
	return err
}

func (r JiraWebhookEventGeneric) Serialize(w io.Writer) error {
	return writeJiraWebhookEventGeneric(r, w)
}

func (r JiraWebhookEventGeneric) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"timestamp\",\"type\":[\"null\",\"long\"]},{\"default\":null,\"name\":\"webhookEvent\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"rawJson\",\"type\":[\"null\",\"string\"]}],\"name\":\"Andreani.jira.webhook.JiraWebhookEventGeneric\",\"type\":\"record\"}"
}

func (r JiraWebhookEventGeneric) SchemaName() string {
	return "Andreani.jira.webhook.JiraWebhookEventGeneric"
}

func (_ JiraWebhookEventGeneric) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) SetInt(v int32)       { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) SetLong(v int64)      { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) SetString(v string)   { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *JiraWebhookEventGeneric) Get(i int) types.Field {
	switch i {
	case 0:
		r.Timestamp = NewUnionNullLong()

		return r.Timestamp
	case 1:
		r.WebhookEvent = NewUnionNullString()

		return r.WebhookEvent
	case 2:
		r.RawJson = NewUnionNullString()

		return r.RawJson
	}
	panic("Unknown field index")
}

func (r *JiraWebhookEventGeneric) SetDefault(i int) {
	switch i {
	case 0:
		r.Timestamp = nil
		return
	case 1:
		r.WebhookEvent = nil
		return
	case 2:
		r.RawJson = nil
		return
	}
	panic("Unknown field index")
}

func (r *JiraWebhookEventGeneric) NullField(i int) {
	switch i {
	case 0:
		r.Timestamp = nil
		return
	case 1:
		r.WebhookEvent = nil
		return
	case 2:
		r.RawJson = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ JiraWebhookEventGeneric) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) HintSize(int)                     { panic("Unsupported operation") }
func (_ JiraWebhookEventGeneric) Finalize()                        {}

func (_ JiraWebhookEventGeneric) AvroCRC64Fingerprint() []byte {
	return []byte(JiraWebhookEventGenericAvroCRC64Fingerprint)
}

func (r JiraWebhookEventGeneric) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["timestamp"], err = json.Marshal(r.Timestamp)
	if err != nil {
		return nil, err
	}
	output["webhookEvent"], err = json.Marshal(r.WebhookEvent)
	if err != nil {
		return nil, err
	}
	output["rawJson"], err = json.Marshal(r.RawJson)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *JiraWebhookEventGeneric) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["timestamp"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Timestamp); err != nil {
			return err
		}
	} else {
		r.Timestamp = NewUnionNullLong()

		r.Timestamp = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["webhookEvent"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.WebhookEvent); err != nil {
			return err
		}
	} else {
		r.WebhookEvent = NewUnionNullString()

		r.WebhookEvent = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["rawJson"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RawJson); err != nil {
			return err
		}
	} else {
		r.RawJson = NewUnionNullString()

		r.RawJson = nil
	}
	return nil
}
