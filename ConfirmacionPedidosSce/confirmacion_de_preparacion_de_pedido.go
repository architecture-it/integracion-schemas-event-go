// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ConfirmacionPedidos.avsc
 */
package ConfirmacionPedidosSceEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ConfirmacionDePreparacionDePedido struct {
	Propietario string `json:"propietario"`

	NumeroDePedidoInterno string `json:"numeroDePedidoInterno"`

	Remito string `json:"remito"`

	NumeroDePedidoDeCliente string `json:"numeroDePedidoDeCliente"`

	TipoDePedido string `json:"tipoDePedido"`
}

const ConfirmacionDePreparacionDePedidoAvroCRC64Fingerprint = "\xad\x13\x17\xee\xbbcf="

func NewConfirmacionDePreparacionDePedido() ConfirmacionDePreparacionDePedido {
	r := ConfirmacionDePreparacionDePedido{}
	return r
}

func DeserializeConfirmacionDePreparacionDePedido(r io.Reader) (ConfirmacionDePreparacionDePedido, error) {
	t := NewConfirmacionDePreparacionDePedido()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeConfirmacionDePreparacionDePedidoFromSchema(r io.Reader, schema string) (ConfirmacionDePreparacionDePedido, error) {
	t := NewConfirmacionDePreparacionDePedido()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeConfirmacionDePreparacionDePedido(r ConfirmacionDePreparacionDePedido, w io.Writer) error {
	var err error
	err = vm.WriteString(r.Propietario, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.NumeroDePedidoInterno, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.Remito, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.NumeroDePedidoDeCliente, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.TipoDePedido, w)
	if err != nil {
		return err
	}
	return err
}

func (r ConfirmacionDePreparacionDePedido) Serialize(w io.Writer) error {
	return writeConfirmacionDePreparacionDePedido(r, w)
}

func (r ConfirmacionDePreparacionDePedido) Schema() string {
	return "{\"fields\":[{\"name\":\"propietario\",\"type\":\"string\"},{\"name\":\"numeroDePedidoInterno\",\"type\":\"string\"},{\"name\":\"remito\",\"type\":\"string\"},{\"name\":\"numeroDePedidoDeCliente\",\"type\":\"string\"},{\"name\":\"tipoDePedido\",\"type\":\"string\"}],\"name\":\"Andreani.ConfirmacionPedidosSce.Events.Record.ConfirmacionDePreparacionDePedido\",\"type\":\"record\"}"
}

func (r ConfirmacionDePreparacionDePedido) SchemaName() string {
	return "Andreani.ConfirmacionPedidosSce.Events.Record.ConfirmacionDePreparacionDePedido"
}

func (_ ConfirmacionDePreparacionDePedido) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) SetString(v string)   { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ConfirmacionDePreparacionDePedido) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.Propietario}

		return w

	case 1:
		w := types.String{Target: &r.NumeroDePedidoInterno}

		return w

	case 2:
		w := types.String{Target: &r.Remito}

		return w

	case 3:
		w := types.String{Target: &r.NumeroDePedidoDeCliente}

		return w

	case 4:
		w := types.String{Target: &r.TipoDePedido}

		return w

	}
	panic("Unknown field index")
}

func (r *ConfirmacionDePreparacionDePedido) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *ConfirmacionDePreparacionDePedido) NullField(i int) {
	switch i {
	}
	panic("Not a nullable field index")
}

func (_ ConfirmacionDePreparacionDePedido) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ ConfirmacionDePreparacionDePedido) AppendArray() types.Field { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) HintSize(int)             { panic("Unsupported operation") }
func (_ ConfirmacionDePreparacionDePedido) Finalize()                {}

func (_ ConfirmacionDePreparacionDePedido) AvroCRC64Fingerprint() []byte {
	return []byte(ConfirmacionDePreparacionDePedidoAvroCRC64Fingerprint)
}

func (r ConfirmacionDePreparacionDePedido) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["propietario"], err = json.Marshal(r.Propietario)
	if err != nil {
		return nil, err
	}
	output["numeroDePedidoInterno"], err = json.Marshal(r.NumeroDePedidoInterno)
	if err != nil {
		return nil, err
	}
	output["remito"], err = json.Marshal(r.Remito)
	if err != nil {
		return nil, err
	}
	output["numeroDePedidoDeCliente"], err = json.Marshal(r.NumeroDePedidoDeCliente)
	if err != nil {
		return nil, err
	}
	output["tipoDePedido"], err = json.Marshal(r.TipoDePedido)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ConfirmacionDePreparacionDePedido) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["propietario"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Propietario); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for propietario")
	}
	val = func() json.RawMessage {
		if v, ok := fields["numeroDePedidoInterno"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDePedidoInterno); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for numeroDePedidoInterno")
	}
	val = func() json.RawMessage {
		if v, ok := fields["remito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Remito); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for remito")
	}
	val = func() json.RawMessage {
		if v, ok := fields["numeroDePedidoDeCliente"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDePedidoDeCliente); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for numeroDePedidoDeCliente")
	}
	val = func() json.RawMessage {
		if v, ok := fields["tipoDePedido"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.TipoDePedido); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for tipoDePedido")
	}
	return nil
}
