// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     BultoClasificado.avsc
 */
package SppSchemaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type BultoClasificado struct {
	CodigoEnEtiqueta string `json:"codigoEnEtiqueta"`

	RampaPrevista *UnionNullString `json:"rampaPrevista"`

	RampaReal string `json:"rampaReal"`

	ModoOperativo string `json:"modoOperativo"`

	Donde *UnionNullDatosSucursal `json:"donde"`

	FechaProcesamiento *UnionNullString `json:"fechaProcesamiento"`

	SistemaOrigen SistemaOrigen `json:"sistemaOrigen"`

	DescripcionSistemOrigen *UnionNullString `json:"descripcionSistemOrigen"`

	Sorter Sorter `json:"sorter"`
}

const BultoClasificadoAvroCRC64Fingerprint = "Ҭ\x90\x9dƆ?\xbb"

func NewBultoClasificado() BultoClasificado {
	r := BultoClasificado{}
	return r
}

func DeserializeBultoClasificado(r io.Reader) (BultoClasificado, error) {
	t := NewBultoClasificado()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeBultoClasificadoFromSchema(r io.Reader, schema string) (BultoClasificado, error) {
	t := NewBultoClasificado()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeBultoClasificado(r BultoClasificado, w io.Writer) error {
	var err error
	err = vm.WriteString(r.CodigoEnEtiqueta, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.RampaPrevista, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.RampaReal, w)
	if err != nil {
		return err
	}
	err = vm.WriteString(r.ModoOperativo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDatosSucursal(r.Donde, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaProcesamiento, w)
	if err != nil {
		return err
	}
	err = writeSistemaOrigen(r.SistemaOrigen, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DescripcionSistemOrigen, w)
	if err != nil {
		return err
	}
	err = writeSorter(r.Sorter, w)
	if err != nil {
		return err
	}
	return err
}

func (r BultoClasificado) Serialize(w io.Writer) error {
	return writeBultoClasificado(r, w)
}

func (r BultoClasificado) Schema() string {
	return "{\"fields\":[{\"name\":\"codigoEnEtiqueta\",\"type\":\"string\"},{\"name\":\"rampaPrevista\",\"type\":[\"null\",\"string\"]},{\"name\":\"rampaReal\",\"type\":\"string\"},{\"name\":\"modoOperativo\",\"type\":\"string\"},{\"name\":\"donde\",\"type\":[\"null\",{\"fields\":[{\"name\":\"codigo\",\"type\":[\"null\",\"string\"]},{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"nombre\",\"type\":[\"null\",\"string\"]}],\"name\":\"DatosSucursal\",\"type\":\"record\"}]},{\"name\":\"fechaProcesamiento\",\"type\":[\"null\",\"string\"]},{\"name\":\"sistemaOrigen\",\"type\":{\"name\":\"SistemaOrigen\",\"symbols\":[\"undefined\",\"INTEGRA\",\"ALERTRAN\",\"EXTERNO\",\"DMS\"],\"type\":\"enum\"}},{\"name\":\"descripcionSistemOrigen\",\"type\":[\"null\",\"string\"]},{\"name\":\"sorter\",\"type\":{\"name\":\"Sorter\",\"symbols\":[\"MINI\",\"VERTICAL\",\"TRUXSORTER\",\"HORIZONTAL\",\"OTRO\"],\"type\":\"enum\"}}],\"name\":\"Andreani.SppSchema.Events.BultoClasificado\",\"type\":\"record\"}"
}

func (r BultoClasificado) SchemaName() string {
	return "Andreani.SppSchema.Events.BultoClasificado"
}

func (_ BultoClasificado) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ BultoClasificado) SetInt(v int32)       { panic("Unsupported operation") }
func (_ BultoClasificado) SetLong(v int64)      { panic("Unsupported operation") }
func (_ BultoClasificado) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ BultoClasificado) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ BultoClasificado) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ BultoClasificado) SetString(v string)   { panic("Unsupported operation") }
func (_ BultoClasificado) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *BultoClasificado) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.CodigoEnEtiqueta}

		return w

	case 1:
		r.RampaPrevista = NewUnionNullString()

		return r.RampaPrevista
	case 2:
		w := types.String{Target: &r.RampaReal}

		return w

	case 3:
		w := types.String{Target: &r.ModoOperativo}

		return w

	case 4:
		r.Donde = NewUnionNullDatosSucursal()

		return r.Donde
	case 5:
		r.FechaProcesamiento = NewUnionNullString()

		return r.FechaProcesamiento
	case 6:
		w := SistemaOrigenWrapper{Target: &r.SistemaOrigen}

		return w

	case 7:
		r.DescripcionSistemOrigen = NewUnionNullString()

		return r.DescripcionSistemOrigen
	case 8:
		w := SorterWrapper{Target: &r.Sorter}

		return w

	}
	panic("Unknown field index")
}

func (r *BultoClasificado) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *BultoClasificado) NullField(i int) {
	switch i {
	case 1:
		r.RampaPrevista = nil
		return
	case 4:
		r.Donde = nil
		return
	case 5:
		r.FechaProcesamiento = nil
		return
	case 7:
		r.DescripcionSistemOrigen = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ BultoClasificado) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ BultoClasificado) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ BultoClasificado) HintSize(int)                     { panic("Unsupported operation") }
func (_ BultoClasificado) Finalize()                        {}

func (_ BultoClasificado) AvroCRC64Fingerprint() []byte {
	return []byte(BultoClasificadoAvroCRC64Fingerprint)
}

func (r BultoClasificado) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["codigoEnEtiqueta"], err = json.Marshal(r.CodigoEnEtiqueta)
	if err != nil {
		return nil, err
	}
	output["rampaPrevista"], err = json.Marshal(r.RampaPrevista)
	if err != nil {
		return nil, err
	}
	output["rampaReal"], err = json.Marshal(r.RampaReal)
	if err != nil {
		return nil, err
	}
	output["modoOperativo"], err = json.Marshal(r.ModoOperativo)
	if err != nil {
		return nil, err
	}
	output["donde"], err = json.Marshal(r.Donde)
	if err != nil {
		return nil, err
	}
	output["fechaProcesamiento"], err = json.Marshal(r.FechaProcesamiento)
	if err != nil {
		return nil, err
	}
	output["sistemaOrigen"], err = json.Marshal(r.SistemaOrigen)
	if err != nil {
		return nil, err
	}
	output["descripcionSistemOrigen"], err = json.Marshal(r.DescripcionSistemOrigen)
	if err != nil {
		return nil, err
	}
	output["sorter"], err = json.Marshal(r.Sorter)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *BultoClasificado) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["codigoEnEtiqueta"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoEnEtiqueta); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for codigoEnEtiqueta")
	}
	val = func() json.RawMessage {
		if v, ok := fields["rampaPrevista"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RampaPrevista); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for rampaPrevista")
	}
	val = func() json.RawMessage {
		if v, ok := fields["rampaReal"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.RampaReal); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for rampaReal")
	}
	val = func() json.RawMessage {
		if v, ok := fields["modoOperativo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ModoOperativo); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for modoOperativo")
	}
	val = func() json.RawMessage {
		if v, ok := fields["donde"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Donde); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for donde")
	}
	val = func() json.RawMessage {
		if v, ok := fields["fechaProcesamiento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaProcesamiento); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for fechaProcesamiento")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sistemaOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SistemaOrigen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sistemaOrigen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["descripcionSistemOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DescripcionSistemOrigen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for descripcionSistemOrigen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sorter"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sorter); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sorter")
	}
	return nil
}
