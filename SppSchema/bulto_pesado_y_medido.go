// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     BultoPesadoYMedido.avsc
 */
package SppSchemaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type BultoPesadoYMedido struct {
	CodigoEnEtiqueta string `json:"codigoEnEtiqueta"`

	PesoEnGramos *UnionNullDouble `json:"pesoEnGramos"`

	VolumenEnCm3 *UnionNullDouble `json:"volumenEnCm3"`

	AltoEnCm float64 `json:"altoEnCm"`

	LargoEnCm float64 `json:"largoEnCm"`

	AnchoEnCm float64 `json:"anchoEnCm"`

	Donde *UnionNullDatosSucursal `json:"donde"`

	FechaProcesamiento *UnionNullString `json:"fechaProcesamiento"`

	SistemaOrigen SistemaOrigen `json:"sistemaOrigen"`

	DescripcionSistemOrigen *UnionNullString `json:"descripcionSistemOrigen"`

	Sorter Sorter `json:"sorter"`

	ReportePeso ReportePeso `json:"reportePeso"`

	ReporteVolumen ReporteVolumen `json:"reporteVolumen"`

	ReporteLectura ReporteLectura `json:"reporteLectura"`
}

const BultoPesadoYMedidoAvroCRC64Fingerprint = "\x9eA\xeb|i\xa1\x05\xc0"

func NewBultoPesadoYMedido() BultoPesadoYMedido {
	r := BultoPesadoYMedido{}
	return r
}

func DeserializeBultoPesadoYMedido(r io.Reader) (BultoPesadoYMedido, error) {
	t := NewBultoPesadoYMedido()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeBultoPesadoYMedidoFromSchema(r io.Reader, schema string) (BultoPesadoYMedido, error) {
	t := NewBultoPesadoYMedido()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeBultoPesadoYMedido(r BultoPesadoYMedido, w io.Writer) error {
	var err error
	err = vm.WriteString(r.CodigoEnEtiqueta, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDouble(r.PesoEnGramos, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDouble(r.VolumenEnCm3, w)
	if err != nil {
		return err
	}
	err = vm.WriteDouble(r.AltoEnCm, w)
	if err != nil {
		return err
	}
	err = vm.WriteDouble(r.LargoEnCm, w)
	if err != nil {
		return err
	}
	err = vm.WriteDouble(r.AnchoEnCm, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDatosSucursal(r.Donde, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaProcesamiento, w)
	if err != nil {
		return err
	}
	err = writeSistemaOrigen(r.SistemaOrigen, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DescripcionSistemOrigen, w)
	if err != nil {
		return err
	}
	err = writeSorter(r.Sorter, w)
	if err != nil {
		return err
	}
	err = writeReportePeso(r.ReportePeso, w)
	if err != nil {
		return err
	}
	err = writeReporteVolumen(r.ReporteVolumen, w)
	if err != nil {
		return err
	}
	err = writeReporteLectura(r.ReporteLectura, w)
	if err != nil {
		return err
	}
	return err
}

func (r BultoPesadoYMedido) Serialize(w io.Writer) error {
	return writeBultoPesadoYMedido(r, w)
}

func (r BultoPesadoYMedido) Schema() string {
	return "{\"fields\":[{\"name\":\"codigoEnEtiqueta\",\"type\":\"string\"},{\"name\":\"pesoEnGramos\",\"type\":[\"null\",\"double\"]},{\"name\":\"volumenEnCm3\",\"type\":[\"null\",\"double\"]},{\"name\":\"altoEnCm\",\"type\":\"double\"},{\"name\":\"largoEnCm\",\"type\":\"double\"},{\"name\":\"anchoEnCm\",\"type\":\"double\"},{\"name\":\"donde\",\"type\":[\"null\",{\"fields\":[{\"name\":\"codigo\",\"type\":[\"null\",\"string\"]},{\"name\":\"id\",\"type\":[\"null\",\"string\"]},{\"name\":\"nombre\",\"type\":[\"null\",\"string\"]}],\"name\":\"DatosSucursal\",\"type\":\"record\"}]},{\"name\":\"fechaProcesamiento\",\"type\":[\"null\",\"string\"]},{\"name\":\"sistemaOrigen\",\"type\":{\"name\":\"SistemaOrigen\",\"symbols\":[\"undefined\",\"INTEGRA\",\"ALERTRAN\",\"EXTERNO\",\"DMS\"],\"type\":\"enum\"}},{\"name\":\"descripcionSistemOrigen\",\"type\":[\"null\",\"string\"]},{\"name\":\"sorter\",\"type\":{\"name\":\"Sorter\",\"symbols\":[\"MINI\",\"VERTICAL\",\"TRUXSORTER\",\"HORIZONTAL\",\"OTRO\"],\"type\":\"enum\"}},{\"name\":\"reportePeso\",\"type\":{\"name\":\"ReportePeso\",\"symbols\":[\"noRead\",\"tooLong\",\"tooShort\",\"ok\"],\"type\":\"enum\"}},{\"name\":\"reporteVolumen\",\"type\":{\"name\":\"ReporteVolumen\",\"symbols\":[\"noRead\",\"ok\"],\"type\":\"enum\"}},{\"name\":\"reporteLectura\",\"type\":{\"name\":\"ReporteLectura\",\"symbols\":[\"noRead\",\"tooLong\",\"tooShort\",\"ok\"],\"type\":\"enum\"}}],\"name\":\"Andreani.SppSchema.Events.BultoPesadoYMedido\",\"type\":\"record\"}"
}

func (r BultoPesadoYMedido) SchemaName() string {
	return "Andreani.SppSchema.Events.BultoPesadoYMedido"
}

func (_ BultoPesadoYMedido) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) SetInt(v int32)       { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) SetLong(v int64)      { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) SetString(v string)   { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *BultoPesadoYMedido) Get(i int) types.Field {
	switch i {
	case 0:
		w := types.String{Target: &r.CodigoEnEtiqueta}

		return w

	case 1:
		r.PesoEnGramos = NewUnionNullDouble()

		return r.PesoEnGramos
	case 2:
		r.VolumenEnCm3 = NewUnionNullDouble()

		return r.VolumenEnCm3
	case 3:
		w := types.Double{Target: &r.AltoEnCm}

		return w

	case 4:
		w := types.Double{Target: &r.LargoEnCm}

		return w

	case 5:
		w := types.Double{Target: &r.AnchoEnCm}

		return w

	case 6:
		r.Donde = NewUnionNullDatosSucursal()

		return r.Donde
	case 7:
		r.FechaProcesamiento = NewUnionNullString()

		return r.FechaProcesamiento
	case 8:
		w := SistemaOrigenWrapper{Target: &r.SistemaOrigen}

		return w

	case 9:
		r.DescripcionSistemOrigen = NewUnionNullString()

		return r.DescripcionSistemOrigen
	case 10:
		w := SorterWrapper{Target: &r.Sorter}

		return w

	case 11:
		w := ReportePesoWrapper{Target: &r.ReportePeso}

		return w

	case 12:
		w := ReporteVolumenWrapper{Target: &r.ReporteVolumen}

		return w

	case 13:
		w := ReporteLecturaWrapper{Target: &r.ReporteLectura}

		return w

	}
	panic("Unknown field index")
}

func (r *BultoPesadoYMedido) SetDefault(i int) {
	switch i {
	}
	panic("Unknown field index")
}

func (r *BultoPesadoYMedido) NullField(i int) {
	switch i {
	case 1:
		r.PesoEnGramos = nil
		return
	case 2:
		r.VolumenEnCm3 = nil
		return
	case 6:
		r.Donde = nil
		return
	case 7:
		r.FechaProcesamiento = nil
		return
	case 9:
		r.DescripcionSistemOrigen = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ BultoPesadoYMedido) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) HintSize(int)                     { panic("Unsupported operation") }
func (_ BultoPesadoYMedido) Finalize()                        {}

func (_ BultoPesadoYMedido) AvroCRC64Fingerprint() []byte {
	return []byte(BultoPesadoYMedidoAvroCRC64Fingerprint)
}

func (r BultoPesadoYMedido) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["codigoEnEtiqueta"], err = json.Marshal(r.CodigoEnEtiqueta)
	if err != nil {
		return nil, err
	}
	output["pesoEnGramos"], err = json.Marshal(r.PesoEnGramos)
	if err != nil {
		return nil, err
	}
	output["volumenEnCm3"], err = json.Marshal(r.VolumenEnCm3)
	if err != nil {
		return nil, err
	}
	output["altoEnCm"], err = json.Marshal(r.AltoEnCm)
	if err != nil {
		return nil, err
	}
	output["largoEnCm"], err = json.Marshal(r.LargoEnCm)
	if err != nil {
		return nil, err
	}
	output["anchoEnCm"], err = json.Marshal(r.AnchoEnCm)
	if err != nil {
		return nil, err
	}
	output["donde"], err = json.Marshal(r.Donde)
	if err != nil {
		return nil, err
	}
	output["fechaProcesamiento"], err = json.Marshal(r.FechaProcesamiento)
	if err != nil {
		return nil, err
	}
	output["sistemaOrigen"], err = json.Marshal(r.SistemaOrigen)
	if err != nil {
		return nil, err
	}
	output["descripcionSistemOrigen"], err = json.Marshal(r.DescripcionSistemOrigen)
	if err != nil {
		return nil, err
	}
	output["sorter"], err = json.Marshal(r.Sorter)
	if err != nil {
		return nil, err
	}
	output["reportePeso"], err = json.Marshal(r.ReportePeso)
	if err != nil {
		return nil, err
	}
	output["reporteVolumen"], err = json.Marshal(r.ReporteVolumen)
	if err != nil {
		return nil, err
	}
	output["reporteLectura"], err = json.Marshal(r.ReporteLectura)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *BultoPesadoYMedido) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["codigoEnEtiqueta"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.CodigoEnEtiqueta); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for codigoEnEtiqueta")
	}
	val = func() json.RawMessage {
		if v, ok := fields["pesoEnGramos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.PesoEnGramos); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for pesoEnGramos")
	}
	val = func() json.RawMessage {
		if v, ok := fields["volumenEnCm3"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.VolumenEnCm3); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for volumenEnCm3")
	}
	val = func() json.RawMessage {
		if v, ok := fields["altoEnCm"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AltoEnCm); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for altoEnCm")
	}
	val = func() json.RawMessage {
		if v, ok := fields["largoEnCm"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.LargoEnCm); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for largoEnCm")
	}
	val = func() json.RawMessage {
		if v, ok := fields["anchoEnCm"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.AnchoEnCm); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for anchoEnCm")
	}
	val = func() json.RawMessage {
		if v, ok := fields["donde"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Donde); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for donde")
	}
	val = func() json.RawMessage {
		if v, ok := fields["fechaProcesamiento"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaProcesamiento); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for fechaProcesamiento")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sistemaOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SistemaOrigen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sistemaOrigen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["descripcionSistemOrigen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DescripcionSistemOrigen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for descripcionSistemOrigen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["sorter"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Sorter); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for sorter")
	}
	val = func() json.RawMessage {
		if v, ok := fields["reportePeso"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReportePeso); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for reportePeso")
	}
	val = func() json.RawMessage {
		if v, ok := fields["reporteVolumen"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReporteVolumen); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for reporteVolumen")
	}
	val = func() json.RawMessage {
		if v, ok := fields["reporteLectura"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.ReporteLectura); err != nil {
			return err
		}
	} else {
		return fmt.Errorf("no value specified for reporteLectura")
	}
	return nil
}
