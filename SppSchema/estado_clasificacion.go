// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     EstadoClasificacion.avsc
 */
package SppSchemaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type EstadoClasificacion int32

const (
	EstadoClasificacionNormal                    EstadoClasificacion = 0
	EstadoClasificacionSalidaCerrada             EstadoClasificacion = 1
	EstadoClasificacionNoOutputRampOTimeOut      EstadoClasificacion = 2
	EstadoClasificacionPaquetePerdido            EstadoClasificacion = 3
	EstadoClasificacionRecirculacion             EstadoClasificacion = 4
	EstadoClasificacionSinVolumenOPeso           EstadoClasificacion = 5
	EstadoClasificacionFueraDeRangoDimensionPeso EstadoClasificacion = 6
	EstadoClasificacionOtroError                 EstadoClasificacion = 7
	EstadoClasificacionUndefined                 EstadoClasificacion = 8
)

func (e EstadoClasificacion) String() string {
	switch e {
	case EstadoClasificacionNormal:
		return "Normal"
	case EstadoClasificacionSalidaCerrada:
		return "SalidaCerrada"
	case EstadoClasificacionNoOutputRampOTimeOut:
		return "NoOutputRampOTimeOut"
	case EstadoClasificacionPaquetePerdido:
		return "PaquetePerdido"
	case EstadoClasificacionRecirculacion:
		return "Recirculacion"
	case EstadoClasificacionSinVolumenOPeso:
		return "SinVolumenOPeso"
	case EstadoClasificacionFueraDeRangoDimensionPeso:
		return "FueraDeRangoDimensionPeso"
	case EstadoClasificacionOtroError:
		return "OtroError"
	case EstadoClasificacionUndefined:
		return "Undefined"
	}
	return "unknown"
}

func writeEstadoClasificacion(r EstadoClasificacion, w io.Writer) error {
	return vm.WriteInt(int32(r), w)
}

func NewEstadoClasificacionValue(raw string) (r EstadoClasificacion, err error) {
	switch raw {
	case "Normal":
		return EstadoClasificacionNormal, nil
	case "SalidaCerrada":
		return EstadoClasificacionSalidaCerrada, nil
	case "NoOutputRampOTimeOut":
		return EstadoClasificacionNoOutputRampOTimeOut, nil
	case "PaquetePerdido":
		return EstadoClasificacionPaquetePerdido, nil
	case "Recirculacion":
		return EstadoClasificacionRecirculacion, nil
	case "SinVolumenOPeso":
		return EstadoClasificacionSinVolumenOPeso, nil
	case "FueraDeRangoDimensionPeso":
		return EstadoClasificacionFueraDeRangoDimensionPeso, nil
	case "OtroError":
		return EstadoClasificacionOtroError, nil
	case "Undefined":
		return EstadoClasificacionUndefined, nil
	}

	return -1, fmt.Errorf("invalid value for EstadoClasificacion: '%s'", raw)

}

func (b EstadoClasificacion) MarshalJSON() ([]byte, error) {
	return json.Marshal(b.String())
}

func (b *EstadoClasificacion) UnmarshalJSON(data []byte) error {
	var stringVal string
	err := json.Unmarshal(data, &stringVal)
	if err != nil {
		return err
	}
	val, err := NewEstadoClasificacionValue(stringVal)
	*b = val
	return err
}

type EstadoClasificacionWrapper struct {
	Target *EstadoClasificacion
}

func (b EstadoClasificacionWrapper) SetBoolean(v bool) {
	panic("Unable to assign boolean to int field")
}

func (b EstadoClasificacionWrapper) SetInt(v int32) {
	*(b.Target) = EstadoClasificacion(v)
}

func (b EstadoClasificacionWrapper) SetLong(v int64) {
	panic("Unable to assign long to int field")
}

func (b EstadoClasificacionWrapper) SetFloat(v float32) {
	panic("Unable to assign float to int field")
}

func (b EstadoClasificacionWrapper) SetUnionElem(v int64) {
	panic("Unable to assign union elem to int field")
}

func (b EstadoClasificacionWrapper) SetDouble(v float64) {
	panic("Unable to assign double to int field")
}

func (b EstadoClasificacionWrapper) SetBytes(v []byte) {
	panic("Unable to assign bytes to int field")
}

func (b EstadoClasificacionWrapper) SetString(v string) {
	panic("Unable to assign string to int field")
}

func (b EstadoClasificacionWrapper) Get(i int) types.Field {
	panic("Unable to get field from int field")
}

func (b EstadoClasificacionWrapper) SetDefault(i int) {
	panic("Unable to set default on int field")
}

func (b EstadoClasificacionWrapper) AppendMap(key string) types.Field {
	panic("Unable to append map key to from int field")
}

func (b EstadoClasificacionWrapper) AppendArray() types.Field {
	panic("Unable to append array element to from int field")
}

func (b EstadoClasificacionWrapper) NullField(int) {
	panic("Unable to null field in int field")
}

func (b EstadoClasificacionWrapper) HintSize(int) {
	panic("Unable to hint size in int field")
}

func (b EstadoClasificacionWrapper) Finalize() {}
