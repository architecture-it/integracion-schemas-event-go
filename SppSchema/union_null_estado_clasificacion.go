// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     BultoInformadoPorSorter.avsc
 */
package SppSchemaEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionNullEstadoClasificacionTypeEnum int

const (
	UnionNullEstadoClasificacionTypeEnumEstadoClasificacion UnionNullEstadoClasificacionTypeEnum = 1
)

type UnionNullEstadoClasificacion struct {
	Null                *types.NullVal
	EstadoClasificacion EstadoClasificacion
	UnionType           UnionNullEstadoClasificacionTypeEnum
}

func writeUnionNullEstadoClasificacion(r *UnionNullEstadoClasificacion, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(0, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionNullEstadoClasificacionTypeEnumEstadoClasificacion:
		return writeEstadoClasificacion(r.EstadoClasificacion, w)
	}
	return fmt.Errorf("invalid value for *UnionNullEstadoClasificacion")
}

func NewUnionNullEstadoClasificacion() *UnionNullEstadoClasificacion {
	return &UnionNullEstadoClasificacion{}
}

func (r *UnionNullEstadoClasificacion) Serialize(w io.Writer) error {
	return writeUnionNullEstadoClasificacion(r, w)
}

func DeserializeUnionNullEstadoClasificacion(r io.Reader) (*UnionNullEstadoClasificacion, error) {
	t := NewUnionNullEstadoClasificacion()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionNullEstadoClasificacionFromSchema(r io.Reader, schema string) (*UnionNullEstadoClasificacion, error) {
	t := NewUnionNullEstadoClasificacion()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionNullEstadoClasificacion) Schema() string {
	return "[\"null\",{\"name\":\"EstadoClasificacion\",\"symbols\":[\"Normal\",\"SalidaCerrada\",\"NoOutputRampOTimeOut\",\"PaquetePerdido\",\"Recirculacion\",\"SinVolumenOPeso\",\"FueraDeRangoDimensionPeso\",\"OtroError\",\"Undefined\",\"NoRead\"],\"type\":\"enum\"}]"
}

func (_ *UnionNullEstadoClasificacion) SetBoolean(v bool)   { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) SetInt(v int32)      { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) SetFloat(v float32)  { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) SetDouble(v float64) { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) SetBytes(v []byte)   { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) SetString(v string)  { panic("Unsupported operation") }

func (r *UnionNullEstadoClasificacion) SetLong(v int64) {

	r.UnionType = (UnionNullEstadoClasificacionTypeEnum)(v)
}

func (r *UnionNullEstadoClasificacion) Get(i int) types.Field {

	switch i {
	case 0:
		return r.Null
	case 1:
		return &EstadoClasificacionWrapper{Target: (&r.EstadoClasificacion)}
	}
	panic("Unknown field index")
}
func (_ *UnionNullEstadoClasificacion) NullField(i int)  { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) HintSize(i int)   { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) SetDefault(i int) { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionNullEstadoClasificacion) AppendArray() types.Field { panic("Unsupported operation") }
func (_ *UnionNullEstadoClasificacion) Finalize()                {}

func (r *UnionNullEstadoClasificacion) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionNullEstadoClasificacionTypeEnumEstadoClasificacion:
		return json.Marshal(map[string]interface{}{"Andreani.SppSchema.Events.EstadoClasificacion": r.EstadoClasificacion})
	}
	return nil, fmt.Errorf("invalid value for *UnionNullEstadoClasificacion")
}

func (r *UnionNullEstadoClasificacion) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["Andreani.SppSchema.Events.EstadoClasificacion"]; ok {
		r.UnionType = 1
		return json.Unmarshal([]byte(value), &r.EstadoClasificacion)
	}
	return fmt.Errorf("invalid value for *UnionNullEstadoClasificacion")
}
