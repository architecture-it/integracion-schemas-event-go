// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     ResponseGenerarPreenvios.avsc
 */
package PreEnvioBackendEvents

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

var _ = fmt.Printf

type ResponseGenerarPreenvios struct {
	Estado *UnionNullString `json:"Estado"`

	Tipo *UnionNullString `json:"Tipo"`

	FechaCreacion *UnionNullString `json:"FechaCreacion"`

	NumeroDePermisionaria *UnionNullString `json:"NumeroDePermisionaria"`

	DescripcionServicio *UnionNullString `json:"DescripcionServicio"`

	EtiquetaRemito *UnionNullString `json:"EtiquetaRemito"`

	Bultos *UnionNullArrayBulto `json:"Bultos"`

	SucursalDeDistribucion *UnionNullDatosSucursal `json:"SucursalDeDistribucion"`

	SucursalDeRendicion *UnionNullDatosSucursal `json:"SucursalDeRendicion"`

	SucursalDeImposicion *UnionNullDatosSucursal `json:"SucursalDeImposicion"`
}

const ResponseGenerarPreenviosAvroCRC64Fingerprint = "\xf9^\x01\xa0\x8c\xf9\xae\xaf"

func NewResponseGenerarPreenvios() ResponseGenerarPreenvios {
	r := ResponseGenerarPreenvios{}
	r.Estado = nil
	r.Tipo = nil
	r.FechaCreacion = nil
	r.NumeroDePermisionaria = nil
	r.DescripcionServicio = nil
	r.EtiquetaRemito = nil
	r.Bultos = nil
	r.SucursalDeDistribucion = nil
	r.SucursalDeRendicion = nil
	r.SucursalDeImposicion = nil
	return r
}

func DeserializeResponseGenerarPreenvios(r io.Reader) (ResponseGenerarPreenvios, error) {
	t := NewResponseGenerarPreenvios()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func DeserializeResponseGenerarPreenviosFromSchema(r io.Reader, schema string) (ResponseGenerarPreenvios, error) {
	t := NewResponseGenerarPreenvios()

	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, &t)
	return t, err
}

func writeResponseGenerarPreenvios(r ResponseGenerarPreenvios, w io.Writer) error {
	var err error
	err = writeUnionNullString(r.Estado, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.Tipo, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.FechaCreacion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.NumeroDePermisionaria, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.DescripcionServicio, w)
	if err != nil {
		return err
	}
	err = writeUnionNullString(r.EtiquetaRemito, w)
	if err != nil {
		return err
	}
	err = writeUnionNullArrayBulto(r.Bultos, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDatosSucursal(r.SucursalDeDistribucion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDatosSucursal(r.SucursalDeRendicion, w)
	if err != nil {
		return err
	}
	err = writeUnionNullDatosSucursal(r.SucursalDeImposicion, w)
	if err != nil {
		return err
	}
	return err
}

func (r ResponseGenerarPreenvios) Serialize(w io.Writer) error {
	return writeResponseGenerarPreenvios(r, w)
}

func (r ResponseGenerarPreenvios) Schema() string {
	return "{\"fields\":[{\"default\":null,\"name\":\"Estado\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Tipo\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"FechaCreacion\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroDePermisionaria\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"DescripcionServicio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"EtiquetaRemito\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Bultos\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"default\":null,\"name\":\"NumeroDeBulto\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"NumeroDeEnvio\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Totalizador\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Linking\",\"type\":[\"null\",{\"items\":{\"fields\":[{\"default\":null,\"name\":\"Meta\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Contenido\",\"type\":[\"null\",\"string\"]}],\"name\":\"ComponentesDeDireccion\",\"type\":\"record\"},\"type\":\"array\"}]}],\"name\":\"Bulto\",\"namespace\":\"Andreani.PreEnvioBackend.Events.Preenvio.Common\",\"type\":\"record\"},\"type\":\"array\"}]},{\"default\":null,\"name\":\"SucursalDeDistribucion\",\"type\":[\"null\",{\"fields\":[{\"default\":null,\"name\":\"Id\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Nomenclatura\",\"type\":[\"null\",\"string\"]},{\"default\":null,\"name\":\"Descripcion\",\"type\":[\"null\",\"string\"]}],\"name\":\"DatosSucursal\",\"namespace\":\"Andreani.PreEnvioBackend.Events.Preenvio.Common\",\"type\":\"record\"}]},{\"default\":null,\"name\":\"SucursalDeRendicion\",\"type\":[\"null\",\"Andreani.PreEnvioBackend.Events.Preenvio.Common.DatosSucursal\"]},{\"default\":null,\"name\":\"SucursalDeImposicion\",\"type\":[\"null\",\"Andreani.PreEnvioBackend.Events.Preenvio.Common.DatosSucursal\"]}],\"name\":\"Andreani.PreEnvioBackend.Events.Record.ResponseGenerarPreenvios\",\"type\":\"record\"}"
}

func (r ResponseGenerarPreenvios) SchemaName() string {
	return "Andreani.PreEnvioBackend.Events.Record.ResponseGenerarPreenvios"
}

func (_ ResponseGenerarPreenvios) SetBoolean(v bool)    { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) SetInt(v int32)       { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) SetLong(v int64)      { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) SetFloat(v float32)   { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) SetDouble(v float64)  { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) SetBytes(v []byte)    { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) SetString(v string)   { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) SetUnionElem(v int64) { panic("Unsupported operation") }

func (r *ResponseGenerarPreenvios) Get(i int) types.Field {
	switch i {
	case 0:
		r.Estado = NewUnionNullString()

		return r.Estado
	case 1:
		r.Tipo = NewUnionNullString()

		return r.Tipo
	case 2:
		r.FechaCreacion = NewUnionNullString()

		return r.FechaCreacion
	case 3:
		r.NumeroDePermisionaria = NewUnionNullString()

		return r.NumeroDePermisionaria
	case 4:
		r.DescripcionServicio = NewUnionNullString()

		return r.DescripcionServicio
	case 5:
		r.EtiquetaRemito = NewUnionNullString()

		return r.EtiquetaRemito
	case 6:
		r.Bultos = NewUnionNullArrayBulto()

		return r.Bultos
	case 7:
		r.SucursalDeDistribucion = NewUnionNullDatosSucursal()

		return r.SucursalDeDistribucion
	case 8:
		r.SucursalDeRendicion = NewUnionNullDatosSucursal()

		return r.SucursalDeRendicion
	case 9:
		r.SucursalDeImposicion = NewUnionNullDatosSucursal()

		return r.SucursalDeImposicion
	}
	panic("Unknown field index")
}

func (r *ResponseGenerarPreenvios) SetDefault(i int) {
	switch i {
	case 0:
		r.Estado = nil
		return
	case 1:
		r.Tipo = nil
		return
	case 2:
		r.FechaCreacion = nil
		return
	case 3:
		r.NumeroDePermisionaria = nil
		return
	case 4:
		r.DescripcionServicio = nil
		return
	case 5:
		r.EtiquetaRemito = nil
		return
	case 6:
		r.Bultos = nil
		return
	case 7:
		r.SucursalDeDistribucion = nil
		return
	case 8:
		r.SucursalDeRendicion = nil
		return
	case 9:
		r.SucursalDeImposicion = nil
		return
	}
	panic("Unknown field index")
}

func (r *ResponseGenerarPreenvios) NullField(i int) {
	switch i {
	case 0:
		r.Estado = nil
		return
	case 1:
		r.Tipo = nil
		return
	case 2:
		r.FechaCreacion = nil
		return
	case 3:
		r.NumeroDePermisionaria = nil
		return
	case 4:
		r.DescripcionServicio = nil
		return
	case 5:
		r.EtiquetaRemito = nil
		return
	case 6:
		r.Bultos = nil
		return
	case 7:
		r.SucursalDeDistribucion = nil
		return
	case 8:
		r.SucursalDeRendicion = nil
		return
	case 9:
		r.SucursalDeImposicion = nil
		return
	}
	panic("Not a nullable field index")
}

func (_ ResponseGenerarPreenvios) AppendMap(key string) types.Field { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) AppendArray() types.Field         { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) HintSize(int)                     { panic("Unsupported operation") }
func (_ ResponseGenerarPreenvios) Finalize()                        {}

func (_ ResponseGenerarPreenvios) AvroCRC64Fingerprint() []byte {
	return []byte(ResponseGenerarPreenviosAvroCRC64Fingerprint)
}

func (r ResponseGenerarPreenvios) MarshalJSON() ([]byte, error) {
	var err error
	output := make(map[string]json.RawMessage)
	output["Estado"], err = json.Marshal(r.Estado)
	if err != nil {
		return nil, err
	}
	output["Tipo"], err = json.Marshal(r.Tipo)
	if err != nil {
		return nil, err
	}
	output["FechaCreacion"], err = json.Marshal(r.FechaCreacion)
	if err != nil {
		return nil, err
	}
	output["NumeroDePermisionaria"], err = json.Marshal(r.NumeroDePermisionaria)
	if err != nil {
		return nil, err
	}
	output["DescripcionServicio"], err = json.Marshal(r.DescripcionServicio)
	if err != nil {
		return nil, err
	}
	output["EtiquetaRemito"], err = json.Marshal(r.EtiquetaRemito)
	if err != nil {
		return nil, err
	}
	output["Bultos"], err = json.Marshal(r.Bultos)
	if err != nil {
		return nil, err
	}
	output["SucursalDeDistribucion"], err = json.Marshal(r.SucursalDeDistribucion)
	if err != nil {
		return nil, err
	}
	output["SucursalDeRendicion"], err = json.Marshal(r.SucursalDeRendicion)
	if err != nil {
		return nil, err
	}
	output["SucursalDeImposicion"], err = json.Marshal(r.SucursalDeImposicion)
	if err != nil {
		return nil, err
	}
	return json.Marshal(output)
}

func (r *ResponseGenerarPreenvios) UnmarshalJSON(data []byte) error {
	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}

	var val json.RawMessage
	val = func() json.RawMessage {
		if v, ok := fields["Estado"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Estado); err != nil {
			return err
		}
	} else {
		r.Estado = NewUnionNullString()

		r.Estado = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Tipo"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Tipo); err != nil {
			return err
		}
	} else {
		r.Tipo = NewUnionNullString()

		r.Tipo = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["FechaCreacion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.FechaCreacion); err != nil {
			return err
		}
	} else {
		r.FechaCreacion = NewUnionNullString()

		r.FechaCreacion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["NumeroDePermisionaria"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.NumeroDePermisionaria); err != nil {
			return err
		}
	} else {
		r.NumeroDePermisionaria = NewUnionNullString()

		r.NumeroDePermisionaria = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["DescripcionServicio"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.DescripcionServicio); err != nil {
			return err
		}
	} else {
		r.DescripcionServicio = NewUnionNullString()

		r.DescripcionServicio = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["EtiquetaRemito"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.EtiquetaRemito); err != nil {
			return err
		}
	} else {
		r.EtiquetaRemito = NewUnionNullString()

		r.EtiquetaRemito = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["Bultos"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.Bultos); err != nil {
			return err
		}
	} else {
		r.Bultos = NewUnionNullArrayBulto()

		r.Bultos = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalDeDistribucion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDeDistribucion); err != nil {
			return err
		}
	} else {
		r.SucursalDeDistribucion = NewUnionNullDatosSucursal()

		r.SucursalDeDistribucion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalDeRendicion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDeRendicion); err != nil {
			return err
		}
	} else {
		r.SucursalDeRendicion = NewUnionNullDatosSucursal()

		r.SucursalDeRendicion = nil
	}
	val = func() json.RawMessage {
		if v, ok := fields["SucursalDeImposicion"]; ok {
			return v
		}
		return nil
	}()

	if val != nil {
		if err := json.Unmarshal([]byte(val), &r.SucursalDeImposicion); err != nil {
			return err
		}
	} else {
		r.SucursalDeImposicion = NewUnionNullDatosSucursal()

		r.SucursalDeImposicion = nil
	}
	return nil
}
